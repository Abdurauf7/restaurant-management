{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _delaunator = _interopRequireDefault(require(\"delaunator/delaunator.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n} // From https://github.com/d3/d3-delaunay/blob/master/src/delaunay.js\n\n\nfunction pointX(p) {\n  return p[0];\n}\n\nfunction pointY(p) {\n  return p[1];\n} // A triangulation is collinear if all its triangles have a non-null area\n\n\nfunction collinear(d) {\n  var triangles = d.triangles,\n      coords = d.coords;\n\n  for (var i = 0; i < triangles.length; i += 3) {\n    var a = 2 * triangles[i];\n    var b = 2 * triangles[i + 1];\n    var c = 2 * triangles[i + 2];\n    var cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1]) - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]); // eslint-disable-next-line no-magic-numbers\n\n    if (cross > 1e-10) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n} // eslint-disable-next-line max-params\n\n\nfunction flatArray(points, fx, fy, that) {\n  var n = points.length;\n  var array = new Float64Array(n * 2);\n\n  for (var i = 0; i < n; ++i) {\n    var p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n\n  return array;\n}\n\nvar Delaunay =\n/*#__PURE__*/\nfunction () {\n  function Delaunay(points) {\n    var delaunator = new _delaunator[\"default\"](points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = delaunator.coords;\n\n    this._init(delaunator);\n  } // eslint-disable-next-line max-statements, complexity\n\n\n  var _proto = Delaunay.prototype;\n\n  _proto._init = function _init(delaunator) {\n    var d = delaunator;\n    var points = this.points; // check for collinear\n    // eslint-disable-next-line no-magic-numbers\n\n    if (d.hull && d.hull.length > 2 && collinear(d)) {\n      this.collinear = Int32Array.from({\n        length: points.length / 2\n      }, function (_, i) {\n        return i;\n      }).sort(function (i, j) {\n        return points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1];\n      }); // for exact neighbors\n\n      var e = this.collinear[0];\n      var f = this.collinear[this.collinear.length - 1];\n      var bounds = [points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1]];\n      var r = 1e-8 * // eslint-disable-line no-magic-numbers\n      Math.sqrt(Math.pow(bounds[3] - bounds[1], 2) + Math.pow(bounds[2] - bounds[0], 2));\n\n      for (var i = 0, n = points.length / 2; i < n; ++i) {\n        var p = jitter(points[2 * i], points[2 * i + 1], r);\n        points[2 * i] = p[0];\n        points[2 * i + 1] = p[1];\n      }\n\n      delaunator = new _delaunator[\"default\"](points);\n    }\n\n    var halfedges = this.halfedges = delaunator.halfedges;\n    var hull = this.hull = delaunator.hull;\n    var triangles = this.triangles = delaunator.triangles;\n    var inedges = this.inedges.fill(-1);\n\n    var hullIndex = this._hullIndex.fill(-1); // Compute an index from each point to an (arbitrary) incoming halfedge\n    // Used to give the first neighbor of each point; for this reason,\n    // on the hull we give priority to exterior halfedges\n\n\n    for (var _e = 0, _n = halfedges.length; _e < _n; ++_e) {\n      var _p = triangles[_e % 3 === 2 ? _e - 2 : _e + 1];\n      if (halfedges[_e] === -1 || inedges[_p] === -1) inedges[_p] = _e;\n    }\n\n    for (var _i = 0, _n2 = hull.length; _i < _n2; ++_i) {\n      hullIndex[hull[_i]] = _i;\n    } // degenerate case: 1 or 2 (distinct) points\n\n\n    if (hull.length <= 2 && hull.length > 0) {\n      this.triangles = new Int32Array(3).fill(-1);\n      this.halfedges = new Int32Array(3).fill(-1);\n      this.triangles[0] = hull[0];\n      this.triangles[1] = hull[1];\n      this.triangles[2] = hull[1];\n      inedges[hull[0]] = 1;\n      if (hull.length === 2) inedges[hull[1]] = 0;\n    }\n  } // eslint-disable-next-line max-statements\n  ;\n\n  _proto.neighbors = function neighbors(i) {\n    var results = [];\n    var inedges = this.inedges,\n        hull = this.hull,\n        _hullIndex = this._hullIndex,\n        halfedges = this.halfedges,\n        triangles = this.triangles;\n    var e0 = inedges[i];\n    if (e0 === -1) return results; // coincident point\n\n    var e = e0;\n    var p0 = -1;\n\n    do {\n      p0 = triangles[e];\n      results.push(p0);\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n\n      e = halfedges[e];\n\n      if (e === -1) {\n        var p = hull[(_hullIndex[i] + 1) % hull.length];\n        if (p !== p0) results.push(p);\n        break;\n      }\n    } while (e !== e0);\n\n    return results;\n  };\n\n  _proto.find = function find(x, y, i) {\n    if (i === void 0) {\n      i = 0;\n    } // eslint-disable-next-line no-self-compare\n\n\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n    var i0 = i;\n    var c;\n\n    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) {\n      i = c;\n    }\n\n    return c;\n  };\n\n  _proto._step = function _step(i, x, y) {\n    var inedges = this.inedges,\n        points = this.points;\n    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n    var c = i;\n    var dc = Math.pow(x - points[i * 2], 2) + Math.pow(y - points[i * 2 + 1], 2);\n\n    for (var _iterator = this.neighbors(i), _isArray = Array.isArray(_iterator), _i2 = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i2 >= _iterator.length) break;\n        _ref = _iterator[_i2++];\n      } else {\n        _i2 = _iterator.next();\n        if (_i2.done) break;\n        _ref = _i2.value;\n      }\n\n      var t = _ref;\n      var dt = Math.pow(x - points[t * 2], 2) + Math.pow(y - points[t * 2 + 1], 2);\n\n      if (dt < dc) {\n        dc = dt;\n        c = t;\n      }\n    }\n\n    return c;\n  };\n\n  return Delaunay;\n}(); // eslint-disable-next-line max-params\n\n\nexports[\"default\"] = Delaunay;\n\nDelaunay.from = function (points, fx, fy, that) {\n  if (fx === void 0) {\n    fx = pointX;\n  }\n\n  if (fy === void 0) {\n    fy = pointY;\n  }\n\n  return new Delaunay(flatArray(points, fx, fy, that));\n}; // only public methods will be .from and .find","map":{"version":3,"sources":["/Users/abdurauf/Desktop/diploma/restaurant-management-system/plov/node_modules/delaunay-find/lib/index.js"],"names":["exports","__esModule","_delaunator","_interopRequireDefault","require","obj","pointX","p","pointY","collinear","d","triangles","coords","i","length","a","b","c","cross","jitter","x","y","r","Math","sin","cos","flatArray","points","fx","fy","that","n","array","Float64Array","call","Delaunay","delaunator","inedges","Int32Array","_hullIndex","_init","_proto","prototype","hull","from","_","sort","j","e","f","bounds","sqrt","pow","halfedges","fill","hullIndex","_e","_n","_p","_i","_n2","neighbors","results","e0","p0","push","find","i0","_step","dc","_iterator","_isArray","Array","isArray","_i2","Symbol","iterator","_ref","next","done","value","t","dt"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _delaunator = _interopRequireDefault(require(\"delaunator/delaunator.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// From https://github.com/d3/d3-delaunay/blob/master/src/delaunay.js\nfunction pointX(p) {\n  return p[0];\n}\n\nfunction pointY(p) {\n  return p[1];\n} // A triangulation is collinear if all its triangles have a non-null area\n\n\nfunction collinear(d) {\n  var triangles = d.triangles,\n      coords = d.coords;\n\n  for (var i = 0; i < triangles.length; i += 3) {\n    var a = 2 * triangles[i];\n    var b = 2 * triangles[i + 1];\n    var c = 2 * triangles[i + 2];\n    var cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1]) - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]); // eslint-disable-next-line no-magic-numbers\n\n    if (cross > 1e-10) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n} // eslint-disable-next-line max-params\n\n\nfunction flatArray(points, fx, fy, that) {\n  var n = points.length;\n  var array = new Float64Array(n * 2);\n\n  for (var i = 0; i < n; ++i) {\n    var p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n\n  return array;\n}\n\nvar Delaunay =\n/*#__PURE__*/\nfunction () {\n  function Delaunay(points) {\n    var delaunator = new _delaunator[\"default\"](points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = delaunator.coords;\n\n    this._init(delaunator);\n  } // eslint-disable-next-line max-statements, complexity\n\n\n  var _proto = Delaunay.prototype;\n\n  _proto._init = function _init(delaunator) {\n    var d = delaunator;\n    var points = this.points; // check for collinear\n    // eslint-disable-next-line no-magic-numbers\n\n    if (d.hull && d.hull.length > 2 && collinear(d)) {\n      this.collinear = Int32Array.from({\n        length: points.length / 2\n      }, function (_, i) {\n        return i;\n      }).sort(function (i, j) {\n        return points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1];\n      }); // for exact neighbors\n\n      var e = this.collinear[0];\n      var f = this.collinear[this.collinear.length - 1];\n      var bounds = [points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1]];\n      var r = 1e-8 * // eslint-disable-line no-magic-numbers\n      Math.sqrt(Math.pow(bounds[3] - bounds[1], 2) + Math.pow(bounds[2] - bounds[0], 2));\n\n      for (var i = 0, n = points.length / 2; i < n; ++i) {\n        var p = jitter(points[2 * i], points[2 * i + 1], r);\n        points[2 * i] = p[0];\n        points[2 * i + 1] = p[1];\n      }\n\n      delaunator = new _delaunator[\"default\"](points);\n    }\n\n    var halfedges = this.halfedges = delaunator.halfedges;\n    var hull = this.hull = delaunator.hull;\n    var triangles = this.triangles = delaunator.triangles;\n    var inedges = this.inedges.fill(-1);\n\n    var hullIndex = this._hullIndex.fill(-1); // Compute an index from each point to an (arbitrary) incoming halfedge\n    // Used to give the first neighbor of each point; for this reason,\n    // on the hull we give priority to exterior halfedges\n\n\n    for (var _e = 0, _n = halfedges.length; _e < _n; ++_e) {\n      var _p = triangles[_e % 3 === 2 ? _e - 2 : _e + 1];\n      if (halfedges[_e] === -1 || inedges[_p] === -1) inedges[_p] = _e;\n    }\n\n    for (var _i = 0, _n2 = hull.length; _i < _n2; ++_i) {\n      hullIndex[hull[_i]] = _i;\n    } // degenerate case: 1 or 2 (distinct) points\n\n\n    if (hull.length <= 2 && hull.length > 0) {\n      this.triangles = new Int32Array(3).fill(-1);\n      this.halfedges = new Int32Array(3).fill(-1);\n      this.triangles[0] = hull[0];\n      this.triangles[1] = hull[1];\n      this.triangles[2] = hull[1];\n      inedges[hull[0]] = 1;\n      if (hull.length === 2) inedges[hull[1]] = 0;\n    }\n  } // eslint-disable-next-line max-statements\n  ;\n\n  _proto.neighbors = function neighbors(i) {\n    var results = [];\n    var inedges = this.inedges,\n        hull = this.hull,\n        _hullIndex = this._hullIndex,\n        halfedges = this.halfedges,\n        triangles = this.triangles;\n    var e0 = inedges[i];\n    if (e0 === -1) return results; // coincident point\n\n    var e = e0;\n    var p0 = -1;\n\n    do {\n      p0 = triangles[e];\n      results.push(p0);\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n\n      e = halfedges[e];\n\n      if (e === -1) {\n        var p = hull[(_hullIndex[i] + 1) % hull.length];\n        if (p !== p0) results.push(p);\n        break;\n      }\n    } while (e !== e0);\n\n    return results;\n  };\n\n  _proto.find = function find(x, y, i) {\n    if (i === void 0) {\n      i = 0;\n    }\n\n    // eslint-disable-next-line no-self-compare\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n    var i0 = i;\n    var c;\n\n    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) {\n      i = c;\n    }\n\n    return c;\n  };\n\n  _proto._step = function _step(i, x, y) {\n    var inedges = this.inedges,\n        points = this.points;\n    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n    var c = i;\n    var dc = Math.pow(x - points[i * 2], 2) + Math.pow(y - points[i * 2 + 1], 2);\n\n    for (var _iterator = this.neighbors(i), _isArray = Array.isArray(_iterator), _i2 = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i2 >= _iterator.length) break;\n        _ref = _iterator[_i2++];\n      } else {\n        _i2 = _iterator.next();\n        if (_i2.done) break;\n        _ref = _i2.value;\n      }\n\n      var t = _ref;\n      var dt = Math.pow(x - points[t * 2], 2) + Math.pow(y - points[t * 2 + 1], 2);\n\n      if (dt < dc) {\n        dc = dt;\n        c = t;\n      }\n    }\n\n    return c;\n  };\n\n  return Delaunay;\n}(); // eslint-disable-next-line max-params\n\n\nexports[\"default\"] = Delaunay;\n\nDelaunay.from = function (points, fx, fy, that) {\n  if (fx === void 0) {\n    fx = pointX;\n  }\n\n  if (fy === void 0) {\n    fy = pointY;\n  }\n\n  return new Delaunay(flatArray(points, fx, fy, that));\n}; // only public methods will be .from and .find"]},"metadata":{},"sourceType":"script"}