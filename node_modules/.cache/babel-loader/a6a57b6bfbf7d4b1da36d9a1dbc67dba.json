{"ast":null,"code":"var _jsxFileName = \"/Users/abdurauf/Desktop/\\u6BD5\\u4E1A\\u8BBE\\u8BA1/orginal/restaurant-management-system/plov/src/components/RegisterForm/signUpForm.jsx\";\n// React\nimport React, { Component, Fragment } from \"react\"; // Third Part\n\nimport https from \"../../services/httpService\";\nimport { apiUrl } from \"../../config.json\";\nimport { Form, Input, Select, Button, InputNumber, Row, Col } from \"antd\"; // custom\n\nimport \"../../assets/css/RegisterForm.css\";\nconst {\n  Option\n} = Select;\n\nclass SignUp extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) console.log(values);\n        https.post(apiUrl + \"/register\", {\n          first_name: values.first_name,\n          last_name: values.last_name,\n          gender: values.gender,\n          address: values.address,\n          email: values.email,\n          password: values.password,\n          phone_number: values.phone,\n          work_position: values.work_position,\n          age: values.age,\n          salary: values.salary\n        }).then(res => console.log(res));\n      });\n    };\n  }\n\n  render() {\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"First Name\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, getFieldDecorator(\"first_name\", {\n      rules: [{\n        required: true,\n        message: \"Please input your first name!\",\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Last Name\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, getFieldDecorator(\"last_name\", {\n      rules: [{\n        required: true,\n        message: \"Please input your last name!\",\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Gender\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, getFieldDecorator(\"gender\", {\n      rules: [{\n        required: true,\n        message: \"Please select your gender!\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Select a option \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"Male\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Male\"), React.createElement(Option, {\n      value: \"Female\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Female\")))), React.createElement(Form.Item, {\n      label: \"Address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, getFieldDecorator(\"address\", {\n      rules: [{\n        required: true,\n        message: \"Please input your address!\",\n        whitespace: true\n      }, {\n        required: true,\n        message: \"Please input your Address!\"\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"E-mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, getFieldDecorator(\"email\", {\n      rules: [{\n        type: \"email\",\n        message: \"The input is not valid E-mail!\"\n      }, {\n        required: true,\n        message: \"Please input your E-mail!\"\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Password\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, getFieldDecorator(\"password\", {\n      rules: [{\n        required: true,\n        message: \"Please input your password!\"\n      }]\n    })(React.createElement(Input.Password, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, getFieldDecorator(\"phone\", {\n      rules: [{\n        required: true,\n        message: \"Please input your phone!\"\n      }]\n    })(React.createElement(InputNumber, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Work Position\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, getFieldDecorator(\"work_position\", {\n      rules: [{\n        required: true,\n        message: \"Please select your work position!\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Select a option \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"Chef\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Chef\"), React.createElement(Option, {\n      value: \"Waiter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Waiter\"), React.createElement(Option, {\n      value: \"Employee\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Employee\")))), React.createElement(Form.Item, {\n      label: \"Age\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, getFieldDecorator(\"age\", {\n      rules: [{\n        required: true,\n        message: \"Please input your age!\"\n      }]\n    })(React.createElement(InputNumber, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Salary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, getFieldDecorator(\"salary\", {\n      rules: [{\n        required: true,\n        message: \"Please input your salary!\"\n      }]\n    })(React.createElement(InputNumber, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Register\")))))));\n  }\n\n}\n\nconst WrappedRegistrationForm = Form.create({\n  name: \"register\"\n})(SignUp);\nexport default WrappedRegistrationForm;","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/RegisterForm/signUpForm.jsx"],"names":["React","Component","Fragment","https","apiUrl","Form","Input","Select","Button","InputNumber","Row","Col","Option","SignUp","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","console","log","post","first_name","last_name","gender","address","email","password","phone_number","phone","work_position","age","salary","then","res","render","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","rules","required","message","whitespace","type","textAlign","WrappedRegistrationForm","create","name"],"mappings":"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","sourcesContent":["// React\nimport React, { Component, Fragment } from \"react\";\n\n// Third Part\nimport https from \"../../services/httpService\";\nimport { apiUrl } from \"../../config.json\";\nimport { Form, Input, Select, Button, InputNumber, Row, Col } from \"antd\";\n\n// custom\nimport \"../../assets/css/RegisterForm.css\";\n\nconst { Option } = Select;\n\nclass SignUp extends Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) console.log(values);\n      https\n        .post(apiUrl + \"/register\", {\n          first_name: values.first_name,\n          last_name: values.last_name,\n          gender: values.gender,\n          address: values.address,\n          email: values.email,\n          password: values.password,\n          phone_number: values.phone,\n          work_position: values.work_position,\n          age: values.age,\n          salary: values.salary\n        })\n        .then(res => console.log(res));\n    });\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n\n    return (\n      <Fragment>\n        <Row>\n          <Col>\n            <Form\n              {...formItemLayout}\n              onSubmit={this.handleSubmit}\n              className=\"form\"\n            >\n              <Form.Item label={<span>First Name&nbsp;</span>}>\n                {getFieldDecorator(\"first_name\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"Please input your first name!\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label={<span>Last Name&nbsp;</span>}>\n                {getFieldDecorator(\"last_name\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"Please input your last name!\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label=\"Gender\">\n                {getFieldDecorator(\"gender\", {\n                  rules: [\n                    { required: true, message: \"Please select your gender!\" }\n                  ]\n                })(\n                  <Select placeholder=\"Select a option \">\n                    <Option value=\"Male\">Male</Option>\n                    <Option value=\"Female\">Female</Option>\n                  </Select>\n                )}\n              </Form.Item>\n              <Form.Item label=\"Address\">\n                {getFieldDecorator(\"address\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"Please input your address!\",\n                      whitespace: true\n                    },\n                    {\n                      required: true,\n                      message: \"Please input your Address!\"\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label=\"E-mail\">\n                {getFieldDecorator(\"email\", {\n                  rules: [\n                    {\n                      type: \"email\",\n                      message: \"The input is not valid E-mail!\"\n                    },\n                    {\n                      required: true,\n                      message: \"Please input your E-mail!\"\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label=\"Password\" hasFeedback>\n                {getFieldDecorator(\"password\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"Please input your password!\"\n                    }\n                  ]\n                })(<Input.Password />)}\n              </Form.Item>\n              <Form.Item label=\"Phone\">\n                {getFieldDecorator(\"phone\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"Please input your phone!\"\n                    }\n                  ]\n                })(<InputNumber />)}\n              </Form.Item>\n              <Form.Item label=\"Work Position\">\n                {getFieldDecorator(\"work_position\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"Please select your work position!\"\n                    }\n                  ]\n                })(\n                  <Select placeholder=\"Select a option \">\n                    <Option value=\"Chef\">Chef</Option>\n                    <Option value=\"Waiter\">Waiter</Option>\n                    <Option value=\"Employee\">Employee</Option>\n                  </Select>\n                )}\n              </Form.Item>\n              <Form.Item label=\"Age\">\n                {getFieldDecorator(\"age\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"Please input your age!\"\n                    }\n                  ]\n                })(<InputNumber />)}\n              </Form.Item>\n              <Form.Item label=\"Salary\">\n                {getFieldDecorator(\"salary\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"Please input your salary!\"\n                    }\n                  ]\n                })(<InputNumber />)}\n              </Form.Item>\n\n              <Form.Item>\n                <div style={{ textAlign: \"right\" }}>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    Register\n                  </Button>\n                </div>\n              </Form.Item>\n            </Form>\n          </Col>\n        </Row>\n      </Fragment>\n    );\n  }\n}\n\nconst WrappedRegistrationForm = Form.create({ name: \"register\" })(SignUp);\n\nexport default WrappedRegistrationForm;\n"]},"metadata":{},"sourceType":"module"}