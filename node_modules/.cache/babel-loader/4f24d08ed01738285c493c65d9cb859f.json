{"ast":null,"code":"import _delay from \"lodash/delay\";\nimport _defaults from \"lodash/defaults\";\nimport _isFunction from \"lodash/isFunction\";\nimport _throttle from \"lodash/throttle\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n/*eslint no-magic-numbers: [\"error\", { \"ignore\": [-1, 0, 1, 2, 1000] }]*/\n\n\nimport { Children } from \"react\";\nimport { Selection, Collection, Wrapper } from \"victory-core\";\nvar RawZoomHelpers = {\n  checkDomainEquality: function (a, b) {\n    var checkDimension = function (dim) {\n      var val1 = a && a[dim];\n      var val2 = b && b[dim];\n\n      if (!val1 && !val2) {\n        return true;\n      } else if (!val1 || !val2) {\n        return false;\n      }\n\n      return +val1[0] === +val2[0] && +val1[1] === +val2[1];\n    };\n\n    return checkDimension(\"x\") && checkDimension(\"y\");\n  },\n\n  /**\n   * Generates a new domain scaled by factor and constrained by the original domain.\n   * @param  {[Number, Number]} currentDomain  The domain to be scaled.\n   * @param  {Object} evt the event object\n   * @param  {Object} props the props of the targeted component\n   * @param  {String} axis the desired dimension (either x or y)\n   * @return {[Number, Number]}                The scale domain\n   */\n  // eslint-disable-next-line max-params\n  scale: function (currentDomain, evt, props, axis) {\n    var _currentDomain = _slicedToArray(currentDomain, 2),\n        from = _currentDomain[0],\n        to = _currentDomain[1];\n\n    var range = Math.abs(to - from);\n    var minimumZoom = props.minimumZoom && props.minimumZoom[axis];\n    var factor = this.getScaleFactor(evt);\n\n    if (minimumZoom && range <= minimumZoom && factor < 1) {\n      return currentDomain;\n    }\n\n    var _getDomain$axis = _slicedToArray(this.getDomain(props)[axis], 2),\n        fromBound = _getDomain$axis[0],\n        toBound = _getDomain$axis[1];\n\n    var percent = this.getScalePercent(evt, props, axis);\n    var point = factor * from + percent * (factor * range);\n    var minDomain = this.getMinimumDomain(point, props, axis);\n\n    var _getScaledDomain = this.getScaledDomain(currentDomain, factor, percent),\n        _getScaledDomain2 = _slicedToArray(_getScaledDomain, 2),\n        newMin = _getScaledDomain2[0],\n        newMax = _getScaledDomain2[1];\n\n    var newDomain = [newMin > fromBound && newMin < toBound ? newMin : fromBound, newMax < toBound && newMax > fromBound ? newMax : toBound];\n    var domain = Math.abs(minDomain[1] - minDomain[0]) > Math.abs(newDomain[1] - newDomain[0]) ? minDomain : newDomain;\n    return Collection.containsDates([fromBound, toBound]) ? [new Date(domain[0]), new Date(domain[1])] : domain;\n  },\n  getScaledDomain: function (currentDomain, factor, percent) {\n    var _currentDomain2 = _slicedToArray(currentDomain, 2),\n        from = _currentDomain2[0],\n        to = _currentDomain2[1];\n\n    var range = Math.abs(to - from);\n    var diff = range - range * factor;\n    var newMin = +from + diff * percent;\n    var newMax = +to - diff * (1 - percent);\n    return [Math.min(newMin, newMax), Math.max(newMin, newMax)];\n  },\n  getMinimumDomain: function (point, props, axis) {\n    var minimumZoom = props.minimumZoom;\n    var originalDomain = this.getDomain(props)[axis];\n\n    var _originalDomain = _slicedToArray(originalDomain, 2),\n        from = _originalDomain[0],\n        to = _originalDomain[1];\n\n    var defaultMin = Math.abs(from - to) / 1000;\n    var extent = minimumZoom ? minimumZoom[axis] || defaultMin : defaultMin;\n    var minExtent = point - extent / 2;\n    var maxExtent = point + extent / 2;\n    return [minExtent > from && minExtent < to ? minExtent : from, maxExtent < to && maxExtent > from ? maxExtent : +from + extent / 2];\n  },\n  zoommingOut: function (evt) {\n    return evt.deltaY > 0;\n  },\n  getScaleFactor: function (evt) {\n    var sign = this.zoommingOut(evt) ? 1 : -1; // eslint-disable-next-line no-magic-numbers\n\n    var delta = Math.min(Math.abs(evt.deltaY / 300), 0.5); // TODO: Check scale factor\n\n    return Math.abs(1 + sign * delta);\n  },\n  getScalePercent: function (evt, props, axis) {\n    var originalDomain = this.getDomain(props);\n\n    var _originalDomain$axis = _slicedToArray(originalDomain[axis], 2),\n        from = _originalDomain$axis[0],\n        to = _originalDomain$axis[1];\n\n    var position = this.getPosition(evt, props, originalDomain);\n    return (position[axis] - from) / Math.abs(to - from);\n  },\n  getPosition: function (evt, props, originalDomain) {\n    var _Selection$getSVGEven = Selection.getSVGEventCoordinates(evt),\n        x = _Selection$getSVGEven.x,\n        y = _Selection$getSVGEven.y;\n\n    var originalScale = {\n      x: props.scale.x.domain(originalDomain.x),\n      y: props.scale.y.domain(originalDomain.y)\n    };\n    return Selection.getDataCoordinates(props, originalScale, x, y);\n  },\n\n  /**\n   * Generate a new domain translated by the delta and constrained by the original domain.\n   * @param  {[Number, Number]} currentDomain  The domain to be translated.\n   * @param  {[Number, Number]} originalDomain The original domain for the data set.\n   * @param  {Number}           delta          The delta to translate by\n   * @return {[Number, Number]}                The translated domain\n   */\n  pan: function (currentDomain, originalDomain, delta) {\n    var _currentDomain$map = currentDomain.map(function (val) {\n      return +val;\n    }),\n        _currentDomain$map2 = _slicedToArray(_currentDomain$map, 2),\n        fromCurrent = _currentDomain$map2[0],\n        toCurrent = _currentDomain$map2[1];\n\n    var _originalDomain$map = originalDomain.map(function (val) {\n      return +val;\n    }),\n        _originalDomain$map2 = _slicedToArray(_originalDomain$map, 2),\n        fromOriginal = _originalDomain$map2[0],\n        toOriginal = _originalDomain$map2[1];\n\n    var lowerBound = fromCurrent + delta;\n    var upperBound = toCurrent + delta;\n    var newDomain;\n\n    if (lowerBound > fromOriginal && upperBound < toOriginal) {\n      newDomain = [lowerBound, upperBound];\n    } else if (lowerBound < fromOriginal) {\n      // Clamp to lower limit\n      var dx = toCurrent - fromCurrent;\n      newDomain = [fromOriginal, fromOriginal + dx];\n    } else if (upperBound > toOriginal) {\n      // Clamp to upper limit\n      var _dx = toCurrent - fromCurrent;\n\n      newDomain = [toOriginal - _dx, toOriginal];\n    } else {\n      newDomain = currentDomain;\n    }\n\n    return Collection.containsDates(currentDomain) || Collection.containsDates(originalDomain) ? newDomain.map(function (val) {\n      return new Date(val);\n    }) : newDomain;\n  },\n  // eslint-disable-next-line max-params\n  getDomainScale: function (domain, scale, axis, horizontal) {\n    var axisDomain = Array.isArray(domain) ? domain : domain[axis];\n\n    var _axisDomain = _slicedToArray(axisDomain, 2),\n        from = _axisDomain[0],\n        to = _axisDomain[1];\n\n    var otherAxis = axis === \"x\" ? \"y\" : \"x\";\n    var range = horizontal ? scale[otherAxis].range() : scale[axis].range();\n    var plottableWidth = Math.abs(range[0] - range[1]);\n    return plottableWidth / (to - from);\n  },\n  handleAnimation: function (ctx) {\n    var animationTimer = ctx.context.animationTimer;\n    var transitionTimer = ctx.context.transitionTimer;\n    transitionTimer.bypassAnimation();\n    animationTimer.bypassAnimation();\n\n    var resumeAnimation = function () {\n      animationTimer.resumeAnimation();\n      transitionTimer.resumeAnimation();\n    }; // delay the callback that resumes animation by ~1 frame so that animation does not interfere with wheel events\n\n\n    return _delay(resumeAnimation, 16); // eslint-disable-line no-magic-numbers\n  },\n  getLastDomain: function (targetProps, originalDomain) {\n    var zoomDomain = targetProps.zoomDomain,\n        cachedZoomDomain = targetProps.cachedZoomDomain,\n        currentDomain = targetProps.currentDomain,\n        domain = targetProps.domain;\n\n    if (zoomDomain && !this.checkDomainEquality(zoomDomain, cachedZoomDomain)) {\n      return _defaults({}, zoomDomain, domain);\n    }\n\n    return _defaults({}, currentDomain || zoomDomain || originalDomain, domain);\n  },\n  getDomain: function (props) {\n    var originalDomain = props.originalDomain,\n        domain = props.domain,\n        children = props.children,\n        zoomDimension = props.zoomDimension;\n    var childComponents = Children.toArray(children);\n    var childrenDomain = {};\n\n    if (childComponents.length) {\n      childrenDomain = zoomDimension ? _defineProperty({}, zoomDimension, Wrapper.getDomainFromChildren(props, zoomDimension, childComponents)) : {\n        x: Wrapper.getDomainFromChildren(props, \"x\", childComponents),\n        y: Wrapper.getDomainFromChildren(props, \"y\", childComponents)\n      };\n    }\n\n    return _defaults({}, childrenDomain, originalDomain, domain);\n  },\n  onMouseDown: function (evt, targetProps) {\n    evt.preventDefault();\n\n    if (!targetProps.allowPan) {\n      return undefined;\n    }\n\n    var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n\n    var _Selection$getSVGEven2 = Selection.getSVGEventCoordinates(evt, parentSVG),\n        x = _Selection$getSVGEven2.x,\n        y = _Selection$getSVGEven2.y;\n\n    return [{\n      target: \"parent\",\n      mutation: function () {\n        return {\n          startX: x,\n          startY: y,\n          panning: true,\n          parentSVG: parentSVG,\n          parentControlledProps: [\"domain\"]\n        };\n      }\n    }];\n  },\n  onMouseUp: function (evt, targetProps) {\n    if (!targetProps.allowPan) {\n      return undefined;\n    }\n\n    return [{\n      target: \"parent\",\n      mutation: function () {\n        return {\n          panning: false\n        };\n      }\n    }];\n  },\n  onMouseLeave: function (evt, targetProps) {\n    if (!targetProps.allowPan) {\n      return undefined;\n    }\n\n    return [{\n      target: \"parent\",\n      mutation: function () {\n        return {\n          panning: false\n        };\n      }\n    }];\n  },\n  // eslint-disable-next-line max-params, max-statements\n  onMouseMove: function (evt, targetProps, eventKey, ctx) {\n    if (targetProps.panning && targetProps.allowPan) {\n      var scale = targetProps.scale,\n          startX = targetProps.startX,\n          startY = targetProps.startY,\n          onZoomDomainChange = targetProps.onZoomDomainChange,\n          zoomDomain = targetProps.zoomDomain,\n          zoomDimension = targetProps.zoomDimension,\n          horizontal = targetProps.horizontal;\n      var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n\n      var _Selection$getSVGEven3 = Selection.getSVGEventCoordinates(evt, parentSVG),\n          x = _Selection$getSVGEven3.x,\n          y = _Selection$getSVGEven3.y;\n\n      var originalDomain = this.getDomain(targetProps);\n      var lastDomain = this.getLastDomain(targetProps, originalDomain);\n      var deltaX = horizontal ? y - startY : startX - x;\n      var deltaY = horizontal ? startX - x : y - startY;\n      var dx = deltaX / this.getDomainScale(lastDomain, scale, \"x\", horizontal);\n      var dy = deltaY / this.getDomainScale(lastDomain, scale, \"y\", horizontal);\n      var currentDomain = {\n        x: zoomDimension === \"y\" ? originalDomain.x : this.pan(lastDomain.x, originalDomain.x, dx),\n        y: zoomDimension === \"x\" ? originalDomain.y : this.pan(lastDomain.y, originalDomain.y, dy)\n      };\n      var resumeAnimation = this.handleAnimation(ctx);\n      var zoomActive = !this.checkDomainEquality(originalDomain, lastDomain);\n      var mutatedProps = {\n        parentControlledProps: [\"domain\"],\n        startX: x,\n        startY: y,\n        parentSVG: parentSVG,\n        domain: currentDomain,\n        currentDomain: currentDomain,\n        originalDomain: originalDomain,\n        cachedZoomDomain: zoomDomain,\n        zoomActive: zoomActive\n      };\n\n      if (_isFunction(onZoomDomainChange)) {\n        onZoomDomainChange(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n\n      return [{\n        target: \"parent\",\n        callback: resumeAnimation,\n        mutation: function () {\n          return mutatedProps;\n        }\n      }];\n    }\n\n    return undefined;\n  },\n  // eslint-disable-next-line max-params\n  onWheel: function (evt, targetProps, eventKey, ctx) {\n    if (!targetProps.allowZoom) {\n      return undefined;\n    }\n\n    var onZoomDomainChange = targetProps.onZoomDomainChange,\n        zoomDimension = targetProps.zoomDimension,\n        zoomDomain = targetProps.zoomDomain;\n    var originalDomain = this.getDomain(targetProps);\n    var lastDomain = this.getLastDomain(targetProps, originalDomain);\n    var x = lastDomain.x,\n        y = lastDomain.y;\n    var currentDomain = {\n      x: zoomDimension === \"y\" ? lastDomain.x : this.scale(x, evt, targetProps, \"x\"),\n      y: zoomDimension === \"x\" ? lastDomain.y : this.scale(y, evt, targetProps, \"y\")\n    };\n    var resumeAnimation = this.handleAnimation(ctx);\n    var zoomActive = !this.zoommingOut(evt) || // if zoomming in or\n    //   if zoomActive is already set AND user hasn't zoommed out all the way\n    targetProps.zoomActive && !this.checkDomainEquality(originalDomain, lastDomain);\n    var mutatedProps = {\n      domain: currentDomain,\n      currentDomain: currentDomain,\n      originalDomain: originalDomain,\n      cachedZoomDomain: zoomDomain,\n      parentControlledProps: [\"domain\"],\n      panning: false,\n      zoomActive: zoomActive\n    };\n\n    if (_isFunction(onZoomDomainChange)) {\n      onZoomDomainChange(currentDomain, _defaults({}, mutatedProps, targetProps));\n    }\n\n    return [{\n      target: \"parent\",\n      callback: resumeAnimation,\n      mutation: function () {\n        return mutatedProps;\n      }\n    }];\n  }\n};\nexport { RawZoomHelpers }; // allow victory-native to extend these helpers\n\nexport default {\n  checkDomainEquality: RawZoomHelpers.checkDomainEquality.bind(RawZoomHelpers),\n  onMouseDown: RawZoomHelpers.onMouseDown.bind(RawZoomHelpers),\n  onMouseUp: RawZoomHelpers.onMouseUp.bind(RawZoomHelpers),\n  onMouseLeave: RawZoomHelpers.onMouseLeave.bind(RawZoomHelpers),\n  onMouseMove: _throttle(RawZoomHelpers.onMouseMove.bind(RawZoomHelpers), 16, // eslint-disable-line no-magic-numbers\n  {\n    leading: true,\n    trailing: false\n  }),\n  onWheel: _throttle(RawZoomHelpers.onWheel.bind(RawZoomHelpers), 16, // eslint-disable-line no-magic-numbers\n  {\n    leading: true,\n    trailing: false\n  })\n};","map":{"version":3,"sources":["/Users/abdurauf/Desktop/diploma/restaurant-management-system/plov/node_modules/victory-zoom-container/es/zoom-helpers.js"],"names":["_delay","_defaults","_isFunction","_throttle","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","length","err","Array","isArray","Children","Selection","Collection","Wrapper","RawZoomHelpers","checkDomainEquality","a","b","checkDimension","dim","val1","val2","scale","currentDomain","evt","props","axis","_currentDomain","from","to","range","Math","abs","minimumZoom","factor","getScaleFactor","_getDomain$axis","getDomain","fromBound","toBound","percent","getScalePercent","point","minDomain","getMinimumDomain","_getScaledDomain","getScaledDomain","_getScaledDomain2","newMin","newMax","newDomain","domain","containsDates","Date","_currentDomain2","diff","min","max","originalDomain","_originalDomain","defaultMin","extent","minExtent","maxExtent","zoommingOut","deltaY","sign","delta","_originalDomain$axis","position","getPosition","_Selection$getSVGEven","getSVGEventCoordinates","x","y","originalScale","getDataCoordinates","pan","_currentDomain$map","map","val","_currentDomain$map2","fromCurrent","toCurrent","_originalDomain$map","_originalDomain$map2","fromOriginal","toOriginal","lowerBound","upperBound","dx","_dx","getDomainScale","horizontal","axisDomain","_axisDomain","otherAxis","plottableWidth","handleAnimation","ctx","animationTimer","context","transitionTimer","bypassAnimation","resumeAnimation","getLastDomain","targetProps","zoomDomain","cachedZoomDomain","children","zoomDimension","childComponents","toArray","childrenDomain","getDomainFromChildren","onMouseDown","preventDefault","allowPan","parentSVG","getParentSVG","_Selection$getSVGEven2","target","mutation","startX","startY","panning","parentControlledProps","onMouseUp","onMouseLeave","onMouseMove","eventKey","onZoomDomainChange","_Selection$getSVGEven3","lastDomain","deltaX","dy","zoomActive","mutatedProps","callback","onWheel","allowZoom","bind","leading","trailing"],"mappings":"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","sourcesContent":["import _delay from \"lodash/delay\";\nimport _defaults from \"lodash/defaults\";\nimport _isFunction from \"lodash/isFunction\";\nimport _throttle from \"lodash/throttle\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/*eslint no-magic-numbers: [\"error\", { \"ignore\": [-1, 0, 1, 2, 1000] }]*/\nimport { Children } from \"react\";\nimport { Selection, Collection, Wrapper } from \"victory-core\";\nvar RawZoomHelpers = {\n  checkDomainEquality: function (a, b) {\n    var checkDimension = function (dim) {\n      var val1 = a && a[dim];\n      var val2 = b && b[dim];\n\n      if (!val1 && !val2) {\n        return true;\n      } else if (!val1 || !val2) {\n        return false;\n      }\n\n      return +val1[0] === +val2[0] && +val1[1] === +val2[1];\n    };\n\n    return checkDimension(\"x\") && checkDimension(\"y\");\n  },\n\n  /**\n   * Generates a new domain scaled by factor and constrained by the original domain.\n   * @param  {[Number, Number]} currentDomain  The domain to be scaled.\n   * @param  {Object} evt the event object\n   * @param  {Object} props the props of the targeted component\n   * @param  {String} axis the desired dimension (either x or y)\n   * @return {[Number, Number]}                The scale domain\n   */\n  // eslint-disable-next-line max-params\n  scale: function (currentDomain, evt, props, axis) {\n    var _currentDomain = _slicedToArray(currentDomain, 2),\n        from = _currentDomain[0],\n        to = _currentDomain[1];\n\n    var range = Math.abs(to - from);\n    var minimumZoom = props.minimumZoom && props.minimumZoom[axis];\n    var factor = this.getScaleFactor(evt);\n\n    if (minimumZoom && range <= minimumZoom && factor < 1) {\n      return currentDomain;\n    }\n\n    var _getDomain$axis = _slicedToArray(this.getDomain(props)[axis], 2),\n        fromBound = _getDomain$axis[0],\n        toBound = _getDomain$axis[1];\n\n    var percent = this.getScalePercent(evt, props, axis);\n    var point = factor * from + percent * (factor * range);\n    var minDomain = this.getMinimumDomain(point, props, axis);\n\n    var _getScaledDomain = this.getScaledDomain(currentDomain, factor, percent),\n        _getScaledDomain2 = _slicedToArray(_getScaledDomain, 2),\n        newMin = _getScaledDomain2[0],\n        newMax = _getScaledDomain2[1];\n\n    var newDomain = [newMin > fromBound && newMin < toBound ? newMin : fromBound, newMax < toBound && newMax > fromBound ? newMax : toBound];\n    var domain = Math.abs(minDomain[1] - minDomain[0]) > Math.abs(newDomain[1] - newDomain[0]) ? minDomain : newDomain;\n    return Collection.containsDates([fromBound, toBound]) ? [new Date(domain[0]), new Date(domain[1])] : domain;\n  },\n  getScaledDomain: function (currentDomain, factor, percent) {\n    var _currentDomain2 = _slicedToArray(currentDomain, 2),\n        from = _currentDomain2[0],\n        to = _currentDomain2[1];\n\n    var range = Math.abs(to - from);\n    var diff = range - range * factor;\n    var newMin = +from + diff * percent;\n    var newMax = +to - diff * (1 - percent);\n    return [Math.min(newMin, newMax), Math.max(newMin, newMax)];\n  },\n  getMinimumDomain: function (point, props, axis) {\n    var minimumZoom = props.minimumZoom;\n    var originalDomain = this.getDomain(props)[axis];\n\n    var _originalDomain = _slicedToArray(originalDomain, 2),\n        from = _originalDomain[0],\n        to = _originalDomain[1];\n\n    var defaultMin = Math.abs(from - to) / 1000;\n    var extent = minimumZoom ? minimumZoom[axis] || defaultMin : defaultMin;\n    var minExtent = point - extent / 2;\n    var maxExtent = point + extent / 2;\n    return [minExtent > from && minExtent < to ? minExtent : from, maxExtent < to && maxExtent > from ? maxExtent : +from + extent / 2];\n  },\n  zoommingOut: function (evt) {\n    return evt.deltaY > 0;\n  },\n  getScaleFactor: function (evt) {\n    var sign = this.zoommingOut(evt) ? 1 : -1; // eslint-disable-next-line no-magic-numbers\n\n    var delta = Math.min(Math.abs(evt.deltaY / 300), 0.5); // TODO: Check scale factor\n\n    return Math.abs(1 + sign * delta);\n  },\n  getScalePercent: function (evt, props, axis) {\n    var originalDomain = this.getDomain(props);\n\n    var _originalDomain$axis = _slicedToArray(originalDomain[axis], 2),\n        from = _originalDomain$axis[0],\n        to = _originalDomain$axis[1];\n\n    var position = this.getPosition(evt, props, originalDomain);\n    return (position[axis] - from) / Math.abs(to - from);\n  },\n  getPosition: function (evt, props, originalDomain) {\n    var _Selection$getSVGEven = Selection.getSVGEventCoordinates(evt),\n        x = _Selection$getSVGEven.x,\n        y = _Selection$getSVGEven.y;\n\n    var originalScale = {\n      x: props.scale.x.domain(originalDomain.x),\n      y: props.scale.y.domain(originalDomain.y)\n    };\n    return Selection.getDataCoordinates(props, originalScale, x, y);\n  },\n\n  /**\n   * Generate a new domain translated by the delta and constrained by the original domain.\n   * @param  {[Number, Number]} currentDomain  The domain to be translated.\n   * @param  {[Number, Number]} originalDomain The original domain for the data set.\n   * @param  {Number}           delta          The delta to translate by\n   * @return {[Number, Number]}                The translated domain\n   */\n  pan: function (currentDomain, originalDomain, delta) {\n    var _currentDomain$map = currentDomain.map(function (val) {\n      return +val;\n    }),\n        _currentDomain$map2 = _slicedToArray(_currentDomain$map, 2),\n        fromCurrent = _currentDomain$map2[0],\n        toCurrent = _currentDomain$map2[1];\n\n    var _originalDomain$map = originalDomain.map(function (val) {\n      return +val;\n    }),\n        _originalDomain$map2 = _slicedToArray(_originalDomain$map, 2),\n        fromOriginal = _originalDomain$map2[0],\n        toOriginal = _originalDomain$map2[1];\n\n    var lowerBound = fromCurrent + delta;\n    var upperBound = toCurrent + delta;\n    var newDomain;\n\n    if (lowerBound > fromOriginal && upperBound < toOriginal) {\n      newDomain = [lowerBound, upperBound];\n    } else if (lowerBound < fromOriginal) {\n      // Clamp to lower limit\n      var dx = toCurrent - fromCurrent;\n      newDomain = [fromOriginal, fromOriginal + dx];\n    } else if (upperBound > toOriginal) {\n      // Clamp to upper limit\n      var _dx = toCurrent - fromCurrent;\n\n      newDomain = [toOriginal - _dx, toOriginal];\n    } else {\n      newDomain = currentDomain;\n    }\n\n    return Collection.containsDates(currentDomain) || Collection.containsDates(originalDomain) ? newDomain.map(function (val) {\n      return new Date(val);\n    }) : newDomain;\n  },\n  // eslint-disable-next-line max-params\n  getDomainScale: function (domain, scale, axis, horizontal) {\n    var axisDomain = Array.isArray(domain) ? domain : domain[axis];\n\n    var _axisDomain = _slicedToArray(axisDomain, 2),\n        from = _axisDomain[0],\n        to = _axisDomain[1];\n\n    var otherAxis = axis === \"x\" ? \"y\" : \"x\";\n    var range = horizontal ? scale[otherAxis].range() : scale[axis].range();\n    var plottableWidth = Math.abs(range[0] - range[1]);\n    return plottableWidth / (to - from);\n  },\n  handleAnimation: function (ctx) {\n    var animationTimer = ctx.context.animationTimer;\n    var transitionTimer = ctx.context.transitionTimer;\n    transitionTimer.bypassAnimation();\n    animationTimer.bypassAnimation();\n\n    var resumeAnimation = function () {\n      animationTimer.resumeAnimation();\n      transitionTimer.resumeAnimation();\n    }; // delay the callback that resumes animation by ~1 frame so that animation does not interfere with wheel events\n\n\n    return _delay(resumeAnimation, 16); // eslint-disable-line no-magic-numbers\n  },\n  getLastDomain: function (targetProps, originalDomain) {\n    var zoomDomain = targetProps.zoomDomain,\n        cachedZoomDomain = targetProps.cachedZoomDomain,\n        currentDomain = targetProps.currentDomain,\n        domain = targetProps.domain;\n\n    if (zoomDomain && !this.checkDomainEquality(zoomDomain, cachedZoomDomain)) {\n      return _defaults({}, zoomDomain, domain);\n    }\n\n    return _defaults({}, currentDomain || zoomDomain || originalDomain, domain);\n  },\n  getDomain: function (props) {\n    var originalDomain = props.originalDomain,\n        domain = props.domain,\n        children = props.children,\n        zoomDimension = props.zoomDimension;\n    var childComponents = Children.toArray(children);\n    var childrenDomain = {};\n\n    if (childComponents.length) {\n      childrenDomain = zoomDimension ? _defineProperty({}, zoomDimension, Wrapper.getDomainFromChildren(props, zoomDimension, childComponents)) : {\n        x: Wrapper.getDomainFromChildren(props, \"x\", childComponents),\n        y: Wrapper.getDomainFromChildren(props, \"y\", childComponents)\n      };\n    }\n\n    return _defaults({}, childrenDomain, originalDomain, domain);\n  },\n  onMouseDown: function (evt, targetProps) {\n    evt.preventDefault();\n\n    if (!targetProps.allowPan) {\n      return undefined;\n    }\n\n    var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n\n    var _Selection$getSVGEven2 = Selection.getSVGEventCoordinates(evt, parentSVG),\n        x = _Selection$getSVGEven2.x,\n        y = _Selection$getSVGEven2.y;\n\n    return [{\n      target: \"parent\",\n      mutation: function () {\n        return {\n          startX: x,\n          startY: y,\n          panning: true,\n          parentSVG: parentSVG,\n          parentControlledProps: [\"domain\"]\n        };\n      }\n    }];\n  },\n  onMouseUp: function (evt, targetProps) {\n    if (!targetProps.allowPan) {\n      return undefined;\n    }\n\n    return [{\n      target: \"parent\",\n      mutation: function () {\n        return {\n          panning: false\n        };\n      }\n    }];\n  },\n  onMouseLeave: function (evt, targetProps) {\n    if (!targetProps.allowPan) {\n      return undefined;\n    }\n\n    return [{\n      target: \"parent\",\n      mutation: function () {\n        return {\n          panning: false\n        };\n      }\n    }];\n  },\n  // eslint-disable-next-line max-params, max-statements\n  onMouseMove: function (evt, targetProps, eventKey, ctx) {\n    if (targetProps.panning && targetProps.allowPan) {\n      var scale = targetProps.scale,\n          startX = targetProps.startX,\n          startY = targetProps.startY,\n          onZoomDomainChange = targetProps.onZoomDomainChange,\n          zoomDomain = targetProps.zoomDomain,\n          zoomDimension = targetProps.zoomDimension,\n          horizontal = targetProps.horizontal;\n      var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n\n      var _Selection$getSVGEven3 = Selection.getSVGEventCoordinates(evt, parentSVG),\n          x = _Selection$getSVGEven3.x,\n          y = _Selection$getSVGEven3.y;\n\n      var originalDomain = this.getDomain(targetProps);\n      var lastDomain = this.getLastDomain(targetProps, originalDomain);\n      var deltaX = horizontal ? y - startY : startX - x;\n      var deltaY = horizontal ? startX - x : y - startY;\n      var dx = deltaX / this.getDomainScale(lastDomain, scale, \"x\", horizontal);\n      var dy = deltaY / this.getDomainScale(lastDomain, scale, \"y\", horizontal);\n      var currentDomain = {\n        x: zoomDimension === \"y\" ? originalDomain.x : this.pan(lastDomain.x, originalDomain.x, dx),\n        y: zoomDimension === \"x\" ? originalDomain.y : this.pan(lastDomain.y, originalDomain.y, dy)\n      };\n      var resumeAnimation = this.handleAnimation(ctx);\n      var zoomActive = !this.checkDomainEquality(originalDomain, lastDomain);\n      var mutatedProps = {\n        parentControlledProps: [\"domain\"],\n        startX: x,\n        startY: y,\n        parentSVG: parentSVG,\n        domain: currentDomain,\n        currentDomain: currentDomain,\n        originalDomain: originalDomain,\n        cachedZoomDomain: zoomDomain,\n        zoomActive: zoomActive\n      };\n\n      if (_isFunction(onZoomDomainChange)) {\n        onZoomDomainChange(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n\n      return [{\n        target: \"parent\",\n        callback: resumeAnimation,\n        mutation: function () {\n          return mutatedProps;\n        }\n      }];\n    }\n\n    return undefined;\n  },\n  // eslint-disable-next-line max-params\n  onWheel: function (evt, targetProps, eventKey, ctx) {\n    if (!targetProps.allowZoom) {\n      return undefined;\n    }\n\n    var onZoomDomainChange = targetProps.onZoomDomainChange,\n        zoomDimension = targetProps.zoomDimension,\n        zoomDomain = targetProps.zoomDomain;\n    var originalDomain = this.getDomain(targetProps);\n    var lastDomain = this.getLastDomain(targetProps, originalDomain);\n    var x = lastDomain.x,\n        y = lastDomain.y;\n    var currentDomain = {\n      x: zoomDimension === \"y\" ? lastDomain.x : this.scale(x, evt, targetProps, \"x\"),\n      y: zoomDimension === \"x\" ? lastDomain.y : this.scale(y, evt, targetProps, \"y\")\n    };\n    var resumeAnimation = this.handleAnimation(ctx);\n    var zoomActive = !this.zoommingOut(evt) || // if zoomming in or\n    //   if zoomActive is already set AND user hasn't zoommed out all the way\n    targetProps.zoomActive && !this.checkDomainEquality(originalDomain, lastDomain);\n    var mutatedProps = {\n      domain: currentDomain,\n      currentDomain: currentDomain,\n      originalDomain: originalDomain,\n      cachedZoomDomain: zoomDomain,\n      parentControlledProps: [\"domain\"],\n      panning: false,\n      zoomActive: zoomActive\n    };\n\n    if (_isFunction(onZoomDomainChange)) {\n      onZoomDomainChange(currentDomain, _defaults({}, mutatedProps, targetProps));\n    }\n\n    return [{\n      target: \"parent\",\n      callback: resumeAnimation,\n      mutation: function () {\n        return mutatedProps;\n      }\n    }];\n  }\n};\nexport { RawZoomHelpers }; // allow victory-native to extend these helpers\n\nexport default {\n  checkDomainEquality: RawZoomHelpers.checkDomainEquality.bind(RawZoomHelpers),\n  onMouseDown: RawZoomHelpers.onMouseDown.bind(RawZoomHelpers),\n  onMouseUp: RawZoomHelpers.onMouseUp.bind(RawZoomHelpers),\n  onMouseLeave: RawZoomHelpers.onMouseLeave.bind(RawZoomHelpers),\n  onMouseMove: _throttle(RawZoomHelpers.onMouseMove.bind(RawZoomHelpers), 16, // eslint-disable-line no-magic-numbers\n  {\n    leading: true,\n    trailing: false\n  }),\n  onWheel: _throttle(RawZoomHelpers.onWheel.bind(RawZoomHelpers), 16, // eslint-disable-line no-magic-numbers\n  {\n    leading: true,\n    trailing: false\n  })\n};"]},"metadata":{},"sourceType":"module"}