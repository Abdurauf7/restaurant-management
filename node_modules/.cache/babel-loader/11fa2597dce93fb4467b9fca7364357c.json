{"ast":null,"code":"// import React, { useState, Fragment } from \"react\";\n// import { Button, Divider, Modal } from \"antd\";\n// import { deleteUser } from \"../../../../../services/userServices\";\n// const deleteItem = async item => {\n//   try {\n//     await deleteUser(item);\n//   } catch (error) {}\n// };\n// const edit = async items => {\n//   console.log(items);\n// };\n// const column = [\n//   {\n//     title: \"Employee Info\",\n//     children: [\n//       {\n//         title: \" First name\",\n//         dataIndex: \"first_name\",\n//         fixed: \"left\",\n//         sorter: (a, b) => a.first_name.length - b.first_name.length,\n//         sortDirections: [\"descend\", \"ascend\"]\n//       },\n//       {\n//         title: \"Last Name\",\n//         dataIndex: \"last_name\",\n//         fixed: \"left\",\n//         onFilter: (value, record) => record.last_name.indexOf(value) === 0,\n//         sorter: (a, b) => a.last_name.length - b.last_name.length,\n//         sortDirections: [\"descend\", \"ascend\"]\n//       },\n//       {\n//         title: \"Gender\",\n//         dataIndex: \"gender\",\n//         filters: [\n//           {\n//             text: \"Female\",\n//             value: \"female\"\n//           },\n//           {\n//             text: \"Male\",\n//             value: \"male\"\n//           }\n//         ],\n//         filterMultiple: false,\n//         onFilter: (value, record) => record.gender.indexOf(value) === 0\n//       },\n//       {\n//         title: \"Age\",\n//         dataIndex: \"age\",\n//         sorter: (a, b) => a.age - b.age,\n//         sortDirections: [\"descend\", \"ascend\"]\n//       },\n//       {\n//         title: \"Address\",\n//         dataIndex: \"address\",\n//         filters: [\n//           {\n//             text: \"Huangpu\",\n//             value: \"Huangpu\"\n//           },\n//           {\n//             text: \"Changning\",\n//             value: \"Changning\"\n//           },\n//           {\n//             text: \"Jing'an\",\n//             value: \"Jing'an\"\n//           },\n//           {\n//             text: \"Putuo\",\n//             value: \"Putuo\"\n//           },\n//           {\n//             text: \"Hongkou\",\n//             value: \"Hongkou\"\n//           },\n//           {\n//             text: \"Yangpu\",\n//             value: \"Yangpu\"\n//           },\n//           {\n//             text: \"Minhang\",\n//             value: \"Minhang\"\n//           },\n//           {\n//             text: \"Baoshan\",\n//             value: \"Baoshan\"\n//           },\n//           {\n//             text: \"Jiading\",\n//             value: \"Jiading\"\n//           },\n//           ,\n//           {\n//             text: \"Pudong\",\n//             value: \"Pudong\"\n//           },\n//           ,\n//           {\n//             text: \"Jinshan\",\n//             value: \"Jinshan\"\n//           },\n//           ,\n//           {\n//             text: \"Songjiang\",\n//             value: \"Songjiang\"\n//           },\n//           ,\n//           {\n//             text: \"Qingpu\",\n//             value: \"Qingpu\"\n//           },\n//           ,\n//           {\n//             text: \"Fengxian\",\n//             value: \"Fengxian\"\n//           },\n//           ,\n//           {\n//             text: \"Chongming\",\n//             value: \"Chongming\"\n//           }\n//         ],\n//         onFilter: (value, record) => record.address.indexOf(value) === 0,\n//         sorter: (a, b) => a.address.length - b.address.length,\n//         sortDirections: [\"descend\", \"ascend\"]\n//       },\n//       {\n//         title: \"Phone\",\n//         dataIndex: \"phone_number\",\n//         sorter: (a, b) => a.phone_number.length - b.phone_number.length,\n//         sortDirections: [\"descend\", \"ascend\"]\n//       },\n//       {\n//         title: \"Position\",\n//         dataIndex: \"work_position\",\n//         filters: [\n//           {\n//             text: \"Chef\",\n//             value: \"Chef\"\n//           },\n//           {\n//             text: \"Waiter\",\n//             value: \"Waiter\"\n//           },\n//           {\n//             text: \"Manager\",\n//             value: \"Manager\"\n//           },\n//           {\n//             text: \"Cleaner\",\n//             value: \"Cleaner\"\n//           }\n//         ],\n//         onFilter: (value, record) => record.work_position.indexOf(value) === 0\n//       },\n//       {\n//         title: \"Salary\",\n//         dataIndex: \"salary\",\n//         sorter: (a, b) => a.salary.length - b.salary.length,\n//         sortDirections: [\"descend\", \"ascend\"]\n//       },\n//       {\n//         title: \"Email\",\n//         dataIndex: \"email\",\n//         sorter: (a, b) => a.email.length - b.email.length,\n//         sortDirections: [\"descend\", \"ascend\"]\n//       },\n//       {\n//         title: \"Date\",\n//         dataIndex: \"date\",\n//         sorter: (a, b) => a.date.length - b.date.length,\n//         sortDirections: [\"descend\", \"ascend\"]\n//       }\n//     ]\n//   },\n//   {\n//     title: \"Action\",\n//     fixed: \"right\",\n//     render: record => (\n//       <Fragment>\n//         <Button onClick={() => deleteItem(record.id)} type=\"danger\">\n//           delete\n//         </Button>\n//         <Divider />\n//         <Button onClick={() => edit(record)} type=\"primary\">\n//           edit\n//         </Button>\n//       </Fragment>\n//     )\n//   }\n// ];\n// export { column };","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/Admin/components/PersonalComponent/components/column.jsx"],"names":[],"mappingssourcesContent":["// import React, { useState, Fragment } from \"react\";\n// import { Button, Divider, Modal } from \"antd\";\n// import { deleteUser } from \"../../../../../services/userServices\";\n\n// const deleteItem = async item => {\n//   try {\n//     await deleteUser(item);\n//   } catch (error) {}\n// };\n// const edit = async items => {\n//   console.log(items);\n// };\n\n// const column = [\n//   {\n//     title: \"Employee Info\",\n//     children: [\n//       {\n//         title: \" First name\",\n//         dataIndex: \"first_name\",\n//         fixed: \"left\",\n//         sorter: (a, b) => a.first_name.length - b.first_name.length,\n//         sortDirections: [\"descend\", \"ascend\"]\n//       },\n//       {\n//         title: \"Last Name\",\n//         dataIndex: \"last_name\",\n//         fixed: \"left\",\n//         onFilter: (value, record) => record.last_name.indexOf(value) === 0,\n//         sorter: (a, b) => a.last_name.length - b.last_name.length,\n//         sortDirections: [\"descend\", \"ascend\"]\n//       },\n//       {\n//         title: \"Gender\",\n//         dataIndex: \"gender\",\n//         filters: [\n//           {\n//             text: \"Female\",\n//             value: \"female\"\n//           },\n//           {\n//             text: \"Male\",\n//             value: \"male\"\n//           }\n//         ],\n//         filterMultiple: false,\n//         onFilter: (value, record) => record.gender.indexOf(value) === 0\n//       },\n//       {\n//         title: \"Age\",\n//         dataIndex: \"age\",\n//         sorter: (a, b) => a.age - b.age,\n//         sortDirections: [\"descend\", \"ascend\"]\n//       },\n//       {\n//         title: \"Address\",\n//         dataIndex: \"address\",\n\n//         filters: [\n//           {\n//             text: \"Huangpu\",\n//             value: \"Huangpu\"\n//           },\n//           {\n//             text: \"Changning\",\n//             value: \"Changning\"\n//           },\n//           {\n//             text: \"Jing'an\",\n//             value: \"Jing'an\"\n//           },\n//           {\n//             text: \"Putuo\",\n//             value: \"Putuo\"\n//           },\n//           {\n//             text: \"Hongkou\",\n//             value: \"Hongkou\"\n//           },\n//           {\n//             text: \"Yangpu\",\n//             value: \"Yangpu\"\n//           },\n//           {\n//             text: \"Minhang\",\n//             value: \"Minhang\"\n//           },\n//           {\n//             text: \"Baoshan\",\n//             value: \"Baoshan\"\n//           },\n//           {\n//             text: \"Jiading\",\n//             value: \"Jiading\"\n//           },\n//           ,\n//           {\n//             text: \"Pudong\",\n//             value: \"Pudong\"\n//           },\n//           ,\n//           {\n//             text: \"Jinshan\",\n//             value: \"Jinshan\"\n//           },\n//           ,\n//           {\n//             text: \"Songjiang\",\n//             value: \"Songjiang\"\n//           },\n//           ,\n//           {\n//             text: \"Qingpu\",\n//             value: \"Qingpu\"\n//           },\n//           ,\n//           {\n//             text: \"Fengxian\",\n//             value: \"Fengxian\"\n//           },\n//           ,\n//           {\n//             text: \"Chongming\",\n//             value: \"Chongming\"\n//           }\n//         ],\n\n//         onFilter: (value, record) => record.address.indexOf(value) === 0,\n//         sorter: (a, b) => a.address.length - b.address.length,\n//         sortDirections: [\"descend\", \"ascend\"]\n//       },\n//       {\n//         title: \"Phone\",\n//         dataIndex: \"phone_number\",\n\n//         sorter: (a, b) => a.phone_number.length - b.phone_number.length,\n//         sortDirections: [\"descend\", \"ascend\"]\n//       },\n//       {\n//         title: \"Position\",\n//         dataIndex: \"work_position\",\n//         filters: [\n//           {\n//             text: \"Chef\",\n//             value: \"Chef\"\n//           },\n//           {\n//             text: \"Waiter\",\n//             value: \"Waiter\"\n//           },\n//           {\n//             text: \"Manager\",\n//             value: \"Manager\"\n//           },\n//           {\n//             text: \"Cleaner\",\n//             value: \"Cleaner\"\n//           }\n//         ],\n//         onFilter: (value, record) => record.work_position.indexOf(value) === 0\n//       },\n//       {\n//         title: \"Salary\",\n//         dataIndex: \"salary\",\n\n//         sorter: (a, b) => a.salary.length - b.salary.length,\n//         sortDirections: [\"descend\", \"ascend\"]\n//       },\n//       {\n//         title: \"Email\",\n//         dataIndex: \"email\",\n\n//         sorter: (a, b) => a.email.length - b.email.length,\n//         sortDirections: [\"descend\", \"ascend\"]\n//       },\n//       {\n//         title: \"Date\",\n//         dataIndex: \"date\",\n//         sorter: (a, b) => a.date.length - b.date.length,\n//         sortDirections: [\"descend\", \"ascend\"]\n//       }\n//     ]\n//   },\n//   {\n//     title: \"Action\",\n//     fixed: \"right\",\n//     render: record => (\n//       <Fragment>\n//         <Button onClick={() => deleteItem(record.id)} type=\"danger\">\n//           delete\n//         </Button>\n//         <Divider />\n//         <Button onClick={() => edit(record)} type=\"primary\">\n//           edit\n//         </Button>\n//       </Fragment>\n//     )\n//   }\n// ];\n// export { column };\n"]},"metadata":{},"sourceType":"module"}