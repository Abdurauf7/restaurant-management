{"ast":null,"code":"var _jsxFileName = \"/Users/abdurauf/Desktop/\\u6BD5\\u4E1A\\u8BBE\\u8BA1/orginal/restaurant-management-system/plov/src/components/SignInForm.jsx\";\n// React\nimport React, { Component, Fragment } from \"react\"; // Third part\n\nimport { Form, Icon, Input, Button, Row, Col, Typography } from \"antd\";\nimport https from \"../services/httpService\";\nimport { apiUrl } from \"../config.json\"; // custom\n\nimport \"../assets/css/LoginForm.css\";\nconst {\n  Title\n} = Typography;\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass SignInForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        history\n      } = this.props;\n      this.props.form.validateFields((err, values) => {\n        console.log(values);\n        https.post(apiUrl + \"signin\", {\n          email: values.email,\n          password: values.password\n        }).then(res => {\n          if (res.data.status === 200) {\n            console.log(\"200\");\n          } else if (res.data.status === 404) {\n            console.log(\"404\");\n          }\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    // To disable submit button at the beginning.\n    this.props.form.validateFields();\n  }\n\n  render() {\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const {\n      getFieldDecorator,\n      getFieldsError,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form; // Only show error after a field is touched.\n\n    const usernameError = isFieldTouched(\"email\") && getFieldError(\"email\");\n    const passwordError = isFieldTouched(\"password\") && getFieldError(\"password\");\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Row, {\n      gutter: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 11,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"restaurant\",\n      style: {\n        width: \"100%\"\n      },\n      src: \"https://images.unsplash.com/photo-1537047902294-62a40c20a6ae?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1275&q=80\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      span: 6,\n      offset: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Welcome to Restaurant\"), React.createElement(Form.Item, {\n      validateStatus: usernameError ? \"error\" : \"\",\n      help: usernameError || \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, getFieldDecorator(\"email\", {\n      rules: [{\n        required: true,\n        message: \"Please input your username!\"\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      style: {\n        width: \"500px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      validateStatus: passwordError ? \"error\" : \"\",\n      help: passwordError || \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, getFieldDecorator(\"password\", {\n      rules: [{\n        required: true,\n        message: \"Please input your Password!\"\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      style: {\n        width: \"500px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      disabled: hasErrors(getFieldsError()),\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Log in\"))))));\n  }\n\n}\n\nconst WrappedHorizontalLoginForm = Form.create({\n  name: \"horizontal_login\"\n})(SignInForm);\nexport default WrappedHorizontalLoginForm;","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/SignInForm.jsx"],"names":["React","Component","Fragment","Form","Icon","Input","Button","Row","Col","Typography","https","apiUrl","Title","hasErrors","fieldsError","Object","keys","some","field","SignInForm","handleSubmit","e","preventDefault","history","props","form","validateFields","err","values","console","log","post","email","password","then","res","data","status","componentDidMount","render","formItemLayout","labelCol","xs","span","sm","wrapperCol","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","usernameError","passwordError","width","rules","required","message","color","WrappedHorizontalLoginForm","create","name"],"mappings":"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","sourcesContent":["// React\nimport React, { Component, Fragment } from \"react\";\n\n// Third part\nimport { Form, Icon, Input, Button, Row, Col, Typography } from \"antd\";\nimport https from \"../services/httpService\";\nimport { apiUrl } from \"../config.json\";\n// custom\nimport \"../assets/css/LoginForm.css\";\n\nconst { Title } = Typography;\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass SignInForm extends Component {\n  componentDidMount() {\n    // To disable submit button at the beginning.\n    this.props.form.validateFields();\n  }\n  handleSubmit = e => {\n    e.preventDefault();\n    const { history } = this.props;\n    this.props.form.validateFields((err, values) => {\n      console.log(values);\n      https\n        .post(apiUrl + \"signin\", {\n          email: values.email,\n          password: values.password\n        })\n        .then(res => {\n          if (res.data.status === 200) {\n            console.log(\"200\");\n          } else if (res.data.status === 404) {\n            console.log(\"404\");\n          }\n        });\n    });\n  };\n  render() {\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const {\n      getFieldDecorator,\n      getFieldsError,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form;\n\n    // Only show error after a field is touched.\n    const usernameError = isFieldTouched(\"email\") && getFieldError(\"email\");\n    const passwordError =\n      isFieldTouched(\"password\") && getFieldError(\"password\");\n    return (\n      <Fragment>\n        <Row gutter={20}>\n          <Col span={11}>\n            <div>\n              <img\n                alt=\"restaurant\"\n                style={{ width: \"100%\" }}\n                src=\"https://images.unsplash.com/photo-1537047902294-62a40c20a6ae?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1275&q=80\"\n              />\n            </div>\n          </Col>\n          <Col span={6} offset={3}>\n            <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n              <Title>Welcome to Restaurant</Title>\n              <Form.Item\n                validateStatus={usernameError ? \"error\" : \"\"}\n                help={usernameError || \"\"}\n              >\n                {getFieldDecorator(\"email\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"Please input your username!\"\n                    }\n                  ]\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"Username\"\n                    style={{ width: \"500px\" }}\n                  />\n                )}\n              </Form.Item>\n\n              <Form.Item\n                validateStatus={passwordError ? \"error\" : \"\"}\n                help={passwordError || \"\"}\n              >\n                {getFieldDecorator(\"password\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"Please input your Password!\"\n                    }\n                  ]\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    style={{ width: \"500px\" }}\n                  />\n                )}\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  disabled={hasErrors(getFieldsError())}\n                  block\n                >\n                  Log in\n                </Button>\n              </Form.Item>\n            </Form>\n          </Col>\n        </Row>\n      </Fragment>\n    );\n  }\n}\nconst WrappedHorizontalLoginForm = Form.create({ name: \"horizontal_login\" })(\n  SignInForm\n);\nexport default WrappedHorizontalLoginForm;\n"]},"metadata":{},"sourceType":"module"}