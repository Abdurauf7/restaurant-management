{"ast":null,"code":"import https from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\nimport { openNotification } from \"../components/custom/\";\nexport function getUser() {\n  return https.get(apiUrl + \"user\");\n}\nexport function login(values, history) {\n  return https.post(apiUrl + \"user/logi\", values).then(res => {\n    console.log(res);\n\n    if (res.data.status === 200) {\n      history.replace(`/admin/${res.data.data}`);\n    } else if (res.data.status === 302) {\n      history.replace(`/user/${res.data.data}`);\n    } else if (res.data.status === 401) {\n      return openNotification(\"error\", \"Email or Password is not valid\", \"Please retype Email or Password\");\n    } else if (res.data.status === 404) {\n      return openNotification(\"error\", \"Email or Password is not valid\", \"Please retype Email or Password\");\n    }\n  });\n}\nexport function addUser(data) {\n  return https.post(apiUrl + \"user/register\", data).then(res => {\n    if (res.data.status === 202) {\n      window.location.reload();\n    } else if (res.data.status === 404) {\n      openNotification(\"info\", \"User already exist\");\n    }\n  });\n}\nexport function registerUser(data, history) {\n  return https.post(apiUrl + \"user/register\", data).then(res => {\n    if (res.data.status === 202) {\n      openNotification(\"success\", \"Succes fully registered\");\n      history.replace(\"/\");\n    } else if (res.data.status === 404) {\n      openNotification(\"info\", \"User already exist\");\n    }\n  });\n}\nexport function deleteUser(dataId) {\n  return https.delete(apiUrl + `user/delete/${dataId}`).then(res => {\n    if (res.data.status === 202) {\n      window.location.reload();\n    }\n  });\n}\nexport function editUser(data) {\n  console.log(data);\n  return https.put(apiUrl + \"user/edit\", data).then(res => {\n    return window.location.reload();\n  });\n}","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/services/userServices.js"],"names":["https","apiUrl","openNotification","getUser","get","login","values","history","post","then","res","console","log","data","status","replace","addUser","window","location","reload","registerUser","deleteUser","dataId","delete","editUser","put"],"mappings":"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","sourcesContent":["import https from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\nimport { openNotification } from \"../components/custom/\";\n\nexport function getUser() {\n  return https.get(apiUrl + \"user\");\n}\nexport function login(values, history) {\n  return https.post(apiUrl + \"user/logi\", values).then(res => {\n    console.log(res);\n    if (res.data.status === 200) {\n      history.replace(`/admin/${res.data.data}`);\n    } else if (res.data.status === 302) {\n      history.replace(`/user/${res.data.data}`);\n    } else if (res.data.status === 401) {\n      return openNotification(\n        \"error\",\n        \"Email or Password is not valid\",\n        \"Please retype Email or Password\"\n      );\n    } else if (res.data.status === 404) {\n      return openNotification(\n        \"error\",\n        \"Email or Password is not valid\",\n        \"Please retype Email or Password\"\n      );\n    }\n  });\n}\nexport function addUser(data) {\n  return https.post(apiUrl + \"user/register\", data).then(res => {\n    if (res.data.status === 202) {\n      window.location.reload();\n    } else if (res.data.status === 404) {\n      openNotification(\"info\", \"User already exist\");\n    }\n  });\n}\n\nexport function registerUser(data, history) {\n  return https.post(apiUrl + \"user/register\", data).then(res => {\n    if (res.data.status === 202) {\n      openNotification(\"success\", \"Succes fully registered\");\n      history.replace(\"/\");\n    } else if (res.data.status === 404) {\n      openNotification(\"info\", \"User already exist\");\n    }\n  });\n}\n\nexport function deleteUser(dataId) {\n  return https.delete(apiUrl + `user/delete/${dataId}`).then(res => {\n    if (res.data.status === 202) {\n      window.location.reload();\n    }\n  });\n}\n\nexport function editUser(data) {\n  console.log(data);\n  return https.put(apiUrl + \"user/edit\", data).then(res => {\n    return window.location.reload();\n  });\n}\n"]},"metadata":{},"sourceType":"module"}