{"ast":null,"code":"var _jsxFileName = \"/Users/abdurauf/Desktop/\\u6BD5\\u4E1A\\u8BBE\\u8BA1/orginal/restaurant-management-system/plov/src/components/SignUpForm.jsx\";\n// React\nimport React, { Component, Fragment } from \"react\"; // Third part\n\nimport { Form, Icon, Input, Button, Row, Col, Typography } from \"antd\"; // custom\n\nimport \"../assets/style.css\";\nconst {\n  Title\n} = Typography;\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass SignUpForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log(\"Received values of form: \", values);\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    // To disable submit button at the beginning.\n    this.props.form.validateFields();\n  }\n\n  render() {\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const {\n      getFieldDecorator,\n      getFieldsError,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form; // Only show error after a field is touched.\n\n    const usernameError = isFieldTouched(\"username\") && getFieldError(\"username\");\n    const passwordError = isFieldTouched(\"password\") && getFieldError(\"password\");\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Row, {\n      gutter: 20,\n      style: {\n        background: \"#f2f2f2\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 11,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: {\n        width: \"100%\"\n      },\n      src: \"https://images.unsplash.com/photo-1537047902294-62a40c20a6ae?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1275&q=80\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      span: 6,\n      offset: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Welcome\"), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Sign up\"), React.createElement(Form.Item, {\n      validateStatus: usernameError ? \"error\" : \"\",\n      help: usernameError || \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, getFieldDecorator(\"username\", {\n      rules: [{\n        required: true,\n        message: \"Please input your username!\"\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      style: {\n        width: \"500px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      validateStatus: passwordError ? \"error\" : \"\",\n      help: passwordError || \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, getFieldDecorator(\"password\", {\n      rules: [{\n        required: true,\n        message: \"Please input your Password!\"\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      style: {\n        width: \"500px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      disabled: hasErrors(getFieldsError()),\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Log in\"))))));\n  }\n\n}\n\nconst WrappedHorizontalLoginForm = Form.create({\n  name: \"horizontal_login\"\n})(SignUpForm);\nexport default WrappedHorizontalLoginForm;","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/SignUpForm.jsx"],"names":["React","Component","Fragment","Form","Icon","Input","Button","Row","Col","Typography","Title","hasErrors","fieldsError","Object","keys","some","field","SignUpForm","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","componentDidMount","render","formItemLayout","labelCol","xs","span","sm","wrapperCol","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","usernameError","passwordError","background","width","rules","required","message","color","WrappedHorizontalLoginForm","create","name"],"mappings":"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","sourcesContent":["// React\nimport React, { Component, Fragment } from \"react\";\n\n// Third part\nimport { Form, Icon, Input, Button, Row, Col, Typography } from \"antd\";\n\n// custom\nimport \"../assets/style.css\";\n\nconst { Title } = Typography;\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass SignUpForm extends Component {\n  componentDidMount() {\n    // To disable submit button at the beginning.\n    this.props.form.validateFields();\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n      }\n    });\n  };\n  render() {\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const {\n      getFieldDecorator,\n      getFieldsError,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form;\n\n    // Only show error after a field is touched.\n    const usernameError =\n      isFieldTouched(\"username\") && getFieldError(\"username\");\n    const passwordError =\n      isFieldTouched(\"password\") && getFieldError(\"password\");\n    return (\n      <Fragment>\n        <Row gutter={20} style={{ background: \"#f2f2f2\" }}>\n          <Col span={11}>\n            <div>\n              <img\n                style={{ width: \"100%\" }}\n                src=\"https://images.unsplash.com/photo-1537047902294-62a40c20a6ae?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1275&q=80\"\n              />\n            </div>\n          </Col>\n          <Col span={6} offset={3}>\n            <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n              <Title>Welcome</Title>\n              <Title>Sign up</Title>\n              <Form.Item\n                validateStatus={usernameError ? \"error\" : \"\"}\n                help={usernameError || \"\"}\n              >\n                {getFieldDecorator(\"username\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"Please input your username!\"\n                    }\n                  ]\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"Username\"\n                    style={{ width: \"500px\" }}\n                  />\n                )}\n              </Form.Item>\n\n              <Form.Item\n                validateStatus={passwordError ? \"error\" : \"\"}\n                help={passwordError || \"\"}\n              >\n                {getFieldDecorator(\"password\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"Please input your Password!\"\n                    }\n                  ]\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    style={{ width: \"500px\" }}\n                  />\n                )}\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  disabled={hasErrors(getFieldsError())}\n                  block\n                >\n                  Log in\n                </Button>\n              </Form.Item>\n            </Form>\n          </Col>\n        </Row>\n      </Fragment>\n    );\n  }\n}\nconst WrappedHorizontalLoginForm = Form.create({ name: \"horizontal_login\" })(\n  SignUpForm\n);\nexport default WrappedHorizontalLoginForm;\n"]},"metadata":{},"sourceType":"module"}