{"ast":null,"code":"var _jsxFileName = \"/Users/abdurauf/Desktop/\\u6BD5\\u4E1A\\u8BBE\\u8BA1/orginal/restaurant-management-system/plov/src/components/common/content.jsx\";\n// React\nimport React, { Fragment, useEffect, useState } from \"react\"; // Third Part\n\nimport { Layout } from \"antd\"; // Custom\n\nimport { HeaderTitle, CustomTable, CustomModal, openNotification, CustomDrawer, CustomDrawerButton } from \"../common\"; // Services\n\nimport { getDishes, addDishes, deleteDishes, updateDishes } from \"../../services/dishServices\";\nconst {\n  Content\n} = Layout;\n\nconst CustomContent = () => {\n  // initializing states\n  const [data, setData] = useState([]);\n  const [visible, setVisible] = useState();\n  const [editData, setEditData] = useState({});\n  const [drawerVisible, setDrawerVisible] = useState(); //   hook cycles\n\n  const fetchDishData = async () => {\n    await getDishes().then(res => res.data).then(res => setData(res)).catch(err => openNotification(\"error\", \"Cannot get informations\", \"Please check connection\"));\n  };\n\n  useEffect(() => {\n    fetchDishData();\n  }, []); // custom Drawer\n\n  const showDrawer = () => {\n    setDrawerVisible(true);\n  };\n\n  const onhandleAdd = () => {\n    console.log(added);\n  };\n\n  const onClose = () => {\n    setDrawerVisible(false);\n  }; //   Modal handle\n\n\n  const onCancel = () => {\n    setVisible(false);\n  }; //   handle actions in table item\n\n\n  const onhandleUpdate = async item => {\n    const orginaldata = { ...item\n    };\n\n    try {\n      await updateDishes(item);\n    } catch (error) {\n      setEditData(orginaldata);\n    }\n  };\n\n  const deleteItem = async item => {\n    const orginaldata = data;\n\n    try {\n      await deleteDishes(item);\n    } catch (error) {\n      setData(orginaldata);\n    }\n  };\n\n  const editItem = async item => {\n    const newData = { ...item\n    };\n    setEditData(newData);\n    setVisible(true);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Content, {\n    style: {\n      margin: \"2em 16px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      background: \"#fff\",\n      padding: 24,\n      minHeight: 280\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(HeaderTitle, {\n    title: \"Dish Menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(CustomDrawerButton, {\n    title: \"Add\",\n    showDrawer: showDrawer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(CustomDrawer, {\n    title: \"Add Dish\",\n    visible: drawerVisible,\n    onClose: onClose,\n    onhandleAdd: onhandleAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(CustomTable, {\n    data: data,\n    colOne: \"name\",\n    colTwo: \"price\",\n    colThird: \"type\",\n    colFourth: \"date\",\n    colFive: \"Actions\",\n    deleteItem: deleteItem,\n    editItem: editItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(CustomModal, {\n    visible: visible,\n    onCancel: onCancel,\n    data: editData,\n    onhandleUpdate: onhandleUpdate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }))));\n};\n\nexport default CustomContent;","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/common/content.jsx"],"names":["React","Fragment","useEffect","useState","Layout","HeaderTitle","CustomTable","CustomModal","openNotification","CustomDrawer","CustomDrawerButton","getDishes","addDishes","deleteDishes","updateDishes","Content","CustomContent","data","setData","visible","setVisible","editData","setEditData","drawerVisible","setDrawerVisible","fetchDishData","then","res","catch","err","showDrawer","onhandleAdd","console","log","added","onClose","onCancel","onhandleUpdate","item","orginaldata","error","deleteItem","editItem","newData","margin","background","padding","minHeight"],"mappings":"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","sourcesContent":["// React\nimport React, { Fragment, useEffect, useState } from \"react\";\n\n// Third Part\nimport { Layout } from \"antd\";\n\n// Custom\nimport {\n  HeaderTitle,\n  CustomTable,\n  CustomModal,\n  openNotification,\n  CustomDrawer,\n  CustomDrawerButton\n} from \"../common\";\n// Services\nimport {\n  getDishes,\n  addDishes,\n  deleteDishes,\n  updateDishes\n} from \"../../services/dishServices\";\n\nconst { Content } = Layout;\n\nconst CustomContent = () => {\n  // initializing states\n  const [data, setData] = useState([]);\n  const [visible, setVisible] = useState();\n  const [editData, setEditData] = useState({});\n  const [drawerVisible, setDrawerVisible] = useState();\n\n  //   hook cycles\n  const fetchDishData = async () => {\n    await getDishes()\n      .then(res => res.data)\n      .then(res => setData(res))\n      .catch(err =>\n        openNotification(\n          \"error\",\n          \"Cannot get informations\",\n          \"Please check connection\"\n        )\n      );\n  };\n  useEffect(() => {\n    fetchDishData();\n  }, []);\n\n  // custom Drawer\n  const showDrawer = () => {\n    setDrawerVisible(true);\n  };\n  const onhandleAdd = () => {\n    console.log(added);\n  };\n\n  const onClose = () => {\n    setDrawerVisible(false);\n  };\n\n  //   Modal handle\n  const onCancel = () => {\n    setVisible(false);\n  };\n\n  //   handle actions in table item\n  const onhandleUpdate = async item => {\n    const orginaldata = { ...item };\n    try {\n      await updateDishes(item);\n    } catch (error) {\n      setEditData(orginaldata);\n    }\n  };\n  const deleteItem = async item => {\n    const orginaldata = data;\n    try {\n      await deleteDishes(item);\n    } catch (error) {\n      setData(orginaldata);\n    }\n  };\n\n  const editItem = async item => {\n    const newData = { ...item };\n    setEditData(newData);\n    setVisible(true);\n  };\n\n  return (\n    <Fragment>\n      <Content style={{ margin: \"2em 16px\" }}>\n        <div style={{ background: \"#fff\", padding: 24, minHeight: 280 }}>\n          <HeaderTitle title={\"Dish Menu\"} />\n          <CustomDrawerButton title=\"Add\" showDrawer={showDrawer} />\n\n          <CustomDrawer\n            title=\"Add Dish\"\n            visible={drawerVisible}\n            onClose={onClose}\n            onhandleAdd={onhandleAdd}\n          />\n          <CustomTable\n            data={data}\n            colOne={\"name\"}\n            colTwo={\"price\"}\n            colThird={\"type\"}\n            colFourth={\"date\"}\n            colFive={\"Actions\"}\n            deleteItem={deleteItem}\n            editItem={editItem}\n          />\n          <CustomModal\n            visible={visible}\n            onCancel={onCancel}\n            data={editData}\n            onhandleUpdate={onhandleUpdate}\n          />\n        </div>\n      </Content>\n    </Fragment>\n  );\n};\n\nexport default CustomContent;\n"]},"metadata":{},"sourceType":"module"}