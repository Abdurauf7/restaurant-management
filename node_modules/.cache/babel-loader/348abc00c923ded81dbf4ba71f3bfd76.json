{"ast":null,"code":"import https from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\nimport { openNotification } from \"../components/custom/\";\nimport { useState } from \"react\";\nexport function getUser() {\n  return https.get(apiUrl + \"user\");\n}\nexport function login(values, history) {\n  return https.post(apiUrl + \"user/login\", values).then(res => {\n    if (res.data.status === 200) {\n      history.replace(\"/admin\");\n      openNotification(\"success\", \"Successfully logged in\");\n    } else if (res.data.status === 302) {\n      history.replace(\"/user\");\n      openNotification(\"success\", \"Sucessfully logged in\");\n    } else if (res.data.status === 401) {\n      return openNotification(\"error\", \"Email or Password is not valid\", \"Please retype Email or Password\");\n    } else if (res.data.status === 404) {\n      return openNotification(\"error\", \"Email or Password is not valid\", \"Please retype Email or Password\");\n    }\n  });\n}\nexport function addUser(data) {\n  return https.post(apiUrl + \"user/register\", data).then(res => {\n    if (res.data.status === 202) {\n      window.location.reload();\n    } else if (res.data.status === 404) {\n      openNotification(\"info\", \"User already exist\");\n    }\n  });\n}\nexport function registerUser(data, history) {\n  return https.post(apiUrl + \"user/register\", data).then(res => {\n    if (res.data.status === 202) {\n      openNotification(\"success\", \"Succes fully registered\");\n      history.replace(\"/\");\n    } else if (res.data.status === 404) {\n      openNotification(\"info\", \"User already exist\");\n    }\n  });\n}\nexport function deleteUser(dataId) {\n  return https.delete(apiUrl + `user/delete/${dataId}`).then(res => {\n    if (res.data.status === 202) {\n      window.location.reload();\n    }\n  });\n}\nexport function editUser(data) {\n  return https.put(apiUrl + \"user/edit\", data).then(res => {\n    return window.location.reload();\n  });\n}","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/services/userServices.js"],"names":["https","apiUrl","openNotification","useState","getUser","get","login","values","history","post","then","res","data","status","replace","addUser","window","location","reload","registerUser","deleteUser","dataId","delete","editUser","put"],"mappings":"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","sourcesContent":["import https from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\nimport { openNotification } from \"../components/custom/\";\nimport { useState } from \"react\";\n\nexport function getUser() {\n  return https.get(apiUrl + \"user\");\n}\nexport function login(values, history) {\n  return https.post(apiUrl + \"user/login\", values).then(res => {\n    if (res.data.status === 200) {\n      history.replace(\"/admin\");\n      openNotification(\"success\", \"Successfully logged in\");\n    } else if (res.data.status === 302) {\n      history.replace(\"/user\");\n      openNotification(\"success\", \"Sucessfully logged in\");\n    } else if (res.data.status === 401) {\n      return openNotification(\n        \"error\",\n        \"Email or Password is not valid\",\n        \"Please retype Email or Password\"\n      );\n    } else if (res.data.status === 404) {\n      return openNotification(\n        \"error\",\n        \"Email or Password is not valid\",\n        \"Please retype Email or Password\"\n      );\n    }\n  });\n}\nexport function addUser(data) {\n  return https.post(apiUrl + \"user/register\", data).then(res => {\n    if (res.data.status === 202) {\n      window.location.reload();\n    } else if (res.data.status === 404) {\n      openNotification(\"info\", \"User already exist\");\n    }\n  });\n}\n\nexport function registerUser(data, history) {\n  return https.post(apiUrl + \"user/register\", data).then(res => {\n    if (res.data.status === 202) {\n      openNotification(\"success\", \"Succes fully registered\");\n      history.replace(\"/\");\n    } else if (res.data.status === 404) {\n      openNotification(\"info\", \"User already exist\");\n    }\n  });\n}\n\nexport function deleteUser(dataId) {\n  return https.delete(apiUrl + `user/delete/${dataId}`).then(res => {\n    if (res.data.status === 202) {\n      window.location.reload();\n    }\n  });\n}\n\nexport function editUser(data) {\n  return https.put(apiUrl + \"user/edit\", data).then(res => {\n    return window.location.reload();\n  });\n}\n"]},"metadata":{},"sourceType":"module"}