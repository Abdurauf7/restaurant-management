{"ast":null,"code":"var _jsxFileName = \"/Users/abdurauf/Desktop/\\u6BD5\\u4E1A\\u8BBE\\u8BA1/orginal/restaurant-management-system/plov/src/components/Admin/components/Charts/charts.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { VictoryPie } from \"victory\";\nimport { getUser } from \"../../../../services/userServices\";\nimport { getDishes } from \"../../../../services/dishServices\";\nimport { Coord, Chart } from \"bizcharts\";\n\nconst Charts = () => {\n  const [user, setUser] = useState([]);\n  const [dish, setDish] = useState([]);\n  const data = [{\n    genre: \"Sports\",\n    sold: 275,\n    income: 2300\n  }, {\n    genre: \"Strategy\",\n    sold: 115,\n    income: 667\n  }, {\n    genre: \"Action\",\n    sold: 120,\n    income: 982\n  }, {\n    genre: \"Shooter\",\n    sold: 350,\n    income: 5271\n  }, {\n    genre: \"Other\",\n    sold: 150,\n    income: 3710\n  }];\n\n  const fetchUser = async () => {\n    await getUser().then(res => res.data).then(data => setUser(data));\n  };\n\n  const fetchDish = async () => {\n    await getDishes().then(res => res.data).then(data => setDish(data));\n  };\n\n  useEffect(() => {\n    fetchUser();\n    fetchDish();\n  }, []);\n  console.log(user.length);\n  return React.createElement(\"div\", {\n    className: \"d-flex justify-content-start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Chart, {\n    width: 600,\n    height: 400,\n    data: val,\n    scale: cols,\n    padding: 100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Coord, {\n    type: \"gauge\",\n    startAngle: -9 / 8 * Math.PI,\n    endAngle: 1 / 8 * Math.PI,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Axis, {\n    name: \"value\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Geom, {\n    type: \"point\",\n    position: \"value\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })));\n};\n\nexport default Charts;","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/Admin/components/Charts/charts.jsx"],"names":["React","useState","useEffect","VictoryPie","getUser","getDishes","Coord","Chart","Charts","user","setUser","dish","setDish","data","genre","sold","income","fetchUser","then","res","fetchDish","console","log","length","val","cols","Math","PI"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,SAA3B;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,SAAT,QAA0B,mCAA1B;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,WAA7B;;AACA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMY,IAAI,GAAG,CACX;AAAEC,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,IAAI,EAAE,GAAzB;AAA8BC,IAAAA,MAAM,EAAE;AAAtC,GADW,EAEX;AAAEF,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,IAAI,EAAE,GAA3B;AAAgCC,IAAAA,MAAM,EAAE;AAAxC,GAFW,EAGX;AAAEF,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,IAAI,EAAE,GAAzB;AAA8BC,IAAAA,MAAM,EAAE;AAAtC,GAHW,EAIX;AAAEF,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,IAAI,EAAE,GAA1B;AAA+BC,IAAAA,MAAM,EAAE;AAAvC,GAJW,EAKX;AAAEF,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,IAAI,EAAE,GAAxB;AAA6BC,IAAAA,MAAM,EAAE;AAArC,GALW,CAAb;;AAOA,QAAMC,SAAS,GAAG,YAAY;AAC5B,UAAMb,OAAO,GACVc,IADG,CACEC,GAAG,IAAIA,GAAG,CAACN,IADb,EAEHK,IAFG,CAEEL,IAAI,IAAIH,OAAO,CAACG,IAAD,CAFjB,CAAN;AAGD,GAJD;;AAMA,QAAMO,SAAS,GAAG,YAAY;AAC5B,UAAMf,SAAS,GACZa,IADG,CACEC,GAAG,IAAIA,GAAG,CAACN,IADb,EAEHK,IAFG,CAEEL,IAAI,IAAID,OAAO,CAACC,IAAD,CAFjB,CAAN;AAGD,GAJD;;AAKAX,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,SAAS;AACTG,IAAAA,SAAS;AACV,GAHQ,EAGN,EAHM,CAAT;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYb,IAAI,CAACc,MAAjB;AACA,SACE;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,GAAd;AAAmB,IAAA,MAAM,EAAE,GAA3B;AAAgC,IAAA,IAAI,EAAEC,GAAtC;AAA2C,IAAA,KAAK,EAAEC,IAAlD;AAAwD,IAAA,OAAO,EAAE,GAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,UAAU,EAAG,CAAC,CAAD,GAAK,CAAN,GAAWC,IAAI,CAACC,EAF9B;AAGE,IAAA,QAAQ,EAAG,IAAI,CAAL,GAAUD,IAAI,CAACC,EAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAmB,IAAA,QAAQ,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CADF;AA4CD,CAxED;;AA0EA,eAAenB,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { VictoryPie } from \"victory\";\nimport { getUser } from \"../../../../services/userServices\";\nimport { getDishes } from \"../../../../services/dishServices\";\nimport { Coord, Chart } from \"bizcharts\";\nconst Charts = () => {\n  const [user, setUser] = useState([]);\n  const [dish, setDish] = useState([]);\n\n  const data = [\n    { genre: \"Sports\", sold: 275, income: 2300 },\n    { genre: \"Strategy\", sold: 115, income: 667 },\n    { genre: \"Action\", sold: 120, income: 982 },\n    { genre: \"Shooter\", sold: 350, income: 5271 },\n    { genre: \"Other\", sold: 150, income: 3710 }\n  ];\n  const fetchUser = async () => {\n    await getUser()\n      .then(res => res.data)\n      .then(data => setUser(data));\n  };\n\n  const fetchDish = async () => {\n    await getDishes()\n      .then(res => res.data)\n      .then(data => setDish(data));\n  };\n  useEffect(() => {\n    fetchUser();\n    fetchDish();\n  }, []);\n\n  console.log(user.length);\n  return (\n    <div className=\"d-flex justify-content-start\">\n      <Chart width={600} height={400} data={val} scale={cols} padding={100}>\n        <Coord\n          type=\"gauge\"\n          startAngle={(-9 / 8) * Math.PI}\n          endAngle={(1 / 8) * Math.PI}\n        />\n        <Axis name=\"value\" />\n        <Geom type=\"point\" position=\"value\" />\n      </Chart>\n      {/* <VictoryPie\n        height={200}\n        animate={{\n          duration: 500\n        }}\n        categories={{ x: [\"user\", \"dish\", \"mice\"] }}\n        colorScale={[\"tomato\", \"orange\", \"gold\", \"cyan\", \"navy\"]}\n        data={[\n          {\n            x: \"User\",\n            y: user.length\n          },\n          {\n            x: \"Dish\",\n            y: dish.length\n          }\n        ]}\n      />\n      <VictoryPie\n        height={150}\n        animate={{\n          duration: 2000\n        }}\n        categories={{ x: [\"dogs\", \"cats\", \"mice\"] }}\n        colorScale={[\"tomato\", \"orange\", \"gold\", \"cyan\", \"navy\"]}\n        data={[\n          { x: \"Cats\", y: 35 },\n          { x: \"Dogs\", y: 40 },\n          { x: \"Birds\", y: 55 }\n        ]}\n      /> */}\n    </div>\n  );\n};\n\nexport default Charts;\n"]},"metadata":{},"sourceType":"module"}