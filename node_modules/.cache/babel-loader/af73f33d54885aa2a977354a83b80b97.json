{"ast":null,"code":"var _jsxFileName = \"/Users/abdurauf/Desktop/\\u6BD5\\u4E1A\\u8BBE\\u8BA1/orginal/restaurant-management-system/plov/src/components/Admin/components/dish.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Layout, Table, Button, InputNumber, Input, Form, Row, Col } from \"antd\";\nimport { Resizable } from \"react-resizable\";\nimport \"../../../assets/css/AdminForm.css\";\nimport WrappedDishForm from \"../../common/dishDrawer\";\nimport Title from \"../../common/title\";\nimport { getDishes, addDishes, deleteDishes } from \"../../../services/dishServices\"; // for resizing\n\nconst ResizeableTitle = props => {\n  const {\n    onResize,\n    width,\n    ...restProps\n  } = props;\n\n  if (!width) {\n    return React.createElement(\"th\", Object.assign({}, restProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(Resizable, {\n    width: width,\n    height: 0,\n    onResize: onResize,\n    draggableOpts: {\n      enableUserSelectHack: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"th\", Object.assign({}, restProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })));\n};\n\nconst {\n  Content\n} = Layout; // Here Started Dish Component\n\nclass Dish extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      columns: [{\n        title: \"Name\",\n        dataIndex: \"name\",\n        editable: true\n      }, {\n        title: \"Price\",\n        dataIndex: \"price\",\n        editable: true\n      }, {\n        title: \"Type\",\n        dataIndex: \"type\",\n        editable: true\n      }, {\n        title: \"Date\",\n        dataIndex: \"date\",\n        editable: true\n      }, {\n        title: \"Action\",\n        dataIndex: \"operation\",\n        render: (text, record) => {\n          React.createElement(Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"danger\",\n            size: \"small\",\n            style: {\n              width: \"60px\",\n              margin: \" 0 1em\"\n            },\n            onClick: () => this.handleDelete(record.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, \"Delete\"), React.createElement(Button, {\n            type: \"primary\",\n            size: \"small\",\n            style: {\n              width: \"60px\"\n            } // onClick={}\n            ,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, \"Edit\"));\n        }\n      }],\n      visible: false,\n      dataSource: [],\n      title: \"Dish Menu\"\n    };\n\n    this.cancel = () => {\n      this.setState({\n        editingKey: \"\"\n      });\n    };\n\n    this.handleDelete = async id => {\n      const orginaldata = this.state.dataSource;\n\n      try {\n        await deleteDishes(id);\n      } catch (err) {\n        this.setState({\n          dataSource: orginaldata\n        });\n      }\n    };\n\n    this.components = {\n      header: {\n        cell: ResizeableTitle\n      }\n    };\n\n    this.handleAdd = async e => {\n      e.preventDefault();\n      await this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          addDishes(values);\n          this.setState({\n            visible: false\n          });\n        }\n      });\n    };\n\n    this.showDrawer = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.onClose = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleResize = index => (e, {\n      size\n    }) => {\n      this.setState(({\n        columns\n      }) => {\n        const nextColumns = [...columns];\n        nextColumns[index] = { ...nextColumns[index],\n          width: size.width\n        };\n        return {\n          columns: nextColumns\n        };\n      });\n    };\n  }\n\n  async populateDishTable() {\n    const {\n      data: dataSource\n    } = await getDishes();\n    this.setState({\n      dataSource\n    });\n  }\n\n  async componentDidMount() {\n    await this.populateDishTable();\n  }\n\n  edit(id) {\n    this.setState({\n      editingKey: id\n    });\n  }\n\n  render() {\n    const {\n      dataSource,\n      visible,\n      title\n    } = this.state;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Content, {\n      style: {\n        margin: \"2em 16px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        background: \"#fff\",\n        padding: 24,\n        minHeight: 280\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Title, {\n      title: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showDrawer,\n      style: {\n        margin: \"2em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Add\")), React.createElement(WrappedDishForm, {\n      onClose: this.onClose,\n      visible: visible,\n      form: this.props.form,\n      handleSubmit: this.handleAdd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(EditableContext.Provider, {\n      value: this.props.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Table, {\n      components: this.components,\n      columns: columns,\n      dataSource: dataSource,\n      bordered: true,\n      rowClassName: \"editable-row\",\n      title: () => \"Dish Menu\",\n      footer: () => \"Footer\",\n      pagination: false,\n      scroll: {\n        y: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst WrappedHorizontalLoginForm = Form.create()(Dish);\nexport default WrappedHorizontalLoginForm;","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/Admin/components/dish.js"],"names":["React","Component","Fragment","Layout","Table","Button","InputNumber","Input","Form","Row","Col","Resizable","WrappedDishForm","Title","getDishes","addDishes","deleteDishes","ResizeableTitle","props","onResize","width","restProps","enableUserSelectHack","Content","Dish","state","columns","title","dataIndex","editable","render","text","record","margin","handleDelete","id","visible","dataSource","cancel","setState","editingKey","orginaldata","err","components","header","cell","handleAdd","e","preventDefault","form","validateFieldsAndScroll","values","showDrawer","onClose","handleResize","index","size","nextColumns","populateDishTable","data","componentDidMount","edit","background","padding","minHeight","textAlign","y","WrappedHorizontalLoginForm","create"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport {\n  Layout,\n  Table,\n  Button,\n  InputNumber,\n  Input,\n  Form,\n  Row,\n  Col\n} from \"antd\";\nimport { Resizable } from \"react-resizable\";\nimport \"../../../assets/css/AdminForm.css\";\nimport WrappedDishForm from \"../../common/dishDrawer\";\nimport Title from \"../../common/title\";\nimport {\n  getDishes,\n  addDishes,\n  deleteDishes\n} from \"../../../services/dishServices\";\n\n// for resizing\nconst ResizeableTitle = props => {\n  const { onResize, width, ...restProps } = props;\n\n  if (!width) {\n    return <th {...restProps} />;\n  }\n  return (\n    <Resizable\n      width={width}\n      height={0}\n      onResize={onResize}\n      draggableOpts={{ enableUserSelectHack: false }}\n    >\n      <th {...restProps} />\n    </Resizable>\n  );\n};\n\nconst { Content } = Layout;\n\n// Here Started Dish Component\nclass Dish extends Component {\n  async populateDishTable() {\n    const { data: dataSource } = await getDishes();\n    this.setState({ dataSource });\n  }\n\n  async componentDidMount() {\n    await this.populateDishTable();\n  }\n\n  state = {\n    columns: [\n      {\n        title: \"Name\",\n        dataIndex: \"name\",\n        editable: true\n      },\n      {\n        title: \"Price\",\n        dataIndex: \"price\",\n        editable: true\n      },\n      {\n        title: \"Type\",\n        dataIndex: \"type\",\n        editable: true\n      },\n      {\n        title: \"Date\",\n        dataIndex: \"date\",\n        editable: true\n      },\n      {\n        title: \"Action\",\n        dataIndex: \"operation\",\n        render: (text, record) => {\n          <Fragment>\n            <Button\n              type=\"danger\"\n              size=\"small\"\n              style={{ width: \"60px\", margin: \" 0 1em\" }}\n              onClick={() => this.handleDelete(record.id)}\n            >\n              Delete\n            </Button>\n            <Button\n              type=\"primary\"\n              size=\"small\"\n              style={{ width: \"60px\" }}\n              // onClick={}\n            >\n              Edit\n            </Button>\n          </Fragment>;\n        }\n      }\n    ],\n\n    visible: false,\n    dataSource: [],\n    title: \"Dish Menu\"\n  };\n\n  cancel = () => {\n    this.setState({ editingKey: \"\" });\n  };\n  edit(id) {\n    this.setState({ editingKey: id });\n  }\n\n  handleDelete = async id => {\n    const orginaldata = this.state.dataSource;\n    try {\n      await deleteDishes(id);\n    } catch (err) {\n      this.setState({ dataSource: orginaldata });\n    }\n  };\n\n  components = {\n    header: {\n      cell: ResizeableTitle\n    }\n  };\n\n  handleAdd = async e => {\n    e.preventDefault();\n    await this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        addDishes(values);\n        this.setState({ visible: false });\n      }\n    });\n  };\n\n  showDrawer = () => {\n    this.setState({\n      visible: true\n    });\n  };\n  onClose = () => {\n    this.setState({\n      visible: false\n    });\n  };\n  handleResize = index => (e, { size }) => {\n    this.setState(({ columns }) => {\n      const nextColumns = [...columns];\n      nextColumns[index] = {\n        ...nextColumns[index],\n        width: size.width\n      };\n      return { columns: nextColumns };\n    });\n  };\n\n  render() {\n    const { dataSource, visible, title } = this.state;\n    return (\n      <Fragment>\n        <Content style={{ margin: \"2em 16px\" }}>\n          <div style={{ background: \"#fff\", padding: 24, minHeight: 280 }}>\n            <Title title={title} />\n            <div style={{ textAlign: \"right\" }}>\n              <Button\n                type=\"primary\"\n                onClick={this.showDrawer}\n                style={{ margin: \"2em\" }}\n              >\n                Add\n              </Button>\n            </div>\n            <WrappedDishForm\n              onClose={this.onClose}\n              visible={visible}\n              form={this.props.form}\n              handleSubmit={this.handleAdd}\n            />\n            <EditableContext.Provider value={this.props.form}>\n              <Table\n                components={this.components}\n                columns={columns}\n                dataSource={dataSource}\n                bordered\n                rowClassName=\"editable-row\"\n                title={() => \"Dish Menu\"}\n                footer={() => \"Footer\"}\n                pagination={false}\n                scroll={{ y: 500 }}\n              />\n            </EditableContext.Provider>\n          </div>\n        </Content>\n      </Fragment>\n    );\n  }\n}\n\nconst WrappedHorizontalLoginForm = Form.create()(Dish);\nexport default WrappedHorizontalLoginForm;\n"]},"metadata":{},"sourceType":"module"}