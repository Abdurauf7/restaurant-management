{"ast":null,"code":"var _jsxFileName = \"/Users/abdurauf/Desktop/diploma/restaurant-management-system/plov/src/components/Admin/components/DishComponent/components/dishContent.jsx\";\n// React\nimport React, { Fragment, useEffect, useState } from \"react\"; // Third Part\n\nimport { Layout, Divider } from \"antd\"; // Custom Common Components\n\nimport { HeaderTitle, openNotification, CustomDrawerButton } from \"../../../../custom/\";\nimport * as All from \"./\"; // Services\n\nimport { getDishes, addDishes, deleteDishes, updateDishes } from \"../../../../../services/dishServices\";\n\nconst DishContent = () => {\n  // initializing states\n  const [data, setData] = useState([]);\n  const [visible, setVisible] = useState();\n  const [editData, setEditData] = useState({});\n  const [drawerVisible, setDrawerVisible] = useState(); //   hook cycles\n\n  const fetchDishData = async () => {\n    await getDishes().then(res => res.data).then(res => setData(res)).catch(err => openNotification(\"error\", \"Cannot get informations\", \"Please check connection\"));\n  };\n\n  useEffect(() => {\n    fetchDishData();\n  }, []); // Show Drawer method\n\n  const showDrawer = () => {\n    setDrawerVisible(true);\n  }; //  Add Dish Method\n\n\n  const onhandleAdd = async items => {\n    await addDishes(items);\n  }; //Drawer and Modal close method\n\n\n  const onClose = () => {\n    setDrawerVisible(false);\n    window.location.reload();\n  }; //   Modal handle\n\n\n  const onCancel = () => {\n    setVisible(false);\n    window.location.reload();\n  }; //   Modifying dish item inside table\n\n\n  const onhandleUpdate = async item => {\n    console.log(item); // const orginaldata = { ...item };\n    // try {\n    //   await updateDishes(item);\n    // } catch (error) {\n    //   setEditData(orginaldata);\n    // }\n  }; // Deleting Dish items\n\n\n  const deleteItem = async item => {\n    const orginaldata = data;\n\n    try {\n      await deleteDishes(item);\n    } catch (error) {\n      setData(orginaldata);\n    }\n  }; // Editing Items\n\n\n  const editItem = async item => {\n    const newData = { ...item\n    };\n    setEditData(newData);\n    setVisible(true);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Layout.Content, {\n    style: {\n      margin: \"2em 16px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"border border-dark rounded\",\n    style: {\n      background: \"#fff\",\n      padding: 24,\n      minHeight: 280\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(HeaderTitle, {\n    title: \"Dish Menu\",\n    legth: data.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(CustomDrawerButton, {\n    title: \"Add Dish\",\n    showDrawer: showDrawer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(All.DishDarawer, {\n    title: \"Add Dish\",\n    visible: drawerVisible,\n    onClose: onClose,\n    onhandleAdd: onhandleAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(All.DishTable, {\n    data: data,\n    deleteItem: deleteItem,\n    editItem: editItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(All.DishModal, {\n    visible: visible,\n    onCancel: onCancel,\n    data: editData,\n    onhandleUpdate: onhandleUpdate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }))));\n};\n\nexport default DishContent;","map":{"version":3,"sources":["/Users/abdurauf/Desktop/diploma/restaurant-management-system/plov/src/components/Admin/components/DishComponent/components/dishContent.jsx"],"names":["React","Fragment","useEffect","useState","Layout","Divider","HeaderTitle","openNotification","CustomDrawerButton","All","getDishes","addDishes","deleteDishes","updateDishes","DishContent","data","setData","visible","setVisible","editData","setEditData","drawerVisible","setDrawerVisible","fetchDishData","then","res","catch","err","showDrawer","onhandleAdd","items","onClose","window","location","reload","onCancel","onhandleUpdate","item","console","log","deleteItem","orginaldata","error","editItem","newData","margin","background","padding","minHeight","length"],"mappings":"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","sourcesContent":["// React\nimport React, { Fragment, useEffect, useState } from \"react\";\n\n// Third Part\nimport { Layout, Divider } from \"antd\";\n\n// Custom Common Components\nimport {\n  HeaderTitle,\n  openNotification,\n  CustomDrawerButton,\n} from \"../../../../custom/\";\nimport * as All from \"./\";\n\n// Services\nimport {\n  getDishes,\n  addDishes,\n  deleteDishes,\n  updateDishes,\n} from \"../../../../../services/dishServices\";\n\nconst DishContent = () => {\n  // initializing states\n  const [data, setData] = useState([]);\n  const [visible, setVisible] = useState();\n  const [editData, setEditData] = useState({});\n  const [drawerVisible, setDrawerVisible] = useState();\n\n  //   hook cycles\n  const fetchDishData = async () => {\n    await getDishes()\n      .then((res) => res.data)\n      .then((res) => setData(res))\n      .catch((err) =>\n        openNotification(\n          \"error\",\n          \"Cannot get informations\",\n          \"Please check connection\"\n        )\n      );\n  };\n  useEffect(() => {\n    fetchDishData();\n  }, []);\n\n  // Show Drawer method\n  const showDrawer = () => {\n    setDrawerVisible(true);\n  };\n\n  //  Add Dish Method\n  const onhandleAdd = async (items) => {\n    await addDishes(items);\n  };\n\n  //Drawer and Modal close method\n  const onClose = () => {\n    setDrawerVisible(false);\n    window.location.reload();\n  };\n\n  //   Modal handle\n  const onCancel = () => {\n    setVisible(false);\n    window.location.reload();\n  };\n\n  //   Modifying dish item inside table\n  const onhandleUpdate = async (item) => {\n    console.log(item);\n    // const orginaldata = { ...item };\n    // try {\n    //   await updateDishes(item);\n    // } catch (error) {\n    //   setEditData(orginaldata);\n    // }\n  };\n  // Deleting Dish items\n  const deleteItem = async (item) => {\n    const orginaldata = data;\n    try {\n      await deleteDishes(item);\n    } catch (error) {\n      setData(orginaldata);\n    }\n  };\n\n  // Editing Items\n  const editItem = async (item) => {\n    const newData = { ...item };\n    setEditData(newData);\n    setVisible(true);\n  };\n\n  return (\n    <Fragment>\n      <Layout.Content style={{ margin: \"2em 16px\" }}>\n        <div\n          className=\"border border-dark rounded\"\n          style={{ background: \"#fff\", padding: 24, minHeight: 280 }}\n        >\n          <HeaderTitle title={\"Dish Menu\"} legth={data.length} />\n          <CustomDrawerButton title=\"Add Dish\" showDrawer={showDrawer} />\n          <Divider />\n          <All.DishDarawer\n            title=\"Add Dish\"\n            visible={drawerVisible}\n            onClose={onClose}\n            onhandleAdd={onhandleAdd}\n          />\n          <All.DishTable\n            data={data}\n            deleteItem={deleteItem}\n            editItem={editItem}\n          />\n          <All.DishModal\n            visible={visible}\n            onCancel={onCancel}\n            data={editData}\n            onhandleUpdate={onhandleUpdate}\n          />\n        </div>\n      </Layout.Content>\n    </Fragment>\n  );\n};\n\nexport default DishContent;\n"]},"metadata":{},"sourceType":"module"}