{"ast":null,"code":"var _jsxFileName = \"/Users/abdurauf/Desktop/\\u6BD5\\u4E1A\\u8BBE\\u8BA1/orginal/restaurant-management-system/plov/src/components/LoginForm/signInForm.jsx\";\n// React\nimport React, { Component, Fragment } from \"react\"; // Third part\n\nimport { Form, Icon, Input, Button, Row, Col, Typography } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport https from \"../../services/httpService\";\nimport { apiUrl } from \"../../config.json\"; // custom\n\nimport \"../../assets/css/LoginForm.css\";\nconst {\n  Title\n} = Typography;\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass SignInForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        history\n      } = this.props;\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          https.post(apiUrl + \"signin\", {\n            email: values.email,\n            password: values.password\n          }).then(res => {\n            if (res.data.status === 200) {\n              history.push(\"/admin\");\n            } else if (res.data.status === 404) {\n              console.log(\"404\");\n            }\n          });\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    // To disable submit button at the beginning.\n    this.props.form.validateFields();\n  }\n\n  render() {\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const {\n      getFieldDecorator,\n      getFieldsError,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form; // Only show error after a field is touched.\n\n    const usernameError = isFieldTouched(\"email\") && getFieldError(\"email\");\n    const passwordError = isFieldTouched(\"password\") && getFieldError(\"password\");\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Row, {\n      gutter: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"restaurant\",\n      style: {\n        width: \"100%\"\n      },\n      src: \"https://images.unsplash.com/photo-1537047902294-62a40c20a6ae?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1275&q=80\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      xs: {\n        span: 10,\n        offset: 2\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Title, {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Welcomes\"), React.createElement(Form.Item, {\n      validateStatus: usernameError ? \"error\" : \"\",\n      help: usernameError || \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, getFieldDecorator(\"email\", {\n      rules: [{\n        required: true,\n        message: \"Please input your username!\"\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      style: {\n        width: \"500px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      validateStatus: passwordError ? \"error\" : \"\",\n      help: passwordError || \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, getFieldDecorator(\"password\", {\n      rules: [{\n        required: true,\n        message: \"Please input your Password!\"\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      style: {\n        width: \"500px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      disabled: hasErrors(getFieldsError()),\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Log in\")))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Register\"))))))));\n  }\n\n}\n\nconst WrapperLoginForm = Form.create({\n  name: \"login\"\n})(SignInForm);\nexport default WrapperLoginForm;","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/LoginForm/signInForm.jsx"],"names":["React","Component","Fragment","Form","Icon","Input","Button","Row","Col","Typography","Link","https","apiUrl","Title","hasErrors","fieldsError","Object","keys","some","field","SignInForm","handleSubmit","e","preventDefault","history","props","form","validateFields","err","values","post","email","password","then","res","data","status","push","console","log","componentDidMount","render","formItemLayout","labelCol","xs","span","sm","wrapperCol","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","usernameError","passwordError","width","offset","textAlign","rules","required","message","color","WrapperLoginForm","create","name"],"mappings":"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","sourcesContent":["// React\nimport React, { Component, Fragment } from \"react\";\n\n// Third part\nimport { Form, Icon, Input, Button, Row, Col, Typography } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nimport https from \"../../services/httpService\";\nimport { apiUrl } from \"../../config.json\";\n// custom\nimport \"../../assets/css/LoginForm.css\";\n\nconst { Title } = Typography;\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass SignInForm extends Component {\n  componentDidMount() {\n    // To disable submit button at the beginning.\n    this.props.form.validateFields();\n  }\n  handleSubmit = e => {\n    e.preventDefault();\n    const { history } = this.props;\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        https\n          .post(apiUrl + \"signin\", {\n            email: values.email,\n            password: values.password\n          })\n          .then(res => {\n            if (res.data.status === 200) {\n              history.push(\"/admin\");\n            } else if (res.data.status === 404) {\n              console.log(\"404\");\n            }\n          });\n      }\n    });\n  };\n  render() {\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const {\n      getFieldDecorator,\n      getFieldsError,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form;\n\n    // Only show error after a field is touched.\n    const usernameError = isFieldTouched(\"email\") && getFieldError(\"email\");\n    const passwordError =\n      isFieldTouched(\"password\") && getFieldError(\"password\");\n    return (\n      <Fragment>\n        <div>\n          <Row gutter={20}>\n            <Col xs={10}>\n              <div>\n                <img\n                  alt=\"restaurant\"\n                  style={{ width: \"100%\" }}\n                  src=\"https://images.unsplash.com/photo-1537047902294-62a40c20a6ae?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1275&q=80\"\n                />\n              </div>\n            </Col>\n            <Col xs={{ span: 10, offset: 2 }}>\n              <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n                <Title style={{ textAlign: \"center\" }}>Welcomes</Title>\n                <Form.Item\n                  validateStatus={usernameError ? \"error\" : \"\"}\n                  help={usernameError || \"\"}\n                >\n                  {getFieldDecorator(\"email\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please input your username!\"\n                      }\n                    ]\n                  })(\n                    <Input\n                      prefix={\n                        <Icon\n                          type=\"user\"\n                          style={{ color: \"rgba(0,0,0,.25)\" }}\n                        />\n                      }\n                      placeholder=\"Username\"\n                      style={{ width: \"500px\" }}\n                    />\n                  )}\n                </Form.Item>\n\n                <Form.Item\n                  validateStatus={passwordError ? \"error\" : \"\"}\n                  help={passwordError || \"\"}\n                >\n                  {getFieldDecorator(\"password\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please input your Password!\"\n                      }\n                    ]\n                  })(\n                    <Input\n                      prefix={\n                        <Icon\n                          type=\"lock\"\n                          style={{ color: \"rgba(0,0,0,.25)\" }}\n                        />\n                      }\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      style={{ width: \"500px\" }}\n                    />\n                  )}\n                </Form.Item>\n\n                <Form.Item>\n                  <Row>\n                    <Col>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        disabled={hasErrors(getFieldsError())}\n                        block\n                      >\n                        Log in\n                      </Button>\n                    </Col>\n                  </Row>\n                </Form.Item>\n                <Form.Item>\n                  <Link to=\"/register\">\n                    <a>Register</a>\n                  </Link>\n                </Form.Item>\n              </Form>\n            </Col>\n          </Row>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst WrapperLoginForm = Form.create({ name: \"login\" })(SignInForm);\nexport default WrapperLoginForm;\n"]},"metadata":{},"sourceType":"module"}