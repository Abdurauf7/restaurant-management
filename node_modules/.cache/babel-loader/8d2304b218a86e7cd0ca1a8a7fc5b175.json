{"ast":null,"code":"var _jsxFileName = \"/Users/abdurauf/Desktop/\\u6BD5\\u4E1A\\u8BBE\\u8BA1/orginal/restaurant-management-system/plov/src/components/Employee/components/Profile/components/avatar.jsx\";\nimport React from \"react\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport { Upload, message } from \"antd\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener(\"load\", () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n\n  if (!isJpgOrPng) {\n    message.error(\"You can only upload JPG/PNG file!\");\n  }\n\n  const isLt2M = file.size / 1024 / 1024 < 2;\n\n  if (!isLt2M) {\n    message.error(\"Image must smaller than 2MB!\");\n  }\n\n  return isJpgOrPng && isLt2M;\n}\n\nclass Avatar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false\n    };\n\n    this.handleChange = info => {\n      if (info.file.status === \"uploading\") {\n        this.setState({\n          loading: true\n        });\n        return;\n      }\n\n      if (info.file.status === \"done\") {\n        // Get this url from response in real world.\n        getBase64(info.file.originFileObj, imageUrl => this.setState({\n          imageUrl,\n          loading: false\n        }));\n      }\n    };\n  }\n\n  render() {\n    const uploadButton = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(LoadingOutlined, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }) : React.createElement(PlusOutlined, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Upload\"));\n    const {\n      imageUrl\n    } = this.state;\n    return React.createElement(Upload, {\n      name: \"avatar\",\n      listType: \"picture-card\",\n      className: \"avatar-uploader\",\n      showUploadList: false,\n      action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n      beforeUpload: beforeUpload,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, imageUrl ? React.createElement(\"img\", {\n      src: imageUrl,\n      alt: \"avatar\",\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }) : uploadButton);\n  }\n\n}\n\nexport default Avatar;","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/Employee/components/Profile/components/avatar.jsx"],"names":["React","Upload","message","LoadingOutlined","PlusOutlined","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isJpgOrPng","type","error","isLt2M","size","Avatar","Component","state","loading","handleChange","info","status","setState","originFileObj","imageUrl","render","uploadButton","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,oBAAP;AACA,OAAO,aAAP;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,MAAhC;AACA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,mBAA9C;;AAEA,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,QAAxB,EAAkC;AAChC,QAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,EAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAAgC,MAAMH,QAAQ,CAACC,MAAM,CAACG,MAAR,CAA9C;AACAH,EAAAA,MAAM,CAACI,aAAP,CAAqBN,GAArB;AACD;;AAED,SAASO,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,QAAMC,UAAU,GAAGD,IAAI,CAACE,IAAL,KAAc,YAAd,IAA8BF,IAAI,CAACE,IAAL,KAAc,WAA/D;;AACA,MAAI,CAACD,UAAL,EAAiB;AACfb,IAAAA,OAAO,CAACe,KAAR,CAAc,mCAAd;AACD;;AACD,QAAMC,MAAM,GAAGJ,IAAI,CAACK,IAAL,GAAY,IAAZ,GAAmB,IAAnB,GAA0B,CAAzC;;AACA,MAAI,CAACD,MAAL,EAAa;AACXhB,IAAAA,OAAO,CAACe,KAAR,CAAc,8BAAd;AACD;;AACD,SAAOF,UAAU,IAAIG,MAArB;AACD;;AAED,MAAME,MAAN,SAAqBpB,KAAK,CAACqB,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD2B;;AAAA,SAKnCC,YALmC,GAKnBC,IAAD,IAAU;AACvB,UAAIA,IAAI,CAACX,IAAL,CAAUY,MAAV,KAAqB,WAAzB,EAAsC;AACpC,aAAKC,QAAL,CAAc;AAAEJ,UAAAA,OAAO,EAAE;AAAX,SAAd;AACA;AACD;;AACD,UAAIE,IAAI,CAACX,IAAL,CAAUY,MAAV,KAAqB,MAAzB,EAAiC;AAC/B;AACArB,QAAAA,SAAS,CAACoB,IAAI,CAACX,IAAL,CAAUc,aAAX,EAA2BC,QAAD,IACjC,KAAKF,QAAL,CAAc;AACZE,UAAAA,QADY;AAEZN,UAAAA,OAAO,EAAE;AAFG,SAAd,CADO,CAAT;AAMD;AACF,KAnBkC;AAAA;;AAqBnCO,EAAAA,MAAM,GAAG;AACP,UAAMC,YAAY,GAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKT,KAAL,CAAWC,OAAX,GAAqB,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,GAA2C,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD9C,EAEE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAMA,UAAM;AAAEM,MAAAA;AAAF,QAAe,KAAKP,KAA1B;AACA,WACE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,QAAQ,EAAC,cAFX;AAGE,MAAA,SAAS,EAAC,iBAHZ;AAIE,MAAA,cAAc,EAAE,KAJlB;AAKE,MAAA,MAAM,EAAC,kDALT;AAME,MAAA,YAAY,EAAET,YANhB;AAOE,MAAA,QAAQ,EAAE,KAAKW,YAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASGK,QAAQ,GACP;AAAK,MAAA,GAAG,EAAEA,QAAV;AAAoB,MAAA,GAAG,EAAC,QAAxB;AAAiC,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAE;AAAT,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO,GAGPD,YAZJ,CADF;AAiBD;;AA9CkC;;AAgDrC,eAAeX,MAAf","sourcesContent":["import React from \"react\";\n\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport { Upload, message } from \"antd\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener(\"load\", () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n  if (!isJpgOrPng) {\n    message.error(\"You can only upload JPG/PNG file!\");\n  }\n  const isLt2M = file.size / 1024 / 1024 < 2;\n  if (!isLt2M) {\n    message.error(\"Image must smaller than 2MB!\");\n  }\n  return isJpgOrPng && isLt2M;\n}\n\nclass Avatar extends React.Component {\n  state = {\n    loading: false,\n  };\n\n  handleChange = (info) => {\n    if (info.file.status === \"uploading\") {\n      this.setState({ loading: true });\n      return;\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, (imageUrl) =>\n        this.setState({\n          imageUrl,\n          loading: false,\n        })\n      );\n    }\n  };\n\n  render() {\n    const uploadButton = (\n      <div>\n        {this.state.loading ? <LoadingOutlined /> : <PlusOutlined />}\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n    const { imageUrl } = this.state;\n    return (\n      <Upload\n        name=\"avatar\"\n        listType=\"picture-card\"\n        className=\"avatar-uploader\"\n        showUploadList={false}\n        action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n        beforeUpload={beforeUpload}\n        onChange={this.handleChange}\n      >\n        {imageUrl ? (\n          <img src={imageUrl} alt=\"avatar\" style={{ width: \"100%\" }} />\n        ) : (\n          uploadButton\n        )}\n      </Upload>\n    );\n  }\n}\nexport default Avatar;\n"]},"metadata":{},"sourceType":"module"}