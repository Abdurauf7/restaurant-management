{"ast":null,"code":"var _jsxFileName = \"/Users/abdurauf/Desktop/\\u6BD5\\u4E1A\\u8BBE\\u8BA1/orginal/restaurant-management-system/plov/src/components/Admin/components/personal.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Layout, Table, Button, InputNumber, Input, Form, Row, Col } from \"antd\";\nimport { Resizable } from \"react-resizable\";\nimport Drawers from \"../../common/personalDrawer\";\nimport \"../../../assets/css/AdminForm.css\"; // for resizing\n\nconst ResizeableTitle = props => {\n  const {\n    onResize,\n    width,\n    ...restProps\n  } = props;\n\n  if (!width) {\n    return React.createElement(\"th\", Object.assign({}, restProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(Resizable, {\n    width: width,\n    height: 0,\n    onResize: onResize,\n    draggableOpts: {\n      enableUserSelectHack: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"th\", Object.assign({}, restProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })));\n}; // for editable\n\n\nconst EditableContext = React.createContext();\n\nclass EditableCell extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getInput = () => {\n      if (this.props.inputType === \"number\") {\n        return React.createElement(InputNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      });\n    };\n\n    this.renderCell = ({\n      getFieldDecorator\n    }) => {\n      const {\n        editing,\n        dataIndex,\n        title,\n        inputType,\n        record,\n        index,\n        children,\n        ...restProps\n      } = this.props;\n      return React.createElement(\"td\", Object.assign({}, restProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), editing ? React.createElement(Form.Item, {\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, getFieldDecorator(dataIndex, {\n        rules: [{\n          required: true,\n          message: `Please Input ${title}!`\n        }],\n        initialValue: record[dataIndex]\n      })(this.getInput())) : children);\n    };\n  }\n\n  render() {\n    return React.createElement(EditableContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.renderCell);\n  }\n\n}\n\nconst {\n  Content\n} = Layout;\n\nclass Personal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.namehandleChange = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.priceHandleChange = price => {\n      this.setState({\n        price: price\n      });\n    };\n\n    this.typehandleChange = type => {\n      this.setState({\n        type: type\n      });\n    };\n\n    this.agehandleChange = age => {\n      this.setState({\n        age: age\n      });\n    };\n\n    this.isEditing = record => record.key === this.state.editingKey;\n\n    this.cancel = () => {\n      this.setState({\n        editingKey: \"\"\n      });\n    };\n\n    this.handleDelete = key => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({\n        dataSource: dataSource.filter(item => item.key !== key)\n      });\n    };\n\n    this.showDrawer = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.onClose = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.components = {\n      header: {\n        cell: ResizeableTitle\n      },\n      body: {\n        cell: EditableCell\n      }\n    };\n\n    this.handleAdd = () => {\n      const {\n        key,\n        dataSource,\n        name,\n        price,\n        type,\n        age,\n        address,\n        phone\n      } = this.state;\n      const newData = {\n        key: key,\n        name: name,\n        price: price + \"$\",\n        type: type,\n        age: age,\n        address: address,\n        phone: phone\n      };\n\n      if (name !== \"\" && price !== null && type !== \"\" && age !== null && address !== \"\") {\n        this.setState({\n          dataSource: [...dataSource, newData],\n          key: key + 1\n        });\n      }\n    };\n\n    this.handleResize = index => (e, {\n      size\n    }) => {\n      this.setState(({\n        columns\n      }) => {\n        const nextColumns = [...columns];\n        nextColumns[index] = { ...nextColumns[index],\n          width: size.width\n        };\n        return {\n          columns: nextColumns\n        };\n      });\n    };\n\n    this.state = {\n      columns: [{\n        title: \"Name\",\n        dataIndex: \"name\",\n        editable: true\n      }, {\n        title: \"Salary\",\n        dataIndex: \"price\",\n        editable: true\n      }, {\n        title: \"Type\",\n        dataIndex: \"type\",\n        editable: true\n      }, {\n        title: \"Age\",\n        dataIndex: \"age\",\n        editable: true\n      }, {\n        title: \"Address\",\n        dataIndex: \"address\",\n        editable: true\n      }, {\n        title: \"Phone\",\n        dataIndex: \"phone\",\n        editable: true\n      }, {\n        title: \"Action\",\n        dataIndex: \"operation\",\n        render: (text, record) => {\n          const {\n            editingKey\n          } = this.state;\n          const editable = this.isEditing(record);\n          return editable ? React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }, React.createElement(EditableContext.Consumer, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, form => React.createElement(Row, {\n            gutter: 20,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, React.createElement(Col, {\n            span: 9,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, React.createElement(Button, {\n            size: \"small\",\n            onClick: () => this.save(form, record.key),\n            style: {\n              width: \"60px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }, \"Save\")), React.createElement(Col, {\n            span: 9,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144\n            },\n            __self: this\n          }, React.createElement(Button, {\n            size: \"small\",\n            style: {\n              width: \"70px\"\n            },\n            onClick: () => this.cancel(record.key),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145\n            },\n            __self: this\n          }, \"Cancel\"))))) : React.createElement(Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158\n            },\n            __self: this\n          }, React.createElement(Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159\n            },\n            __self: this\n          }, React.createElement(Col, {\n            span: 10,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"danger\",\n            size: \"small\",\n            style: {\n              width: \"60px\"\n            },\n            onClick: () => this.handleDelete(record.key),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161\n            },\n            __self: this\n          }, \"Delete\")), React.createElement(Col, {\n            span: 8,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"primary\",\n            size: \"small\",\n            style: {\n              width: \"60px\"\n            },\n            disabled: editingKey !== \"\",\n            onClick: () => this.edit(record.key),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171\n            },\n            __self: this\n          }, \"Edit\"))));\n        }\n      }],\n      dataSource: [],\n      key: 0,\n      editingKey: \"\",\n      name: \"\",\n      price: \"\",\n      type: \"\",\n      age: \"\",\n      address: \"\",\n      phone: \"\",\n      visible: false\n    };\n    this.typehandleChange = this.typehandleChange.bind(this);\n    this.agehandleChange = this.agehandleChange.bind(this);\n    this.addresshandleChange = this.addresshandleChange.bind(this);\n    this.phoneHandleChange = this.phoneHandleChange.bind(this);\n  }\n\n  addresshandleChange(event) {\n    this.setState({\n      address: event.target.value\n    });\n  }\n\n  phoneHandleChange(phone) {\n    this.setState({\n      phone: phone\n    });\n  }\n\n  edit(key) {\n    this.setState({\n      editingKey: key\n    });\n  }\n\n  save(form, key) {\n    form.validateFields((error, row) => {\n      if (error) {\n        return;\n      }\n\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => key === item.key);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item,\n          ...row\n        });\n        this.setState({\n          dataSource: newData,\n          editingKey: \"\"\n        });\n      } else {\n        newData.push(row);\n        this.setState({\n          dataSource: newData,\n          editingKey: \"\"\n        });\n      }\n    });\n  }\n\n  render() {\n    const columns = this.state.columns.map((col, index) => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return { ...col,\n        onHeaderCell: column => ({\n          width: column.width,\n          onResize: this.handleResize(index)\n        }),\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === \"age\" ? \"number\" : \"text\",\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record)\n        })\n      };\n    });\n    const {\n      dataSource,\n      visible,\n      name,\n      price,\n      age,\n      address,\n      phone\n    } = this.state;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(Content, {\n      style: {\n        margin: \"2em 16px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        background: \"#fff\",\n        padding: 24,\n        minHeight: 280\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showDrawer,\n      style: {\n        margin: \"2em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, \"Add\")), React.createElement(Drawers, {\n      onClose: this.onClose,\n      visible: visible,\n      name: name,\n      price: price,\n      age: age,\n      address: address,\n      phone: phone,\n      namehandleChange: this.namehandleChange,\n      priceHandleChange: this.priceHandleChange,\n      typehandleChange: this.typehandleChange,\n      agehandleChange: this.agehandleChange,\n      addresshandleChange: this.addresshandleChange,\n      phoneHandleChange: this.phoneHandleChange,\n      handleAdd: this.handleAdd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }), React.createElement(EditableContext.Provider, {\n      value: this.props.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(Table, {\n      components: this.components,\n      columns: columns,\n      dataSource: dataSource,\n      bordered: true,\n      rowClassName: \"editable-row\",\n      title: () => \"Personal Information\",\n      footer: () => \"Footer\",\n      pagination: false,\n      scroll: {\n        y: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst WrappedHorizontalLoginForm = Form.create()(Personal);\nexport default WrappedHorizontalLoginForm;","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/Admin/components/personal.js"],"names":["React","Component","Fragment","Layout","Table","Button","InputNumber","Input","Form","Row","Col","Resizable","Drawers","ResizeableTitle","props","onResize","width","restProps","enableUserSelectHack","EditableContext","createContext","EditableCell","getInput","inputType","renderCell","getFieldDecorator","editing","dataIndex","title","record","index","children","margin","rules","required","message","initialValue","render","Content","Personal","constructor","namehandleChange","event","setState","name","target","value","priceHandleChange","price","typehandleChange","type","agehandleChange","age","isEditing","key","state","editingKey","cancel","handleDelete","dataSource","filter","item","showDrawer","visible","onClose","components","header","cell","body","handleAdd","address","phone","newData","handleResize","e","size","columns","nextColumns","editable","text","form","save","edit","bind","addresshandleChange","phoneHandleChange","validateFields","error","row","findIndex","splice","push","map","col","onHeaderCell","column","onCell","background","padding","minHeight","textAlign","y","WrappedHorizontalLoginForm","create"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport {\n  Layout,\n  Table,\n  Button,\n  InputNumber,\n  Input,\n  Form,\n  Row,\n  Col\n} from \"antd\";\nimport { Resizable } from \"react-resizable\";\nimport Drawers from \"../../common/personalDrawer\";\n\nimport \"../../../assets/css/AdminForm.css\";\n\n// for resizing\nconst ResizeableTitle = props => {\n  const { onResize, width, ...restProps } = props;\n\n  if (!width) {\n    return <th {...restProps} />;\n  }\n\n  return (\n    <Resizable\n      width={width}\n      height={0}\n      onResize={onResize}\n      draggableOpts={{ enableUserSelectHack: false }}\n    >\n      <th {...restProps} />\n    </Resizable>\n  );\n};\n\n// for editable\nconst EditableContext = React.createContext();\n\nclass EditableCell extends React.Component {\n  getInput = () => {\n    if (this.props.inputType === \"number\") {\n      return <InputNumber />;\n    }\n    return <Input />;\n  };\n\n  renderCell = ({ getFieldDecorator }) => {\n    const {\n      editing,\n      dataIndex,\n      title,\n      inputType,\n      record,\n      index,\n      children,\n      ...restProps\n    } = this.props;\n    return (\n      <td {...restProps}>\n        {editing ? (\n          <Form.Item style={{ margin: 0 }}>\n            {getFieldDecorator(dataIndex, {\n              rules: [\n                {\n                  required: true,\n                  message: `Please Input ${title}!`\n                }\n              ],\n              initialValue: record[dataIndex]\n            })(this.getInput())}\n          </Form.Item>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  };\n\n  render() {\n    return (\n      <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\n    );\n  }\n}\n\nconst { Content } = Layout;\nclass Personal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      columns: [\n        {\n          title: \"Name\",\n          dataIndex: \"name\",\n          editable: true\n        },\n        {\n          title: \"Salary\",\n          dataIndex: \"price\",\n          editable: true\n        },\n        {\n          title: \"Type\",\n          dataIndex: \"type\",\n          editable: true\n        },\n        {\n          title: \"Age\",\n          dataIndex: \"age\",\n          editable: true\n        },\n        {\n          title: \"Address\",\n          dataIndex: \"address\",\n          editable: true\n        },\n        {\n          title: \"Phone\",\n          dataIndex: \"phone\",\n          editable: true\n        },\n        {\n          title: \"Action\",\n          dataIndex: \"operation\",\n          render: (text, record) => {\n            const { editingKey } = this.state;\n            const editable = this.isEditing(record);\n            return editable ? (\n              <span>\n                <EditableContext.Consumer>\n                  {form => (\n                    <Row gutter={20}>\n                      <Col span={9}>\n                        <Button\n                          size=\"small\"\n                          onClick={() => this.save(form, record.key)}\n                          style={{ width: \"60px\" }}\n                        >\n                          Save\n                        </Button>\n                      </Col>\n                      <Col span={9}>\n                        <Button\n                          size=\"small\"\n                          style={{ width: \"70px\" }}\n                          onClick={() => this.cancel(record.key)}\n                        >\n                          Cancel\n                        </Button>\n                      </Col>\n                    </Row>\n                  )}\n                </EditableContext.Consumer>\n              </span>\n            ) : (\n              <Fragment>\n                <Row>\n                  <Col span={10}>\n                    <Button\n                      type=\"danger\"\n                      size=\"small\"\n                      style={{ width: \"60px\" }}\n                      onClick={() => this.handleDelete(record.key)}\n                    >\n                      Delete\n                    </Button>\n                  </Col>\n                  <Col span={8}>\n                    <Button\n                      type=\"primary\"\n                      size=\"small\"\n                      style={{ width: \"60px\" }}\n                      disabled={editingKey !== \"\"}\n                      onClick={() => this.edit(record.key)}\n                    >\n                      Edit\n                    </Button>\n                  </Col>\n                </Row>\n              </Fragment>\n            );\n          }\n        }\n      ],\n\n      dataSource: [],\n      key: 0,\n      editingKey: \"\",\n      name: \"\",\n      price: \"\",\n      type: \"\",\n      age: \"\",\n      address: \"\",\n      phone: \"\",\n      visible: false\n    };\n\n    this.typehandleChange = this.typehandleChange.bind(this);\n    this.agehandleChange = this.agehandleChange.bind(this);\n    this.addresshandleChange = this.addresshandleChange.bind(this);\n    this.phoneHandleChange = this.phoneHandleChange.bind(this);\n  }\n\n  namehandleChange = event => {\n    this.setState({\n      name: event.target.value\n    });\n  };\n  priceHandleChange = price => {\n    this.setState({\n      price: price\n    });\n  };\n\n  typehandleChange = type => {\n    this.setState({\n      type: type\n    });\n  };\n  agehandleChange = age => {\n    this.setState({\n      age: age\n    });\n  };\n  addresshandleChange(event) {\n    this.setState({\n      address: event.target.value\n    });\n  }\n\n  phoneHandleChange(phone) {\n    this.setState({\n      phone: phone\n    });\n  }\n\n  isEditing = record => record.key === this.state.editingKey;\n\n  cancel = () => {\n    this.setState({ editingKey: \"\" });\n  };\n  edit(key) {\n    this.setState({ editingKey: key });\n  }\n\n  handleDelete = key => {\n    const dataSource = [...this.state.dataSource];\n    this.setState({ dataSource: dataSource.filter(item => item.key !== key) });\n  };\n  showDrawer = () => {\n    this.setState({\n      visible: true\n    });\n  };\n  onClose = () => {\n    this.setState({\n      visible: false\n    });\n  };\n\n  save(form, key) {\n    form.validateFields((error, row) => {\n      if (error) {\n        return;\n      }\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => key === item.key);\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, {\n          ...item,\n          ...row\n        });\n        this.setState({ dataSource: newData, editingKey: \"\" });\n      } else {\n        newData.push(row);\n        this.setState({ dataSource: newData, editingKey: \"\" });\n      }\n    });\n  }\n  components = {\n    header: {\n      cell: ResizeableTitle\n    },\n    body: {\n      cell: EditableCell\n    }\n  };\n  handleAdd = () => {\n    const {\n      key,\n      dataSource,\n      name,\n      price,\n      type,\n      age,\n      address,\n      phone\n    } = this.state;\n    const newData = {\n      key: key,\n      name: name,\n      price: price + \"$\",\n      type: type,\n      age: age,\n      address: address,\n      phone: phone\n    };\n    if (\n      name !== \"\" &&\n      price !== null &&\n      type !== \"\" &&\n      age !== null &&\n      address !== \"\"\n    ) {\n      this.setState({\n        dataSource: [...dataSource, newData],\n        key: key + 1\n      });\n    }\n  };\n\n  handleResize = index => (e, { size }) => {\n    this.setState(({ columns }) => {\n      const nextColumns = [...columns];\n      nextColumns[index] = {\n        ...nextColumns[index],\n        width: size.width\n      };\n      return { columns: nextColumns };\n    });\n  };\n\n  render() {\n    const columns = this.state.columns.map((col, index) => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onHeaderCell: column => ({\n          width: column.width,\n          onResize: this.handleResize(index)\n        }),\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === \"age\" ? \"number\" : \"text\",\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record)\n        })\n      };\n    });\n    const {\n      dataSource,\n      visible,\n      name,\n      price,\n      age,\n      address,\n      phone\n    } = this.state;\n    return (\n      <Fragment>\n        <Content style={{ margin: \"2em 16px\" }}>\n          <div style={{ background: \"#fff\", padding: 24, minHeight: 280 }}>\n            <div style={{ textAlign: \"right\" }}>\n              <Button\n                type=\"primary\"\n                onClick={this.showDrawer}\n                style={{ margin: \"2em\" }}\n              >\n                Add\n              </Button>\n            </div>\n            <Drawers\n              onClose={this.onClose}\n              visible={visible}\n              name={name}\n              price={price}\n              age={age}\n              address={address}\n              phone={phone}\n              namehandleChange={this.namehandleChange}\n              priceHandleChange={this.priceHandleChange}\n              typehandleChange={this.typehandleChange}\n              agehandleChange={this.agehandleChange}\n              addresshandleChange={this.addresshandleChange}\n              phoneHandleChange={this.phoneHandleChange}\n              handleAdd={this.handleAdd}\n            />\n            <EditableContext.Provider value={this.props.form}>\n              <Table\n                components={this.components}\n                columns={columns}\n                dataSource={dataSource}\n                bordered\n                rowClassName=\"editable-row\"\n                title={() => \"Personal Information\"}\n                footer={() => \"Footer\"}\n                pagination={false}\n                scroll={{ y: 500 }}\n              />\n            </EditableContext.Provider>\n          </div>\n        </Content>\n      </Fragment>\n    );\n  }\n}\n\nconst WrappedHorizontalLoginForm = Form.create()(Personal);\nexport default WrappedHorizontalLoginForm;\n"]},"metadata":{},"sourceType":"module"}