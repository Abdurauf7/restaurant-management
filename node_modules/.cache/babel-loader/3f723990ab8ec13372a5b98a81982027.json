{"ast":null,"code":"const column = [// phone_number,\n// work_position,\n// age,\n// salary,\n// email,\n// date\n{\n  title: \"First Name\",\n  dataIndex: \"first_name\",\n  filteredValue: [first_name],\n  // filters: [\n  //   {\n  //     text: \"Mr\",\n  //     value: \"Mr\"\n  //   },\n  //   {\n  //     text: \"Ms\",\n  //     value: \"Ms\"\n  //   }\n  // ],\n  onFilter: (value, record) => record.first_name.indexOf(value) === 0,\n  sorter: (a, b) => a.first_name.length - b.first_name.length,\n  sortDirections: [\"descend\", \"ascend\"]\n}, {\n  title: \"Last Name\",\n  dataIndex: \"last_name\",\n  filters: [{\n    text: \"Mery\",\n    value: \"Mery\"\n  }],\n  onFilter: (value, record) => record.last_name.indexOf(value) === 0,\n  sorter: (a, b) => a.last_name.length - b.last_name.length,\n  sortDirections: [\"descend\"]\n}, {\n  title: \"Gender\",\n  dataIndex: \"gender\",\n  filters: [{\n    text: \"Female\",\n    value: \"Female\"\n  }, {\n    text: \"Male\",\n    value: \"Male\"\n  }],\n  filterMultiple: false,\n  onFilter: (value, record) => record.gender.indexOf(value) === 0,\n  sorter: (a, b) => a.gender.length - b.gender.length,\n  sortDirections: [\"descend\"]\n}, {\n  title: \"Age\",\n  dataIndex: \"age\",\n  defaultSortOrder: \"descend\",\n  sorter: (a, b) => a.age - b.age\n}, {\n  title: \"Address\",\n  dataIndex: \"address\",\n  filters: [{\n    text: \"China\",\n    value: \"China\"\n  }, {\n    text: \"Russian\",\n    value: \"Russian\"\n  }],\n  filterMultiple: false,\n  onFilter: (value, record) => record.address.indexOf(value) === 0,\n  sorter: (a, b) => a.address.length - b.address.length,\n  sortDirections: [\"descend\", \"ascend\"]\n}, {\n  title: \"Phone\",\n  dataIndex: \"phone_number\",\n  defaultSortOrder: \"descend\",\n  sorter: (a, b) => a.phone_number.length - b.phone_number.length,\n  sortDirections: [\"descend\", \"ascend\"]\n}];\nexport { column };","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/Admin/components/PersonalComponent/components/column.jsx"],"names":["column","title","dataIndex","filteredValue","first_name","onFilter","value","record","indexOf","sorter","a","b","length","sortDirections","filters","text","last_name","filterMultiple","gender","defaultSortOrder","age","address","phone_number"],"mappings":"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","sourcesContent":["const column = [\n  // phone_number,\n  // work_position,\n  // age,\n  // salary,\n  // email,\n  // date\n  {\n    title: \"First Name\",\n    dataIndex: \"first_name\",\n    filteredValue: [first_name],\n    // filters: [\n    //   {\n    //     text: \"Mr\",\n    //     value: \"Mr\"\n    //   },\n    //   {\n    //     text: \"Ms\",\n    //     value: \"Ms\"\n    //   }\n    // ],\n    onFilter: (value, record) => record.first_name.indexOf(value) === 0,\n    sorter: (a, b) => a.first_name.length - b.first_name.length,\n    sortDirections: [\"descend\", \"ascend\"]\n  },\n  {\n    title: \"Last Name\",\n    dataIndex: \"last_name\",\n    filters: [\n      {\n        text: \"Mery\",\n        value: \"Mery\"\n      }\n    ],\n\n    onFilter: (value, record) => record.last_name.indexOf(value) === 0,\n    sorter: (a, b) => a.last_name.length - b.last_name.length,\n    sortDirections: [\"descend\"]\n  },\n  {\n    title: \"Gender\",\n    dataIndex: \"gender\",\n    filters: [\n      {\n        text: \"Female\",\n        value: \"Female\"\n      },\n      {\n        text: \"Male\",\n        value: \"Male\"\n      }\n    ],\n    filterMultiple: false,\n    onFilter: (value, record) => record.gender.indexOf(value) === 0,\n    sorter: (a, b) => a.gender.length - b.gender.length,\n    sortDirections: [\"descend\"]\n  },\n  {\n    title: \"Age\",\n    dataIndex: \"age\",\n    defaultSortOrder: \"descend\",\n    sorter: (a, b) => a.age - b.age\n  },\n  {\n    title: \"Address\",\n    dataIndex: \"address\",\n    filters: [\n      {\n        text: \"China\",\n        value: \"China\"\n      },\n      {\n        text: \"Russian\",\n        value: \"Russian\"\n      }\n    ],\n    filterMultiple: false,\n    onFilter: (value, record) => record.address.indexOf(value) === 0,\n    sorter: (a, b) => a.address.length - b.address.length,\n    sortDirections: [\"descend\", \"ascend\"]\n  },\n  {\n    title: \"Phone\",\n    dataIndex: \"phone_number\",\n    defaultSortOrder: \"descend\",\n    sorter: (a, b) => a.phone_number.length - b.phone_number.length,\n    sortDirections: [\"descend\", \"ascend\"]\n  }\n];\n\nexport { column };\n"]},"metadata":{},"sourceType":"module"}