{"ast":null,"code":"var _jsxFileName = \"/Users/abdurauf/Desktop/\\u6BD5\\u4E1A\\u8BBE\\u8BA1/orginal/restaurant-management-system/plov/src/components/Employee/components/Order/components/orderContent.jsx\";\n// React\nimport React, { useEffect, useState, Fragment } from \"react\"; // Third part\n\nimport { Layout, Divider, Card } from \"antd\";\nimport { Order, getOrder } from \"../../../../../services/orderServices\"; // Custom\n\nimport { HeaderTitle, CustomDrawerButton, openNotification } from \"../../../../custom/\";\nimport * as All from \"./\";\nconst {\n  Content\n} = Layout;\n\nconst OrderContent = () => {\n  // state\n  const [DrawerVisible, setDrawerVisible] = useState();\n  const [orderData, setOrderData] = useState([]);\n\n  const getData = async () => {\n    try {\n      await getOrder().then(res => res.data).then(data => setOrderData(data));\n    } catch (err) {\n      openNotification(\"error\", \"Can't get data\", \"Check connection\");\n    }\n  };\n\n  useState(() => {\n    getData();\n  }, []); // showDrawer\n\n  const showDrawer = () => {\n    setDrawerVisible(true);\n  };\n\n  const onClose = () => {\n    setDrawerVisible(false);\n  };\n\n  const handleAdd = async items => {\n    try {\n      await Order(items);\n    } catch (error) {\n      openNotification(\"error\", \"Cant order\", \"Check Connection\");\n    }\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Content, {\n    style: {\n      margin: \"2em 16px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      background: \"#fff\",\n      padding: 24,\n      minHeight: 280\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(HeaderTitle, {\n    title: \"Order Menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(CustomDrawerButton, {\n    title: \"Take order\",\n    showDrawer: showDrawer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(All.OrderDrawer, {\n    visible: DrawerVisible,\n    onClose: onClose,\n    handleAdd: handleAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), orderData.map(data => React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })))));\n};\n\nexport default OrderContent;","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/Employee/components/Order/components/orderContent.jsx"],"names":["React","useEffect","useState","Fragment","Layout","Divider","Card","Order","getOrder","HeaderTitle","CustomDrawerButton","openNotification","All","Content","OrderContent","DrawerVisible","setDrawerVisible","orderData","setOrderData","getData","then","res","data","err","showDrawer","onClose","handleAdd","items","error","margin","background","padding","minHeight","map"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD,C,CAEA;;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,IAA1B,QAAsC,MAAtC;AAEA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,uCAAhC,C,CAEA;;AACA,SACEC,WADF,EAEEC,kBAFF,EAGEC,gBAHF,QAIO,qBAJP;AAKA,OAAO,KAAKC,GAAZ,MAAqB,IAArB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAcT,MAApB;;AACA,MAAMU,YAAY,GAAG,MAAM;AACzB;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,EAAlD;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMiB,OAAO,GAAG,YAAY;AAC1B,QAAI;AACF,YAAMX,QAAQ,GACXY,IADG,CACEC,GAAG,IAAIA,GAAG,CAACC,IADb,EAEHF,IAFG,CAEEE,IAAI,IAAIJ,YAAY,CAACI,IAAD,CAFtB,CAAN;AAGD,KAJD,CAIE,OAAOC,GAAP,EAAY;AACZZ,MAAAA,gBAAgB,CAAC,OAAD,EAAU,gBAAV,EAA4B,kBAA5B,CAAhB;AACD;AACF,GARD;;AAUAT,EAAAA,QAAQ,CAAC,MAAM;AACbiB,IAAAA,OAAO;AACR,GAFO,EAEL,EAFK,CAAR,CAfyB,CAmBzB;;AACA,QAAMK,UAAU,GAAG,MAAM;AACvBR,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAFD;;AAGA,QAAMS,OAAO,GAAG,MAAM;AACpBT,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,GAFD;;AAGA,QAAMU,SAAS,GAAG,MAAMC,KAAN,IAAe;AAC/B,QAAI;AACF,YAAMpB,KAAK,CAACoB,KAAD,CAAX;AACD,KAFD,CAEE,OAAOC,KAAP,EAAc;AACdjB,MAAAA,gBAAgB,CAAC,OAAD,EAAU,YAAV,EAAwB,kBAAxB,CAAhB;AACD;AACF,GAND;;AAQA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAAEkB,MAAAA,MAAM,EAAE;AAAV,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,OAAO,EAAE,EAA/B;AAAmCC,MAAAA,SAAS,EAAE;AAA9C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,kBAAD;AAAoB,IAAA,KAAK,EAAE,YAA3B;AAAyC,IAAA,UAAU,EAAER,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,GAAD,CAAK,WAAL;AACE,IAAA,OAAO,EAAET,aADX;AAEE,IAAA,OAAO,EAAEU,OAFX;AAGE,IAAA,SAAS,EAAEC,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EASGT,SAAS,CAACgB,GAAV,CAAcX,IAAI,IACjB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CATH,CADF,CADF,CADF;AAmBD,CArDD;;AAuDA,eAAeR,YAAf","sourcesContent":["// React\nimport React, { useEffect, useState, Fragment } from \"react\";\n\n// Third part\nimport { Layout, Divider, Card } from \"antd\";\n\nimport { Order, getOrder } from \"../../../../../services/orderServices\";\n\n// Custom\nimport {\n  HeaderTitle,\n  CustomDrawerButton,\n  openNotification\n} from \"../../../../custom/\";\nimport * as All from \"./\";\n\nconst { Content } = Layout;\nconst OrderContent = () => {\n  // state\n  const [DrawerVisible, setDrawerVisible] = useState();\n  const [orderData, setOrderData] = useState([]);\n\n  const getData = async () => {\n    try {\n      await getOrder()\n        .then(res => res.data)\n        .then(data => setOrderData(data));\n    } catch (err) {\n      openNotification(\"error\", \"Can't get data\", \"Check connection\");\n    }\n  };\n\n  useState(() => {\n    getData();\n  }, []);\n\n  // showDrawer\n  const showDrawer = () => {\n    setDrawerVisible(true);\n  };\n  const onClose = () => {\n    setDrawerVisible(false);\n  };\n  const handleAdd = async items => {\n    try {\n      await Order(items);\n    } catch (error) {\n      openNotification(\"error\", \"Cant order\", \"Check Connection\");\n    }\n  };\n\n  return (\n    <Fragment>\n      <Content style={{ margin: \"2em 16px\" }}>\n        <div style={{ background: \"#fff\", padding: 24, minHeight: 280 }}>\n          <HeaderTitle title={\"Order Menu\"} />\n          <CustomDrawerButton title={\"Take order\"} showDrawer={showDrawer} />\n          <Divider />\n          <All.OrderDrawer\n            visible={DrawerVisible}\n            onClose={onClose}\n            handleAdd={handleAdd}\n          />\n          {orderData.map(data => (\n            <Card></Card>\n          ))}\n        </div>\n      </Content>\n    </Fragment>\n  );\n};\n\nexport default OrderContent;\n"]},"metadata":{},"sourceType":"module"}