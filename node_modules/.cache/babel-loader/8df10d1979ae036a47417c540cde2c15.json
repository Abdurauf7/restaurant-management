{"ast":null,"code":"var _jsxFileName = \"/Users/abdurauf/Desktop/\\u6BD5\\u4E1A\\u8BBE\\u8BA1/orginal/restaurant-management-system/plov/src/components/Admin/components/dish.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Layout, Table, Button, InputNumber, Input, Form, Row, Col } from \"antd\";\nimport { Resizable } from \"react-resizable\";\nimport \"../../../assets/css/AdminForm.css\";\nimport WrappedDishForm from \"../../common/dishDrawer\";\nimport Title from \"../../common/title\";\nimport { getDishes } from \"../../../services/getDishes\";\nimport { addDishes } from \"../../../services/addDishes\"; // for resizing\n\nconst ResizeableTitle = props => {\n  const {\n    onResize,\n    width,\n    ...restProps\n  } = props;\n\n  if (!width) {\n    return React.createElement(\"th\", Object.assign({}, restProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(Resizable, {\n    width: width,\n    height: 0,\n    onResize: onResize,\n    draggableOpts: {\n      enableUserSelectHack: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"th\", Object.assign({}, restProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })));\n}; // for editable\n\n\nconst EditableContext = React.createContext();\n\nclass EditableCell extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getInput = () => {\n      if (this.props.inputType === \"number\") {\n        return React.createElement(InputNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      });\n    };\n\n    this.renderCell = ({\n      getFieldDecorator\n    }) => {\n      const {\n        editing,\n        dataIndex,\n        title,\n        inputType,\n        record,\n        index,\n        children,\n        ...restProps\n      } = this.props;\n      return React.createElement(\"td\", Object.assign({}, restProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), editing ? React.createElement(Form.Item, {\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, getFieldDecorator(dataIndex, {\n        rules: [{\n          required: true,\n          message: `Please Input ${title}!`\n        }],\n        initialValue: record[dataIndex]\n      })(this.getInput())) : children);\n    };\n  }\n\n  render() {\n    return React.createElement(EditableContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.renderCell);\n  }\n\n}\n\nconst {\n  Content\n} = Layout; // Here\n\nclass Dish extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      columns: [{\n        title: \"Name\",\n        dataIndex: \"name\",\n        editable: true\n      }, {\n        title: \"Price\",\n        dataIndex: \"price\",\n        editable: true\n      }, {\n        title: \"Type\",\n        dataIndex: \"type\",\n        editable: true\n      }, {\n        title: \"Action\",\n        dataIndex: \"operation\",\n        render: (text, record) => {\n          const {\n            editingKey\n          } = this.state;\n          const editable = this.isEditing(record);\n          return editable ? React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }, React.createElement(EditableContext.Consumer, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, form => React.createElement(Row, {\n            gutter: 22,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }, React.createElement(Col, {\n            span: 5,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, React.createElement(Button, {\n            size: \"small\",\n            onClick: () => this.save(form, record.key),\n            style: {\n              width: \"60px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }, \"Save\")), React.createElement(Col, {\n            span: 5,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            },\n            __self: this\n          }, React.createElement(Button, {\n            size: \"small\",\n            style: {\n              width: \"70px\"\n            },\n            onClick: () => this.cancel(record.key),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }, \"Cancel\"))))) : React.createElement(Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"danger\",\n            size: \"small\",\n            style: {\n              width: \"60px\",\n              margin: \" 0 1em\"\n            },\n            onClick: () => this.handleDelete(record.key),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154\n            },\n            __self: this\n          }, \"Delete\"), React.createElement(Button, {\n            type: \"primary\",\n            size: \"small\",\n            style: {\n              width: \"60px\"\n            },\n            disabled: editingKey !== \"\",\n            onClick: () => this.edit(record.key),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162\n            },\n            __self: this\n          }, \"Edit\"));\n        }\n      }],\n      visible: false,\n      dataSource: [],\n      key: 0,\n      editingKey: \"\",\n      title: \"Dish Menu\"\n    };\n\n    this.isEditing = record => record.key === this.state.editingKey;\n\n    this.cancel = () => {\n      this.setState({\n        editingKey: \"\"\n      });\n    };\n\n    this.handleDelete = key => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({\n        dataSource: dataSource.filter(item => item.key !== key)\n      });\n    };\n\n    this.components = {\n      header: {\n        cell: ResizeableTitle\n      },\n      body: {\n        cell: EditableCell\n      }\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      await this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          const {\n            data: dataSource\n          } = addDishes(values);\n          const data = [dataSource, ...this.state.dataSource];\n          this.setState({\n            dataSource: data\n          });\n        }\n      });\n    };\n\n    this.showDrawer = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.onClose = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleResize = index => (e, {\n      size\n    }) => {\n      this.setState(({\n        columns\n      }) => {\n        const nextColumns = [...columns];\n        nextColumns[index] = { ...nextColumns[index],\n          width: size.width\n        };\n        return {\n          columns: nextColumns\n        };\n      });\n    };\n  }\n\n  async populateDishTable() {\n    const {\n      data: dataSource\n    } = await getDishes();\n    this.setState({\n      dataSource\n    });\n  }\n\n  async componentDidMount() {\n    await this.populateDishTable();\n  }\n\n  edit(key) {\n    this.setState({\n      editingKey: key\n    });\n  }\n\n  save(form, key) {\n    form.validateFields((error, row) => {\n      if (error) {\n        return;\n      }\n\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => key === item.key);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item,\n          ...row\n        });\n        this.setState({\n          dataSource: newData,\n          editingKey: \"\"\n        });\n      } else {\n        newData.push(row);\n        this.setState({\n          dataSource: newData,\n          editingKey: \"\"\n        });\n      }\n    });\n  }\n\n  render() {\n    const columns = this.state.columns.map((col, index) => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return { ...col,\n        onHeaderCell: column => ({\n          width: column.width,\n          onResize: this.handleResize(index)\n        }),\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === \"age\" ? \"number\" : \"text\",\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record)\n        })\n      };\n    });\n    const {\n      dataSource,\n      visible,\n      title\n    } = this.state;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(Content, {\n      style: {\n        margin: \"2em 16px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        background: \"#fff\",\n        padding: 24,\n        minHeight: 280\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(Title, {\n      title: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showDrawer,\n      style: {\n        margin: \"2em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"Add\")), React.createElement(WrappedDishForm, {\n      onClose: this.onClose,\n      visible: visible,\n      form: this.props.form,\n      handleSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }), React.createElement(EditableContext.Provider, {\n      value: this.props.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(Table, {\n      components: this.components,\n      columns: columns,\n      dataSource: dataSource,\n      bordered: true,\n      rowClassName: \"editable-row\",\n      title: () => \"Dish Menu\",\n      footer: () => \"Footer\",\n      pagination: false,\n      scroll: {\n        y: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst WrappedHorizontalLoginForm = Form.create()(Dish);\nexport default WrappedHorizontalLoginForm;","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/Admin/components/dish.js"],"names":["React","Component","Fragment","Layout","Table","Button","InputNumber","Input","Form","Row","Col","Resizable","WrappedDishForm","Title","getDishes","addDishes","ResizeableTitle","props","onResize","width","restProps","enableUserSelectHack","EditableContext","createContext","EditableCell","getInput","inputType","renderCell","getFieldDecorator","editing","dataIndex","title","record","index","children","margin","rules","required","message","initialValue","render","Content","Dish","state","columns","editable","text","editingKey","isEditing","form","save","key","cancel","handleDelete","edit","visible","dataSource","setState","filter","item","components","header","cell","body","handleSubmit","e","preventDefault","validateFieldsAndScroll","err","values","data","showDrawer","onClose","handleResize","size","nextColumns","populateDishTable","componentDidMount","validateFields","error","row","newData","findIndex","splice","push","map","col","onHeaderCell","column","onCell","background","padding","minHeight","textAlign","y","WrappedHorizontalLoginForm","create"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport {\n  Layout,\n  Table,\n  Button,\n  InputNumber,\n  Input,\n  Form,\n  Row,\n  Col\n} from \"antd\";\nimport { Resizable } from \"react-resizable\";\nimport \"../../../assets/css/AdminForm.css\";\nimport WrappedDishForm from \"../../common/dishDrawer\";\nimport Title from \"../../common/title\";\nimport { getDishes } from \"../../../services/getDishes\";\nimport { addDishes } from \"../../../services/addDishes\";\n\n// for resizing\nconst ResizeableTitle = props => {\n  const { onResize, width, ...restProps } = props;\n\n  if (!width) {\n    return <th {...restProps} />;\n  }\n\n  return (\n    <Resizable\n      width={width}\n      height={0}\n      onResize={onResize}\n      draggableOpts={{ enableUserSelectHack: false }}\n    >\n      <th {...restProps} />\n    </Resizable>\n  );\n};\n\n// for editable\nconst EditableContext = React.createContext();\n\nclass EditableCell extends Component {\n  getInput = () => {\n    if (this.props.inputType === \"number\") {\n      return <InputNumber />;\n    }\n    return <Input />;\n  };\n\n  renderCell = ({ getFieldDecorator }) => {\n    const {\n      editing,\n      dataIndex,\n      title,\n      inputType,\n      record,\n      index,\n      children,\n      ...restProps\n    } = this.props;\n    return (\n      <td {...restProps}>\n        {editing ? (\n          <Form.Item style={{ margin: 0 }}>\n            {getFieldDecorator(dataIndex, {\n              rules: [\n                {\n                  required: true,\n                  message: `Please Input ${title}!`\n                }\n              ],\n              initialValue: record[dataIndex]\n            })(this.getInput())}\n          </Form.Item>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  };\n\n  render() {\n    return (\n      <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\n    );\n  }\n}\n\nconst { Content } = Layout;\n\n// Here\nclass Dish extends Component {\n  async populateDishTable() {\n    const { data: dataSource } = await getDishes();\n    this.setState({ dataSource });\n  }\n\n  async componentDidMount() {\n    await this.populateDishTable();\n  }\n\n  state = {\n    columns: [\n      {\n        title: \"Name\",\n        dataIndex: \"name\",\n        editable: true\n      },\n      {\n        title: \"Price\",\n        dataIndex: \"price\",\n        editable: true\n      },\n      {\n        title: \"Type\",\n        dataIndex: \"type\",\n        editable: true\n      },\n      {\n        title: \"Action\",\n        dataIndex: \"operation\",\n        render: (text, record) => {\n          const { editingKey } = this.state;\n          const editable = this.isEditing(record);\n          return editable ? (\n            <span>\n              <EditableContext.Consumer>\n                {form => (\n                  <Row gutter={22}>\n                    <Col span={5}>\n                      <Button\n                        size=\"small\"\n                        onClick={() => this.save(form, record.key)}\n                        style={{ width: \"60px\" }}\n                      >\n                        Save\n                      </Button>\n                    </Col>\n                    <Col span={5}>\n                      <Button\n                        size=\"small\"\n                        style={{ width: \"70px\" }}\n                        onClick={() => this.cancel(record.key)}\n                      >\n                        Cancel\n                      </Button>\n                    </Col>\n                  </Row>\n                )}\n              </EditableContext.Consumer>\n            </span>\n          ) : (\n            <Fragment>\n              <Button\n                type=\"danger\"\n                size=\"small\"\n                style={{ width: \"60px\", margin: \" 0 1em\" }}\n                onClick={() => this.handleDelete(record.key)}\n              >\n                Delete\n              </Button>\n              <Button\n                type=\"primary\"\n                size=\"small\"\n                style={{ width: \"60px\" }}\n                disabled={editingKey !== \"\"}\n                onClick={() => this.edit(record.key)}\n              >\n                Edit\n              </Button>\n            </Fragment>\n          );\n        }\n      }\n    ],\n\n    visible: false,\n    dataSource: [],\n    key: 0,\n    editingKey: \"\",\n\n    title: \"Dish Menu\"\n  };\n\n  isEditing = record => record.key === this.state.editingKey;\n\n  cancel = () => {\n    this.setState({ editingKey: \"\" });\n  };\n  edit(key) {\n    this.setState({ editingKey: key });\n  }\n\n  handleDelete = key => {\n    const dataSource = [...this.state.dataSource];\n    this.setState({ dataSource: dataSource.filter(item => item.key !== key) });\n  };\n\n  save(form, key) {\n    form.validateFields((error, row) => {\n      if (error) {\n        return;\n      }\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => key === item.key);\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, {\n          ...item,\n          ...row\n        });\n        this.setState({ dataSource: newData, editingKey: \"\" });\n      } else {\n        newData.push(row);\n        this.setState({ dataSource: newData, editingKey: \"\" });\n      }\n    });\n  }\n  components = {\n    header: {\n      cell: ResizeableTitle\n    },\n    body: {\n      cell: EditableCell\n    }\n  };\n  // form item\n\n  // handleAdd = async () => {\n  //   const obj = { title: \"a\", body: \"b\" };\n  //   const { data: post } = await http.post(config.apiEndpoint, obj);\n\n  //   const posts = [post, ...this.state.posts];\n  //   this.setState({ posts });\n  // };\n  handleSubmit = async e => {\n    e.preventDefault();\n    await this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        const { data: dataSource } = addDishes(values);\n        const data = [dataSource, ...this.state.dataSource];\n        this.setState({ dataSource: data });\n      }\n    });\n  };\n\n  showDrawer = () => {\n    this.setState({\n      visible: true\n    });\n  };\n  onClose = () => {\n    this.setState({\n      visible: false\n    });\n  };\n  handleResize = index => (e, { size }) => {\n    this.setState(({ columns }) => {\n      const nextColumns = [...columns];\n      nextColumns[index] = {\n        ...nextColumns[index],\n        width: size.width\n      };\n      return { columns: nextColumns };\n    });\n  };\n\n  render() {\n    const columns = this.state.columns.map((col, index) => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onHeaderCell: column => ({\n          width: column.width,\n          onResize: this.handleResize(index)\n        }),\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === \"age\" ? \"number\" : \"text\",\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record)\n        })\n      };\n    });\n    const { dataSource, visible, title } = this.state;\n    return (\n      <Fragment>\n        <Content style={{ margin: \"2em 16px\" }}>\n          <div style={{ background: \"#fff\", padding: 24, minHeight: 280 }}>\n            <Title title={title} />\n            <div style={{ textAlign: \"right\" }}>\n              <Button\n                type=\"primary\"\n                onClick={this.showDrawer}\n                style={{ margin: \"2em\" }}\n              >\n                Add\n              </Button>\n            </div>\n            <WrappedDishForm\n              onClose={this.onClose}\n              visible={visible}\n              form={this.props.form}\n              handleSubmit={this.handleSubmit}\n            />\n            <EditableContext.Provider value={this.props.form}>\n              <Table\n                components={this.components}\n                columns={columns}\n                dataSource={dataSource}\n                bordered\n                rowClassName=\"editable-row\"\n                title={() => \"Dish Menu\"}\n                footer={() => \"Footer\"}\n                pagination={false}\n                scroll={{ y: 500 }}\n              />\n            </EditableContext.Provider>\n          </div>\n        </Content>\n      </Fragment>\n    );\n  }\n}\n\nconst WrappedHorizontalLoginForm = Form.create()(Dish);\nexport default WrappedHorizontalLoginForm;\n"]},"metadata":{},"sourceType":"module"}