{"ast":null,"code":"var _jsxFileName = \"/Users/abdurauf/Desktop/\\u6BD5\\u4E1A\\u8BBE\\u8BA1/orginal/restaurant-management-system/plov/src/components/Employee/components/Information/components/informationList.jsx\";\nimport React, { Fragment } from \"react\";\nimport { Card, Row, Col, Divider, Typography, Statistic } from \"antd\";\n\nconst InformationList = ({\n  data\n}) => {\n  const deadline = Date.now() + 1000 * 60 * 60 * 24 * 2 + 1000 * 30;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, data.map(info => React.createElement(Col, {\n    key: info.id,\n    span: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Card, {\n    key: info.id,\n    className: \"m-2 border border-warning\",\n    title: React.createElement(\"p\", {\n      className: \"text-center bg-light border border-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, `Table:${info.table}`),\n    cover: React.createElement(\"h1\", {\n      className: \"text-secondary text-center mt-2 font-weight-light text-uppercase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, info.customer),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Card.Meta, {\n    title: React.createElement(Typography.Paragraph, {\n      ellipsis: {\n        rows: 1,\n        expandable: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, `Orders: ${info.ordered_items}`),\n    description: React.createElement(Statistic.Countdown, {\n      title: \"Million Seconds\",\n      value: deadline,\n      format: \"HH:mm:ss\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }) // description={`Time: ${info.time}`}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }))))));\n};\n\nexport default InformationList;","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/Employee/components/Information/components/informationList.jsx"],"names":["React","Fragment","Card","Row","Col","Divider","Typography","Statistic","InformationList","data","deadline","Date","now","map","info","id","table","customer","rows","expandable","ordered_items"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,OAAzB,EAAkCC,UAAlC,EAA8CC,SAA9C,QAA+D,MAA/D;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACpC,QAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAL,KAAa,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAjB,GAAsB,CAAnC,GAAuC,OAAO,EAA/D;AACA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IAAI,CAACI,GAAL,CAASC,IAAI,IACZ,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAmB,IAAA,IAAI,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,GAAG,EAAED,IAAI,CAACC,EADZ;AAEE,IAAA,SAAS,EAAC,2BAFZ;AAGE,IAAA,KAAK,EACH;AAAG,MAAA,SAAS,EAAC,yCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyD,SAAQD,IAAI,CAACE,KAAM,EAA5E,CAJJ;AAME,IAAA,KAAK,EACH;AAAI,MAAA,SAAS,EAAC,kEAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,IAAI,CAACG,QADR,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAaE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EACH,oBAAC,UAAD,CAAY,SAAZ;AACE,MAAA,QAAQ,EAAE;AAAEC,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,UAAU,EAAE;AAAvB,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI,WAAUL,IAAI,CAACM,aAAc,EAHjC,CAFJ;AAQE,IAAA,WAAW,EACT,oBAAC,SAAD,CAAW,SAAX;AACE,MAAA,KAAK,EAAC,iBADR;AAEE,MAAA,KAAK,EAAEV,QAFT;AAGE,MAAA,MAAM,EAAC,UAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CAeE;AAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,CADD,CADH,CADF,CADF;AAyCD,CA3CD;;AA6CA,eAAeF,eAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Card, Row, Col, Divider, Typography, Statistic } from \"antd\";\n\nconst InformationList = ({ data }) => {\n  const deadline = Date.now() + 1000 * 60 * 60 * 24 * 2 + 1000 * 30;\n  return (\n    <Fragment>\n      <Row>\n        {data.map(info => (\n          <Col key={info.id} span={6}>\n            <Card\n              key={info.id}\n              className=\"m-2 border border-warning\"\n              title={\n                <p className=\"text-center bg-light border border-info\">{`Table:${info.table}`}</p>\n              }\n              cover={\n                <h1 className=\"text-secondary text-center mt-2 font-weight-light text-uppercase\">\n                  {info.customer}\n                </h1>\n              }\n            >\n              <Divider />\n              <Card.Meta\n                title={\n                  <Typography.Paragraph\n                    ellipsis={{ rows: 1, expandable: true }}\n                  >\n                    {`Orders: ${info.ordered_items}`}\n                  </Typography.Paragraph>\n                }\n                description={\n                  <Statistic.Countdown\n                    title=\"Million Seconds\"\n                    value={deadline}\n                    format=\"HH:mm:ss\"\n                  />\n                }\n                // description={`Time: ${info.time}`}\n              />\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </Fragment>\n  );\n};\n\nexport default InformationList;\n"]},"metadata":{},"sourceType":"module"}