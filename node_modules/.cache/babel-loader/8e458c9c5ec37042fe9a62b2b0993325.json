{"ast":null,"code":"import * as React from 'react';\nimport Cell from './Cell';\n\nfunction renderCells(items, _ref, _ref2) {\n  var colon = _ref.colon,\n      prefixCls = _ref.prefixCls,\n      bordered = _ref.bordered;\n  var component = _ref2.component,\n      type = _ref2.type,\n      showLabel = _ref2.showLabel,\n      showContent = _ref2.showContent;\n  return items.map(function (_ref3, index) {\n    var _ref3$props = _ref3.props,\n        label = _ref3$props.label,\n        children = _ref3$props.children,\n        _ref3$props$prefixCls = _ref3$props.prefixCls,\n        itemPrefixCls = _ref3$props$prefixCls === void 0 ? prefixCls : _ref3$props$prefixCls,\n        className = _ref3$props.className,\n        style = _ref3$props.style,\n        _ref3$props$span = _ref3$props.span,\n        span = _ref3$props$span === void 0 ? 1 : _ref3$props$span,\n        key = _ref3.key;\n\n    if (typeof component === 'string') {\n      return (\n        /*#__PURE__*/\n        React.createElement(Cell, {\n          key: \"\".concat(type, \"-\").concat(key || index),\n          className: className,\n          style: style,\n          span: span,\n          colon: colon,\n          component: component,\n          itemPrefixCls: itemPrefixCls,\n          bordered: bordered,\n          label: showLabel ? label : null,\n          content: showContent ? children : null\n        })\n      );\n    }\n\n    return [\n    /*#__PURE__*/\n    React.createElement(Cell, {\n      key: \"label-\".concat(key || index),\n      className: className,\n      style: style,\n      span: 1,\n      colon: colon,\n      component: component[0],\n      itemPrefixCls: itemPrefixCls,\n      bordered: bordered,\n      label: label\n    }),\n    /*#__PURE__*/\n    React.createElement(Cell, {\n      key: \"content-\".concat(key || index),\n      className: className,\n      style: style,\n      span: span * 2 - 1,\n      component: component[1],\n      itemPrefixCls: itemPrefixCls,\n      bordered: bordered,\n      content: children\n    })];\n  });\n}\n\nvar Row = function Row(props) {\n  var prefixCls = props.prefixCls,\n      vertical = props.vertical,\n      row = props.row,\n      index = props.index,\n      bordered = props.bordered;\n\n  if (vertical) {\n    return (\n      /*#__PURE__*/\n      React.createElement(React.Fragment, null,\n      /*#__PURE__*/\n      React.createElement(\"tr\", {\n        key: \"label-\".concat(index),\n        className: \"\".concat(prefixCls, \"-row\")\n      }, renderCells(row, props, {\n        component: 'th',\n        type: 'label',\n        showLabel: true\n      })),\n      /*#__PURE__*/\n      React.createElement(\"tr\", {\n        key: \"content-\".concat(index),\n        className: \"\".concat(prefixCls, \"-row\")\n      }, renderCells(row, props, {\n        component: 'td',\n        type: 'content',\n        showContent: true\n      })))\n    );\n  }\n\n  return (\n    /*#__PURE__*/\n    React.createElement(\"tr\", {\n      key: index,\n      className: \"\".concat(prefixCls, \"-row\")\n    }, renderCells(row, props, {\n      component: bordered ? ['th', 'td'] : 'td',\n      type: 'item',\n      showLabel: true,\n      showContent: true\n    }))\n  );\n};\n\nexport default Row;","map":{"version":3,"sources":["/Users/abdurauf/Desktop/diploma/restaurant-management-system/plov/node_modules/antd/es/descriptions/Row.js"],"names":["React","Cell","renderCells","items","_ref","_ref2","colon","prefixCls","bordered","component","type","showLabel","showContent","map","_ref3","index","_ref3$props","props","label","children","_ref3$props$prefixCls","itemPrefixCls","className","style","_ref3$props$span","span","key","createElement","concat","content","Row","vertical","row","Fragment"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,IAA5B,EAAkCC,KAAlC,EAAyC;AACvC,MAAIC,KAAK,GAAGF,IAAI,CAACE,KAAjB;AAAA,MACIC,SAAS,GAAGH,IAAI,CAACG,SADrB;AAAA,MAEIC,QAAQ,GAAGJ,IAAI,CAACI,QAFpB;AAGA,MAAIC,SAAS,GAAGJ,KAAK,CAACI,SAAtB;AAAA,MACIC,IAAI,GAAGL,KAAK,CAACK,IADjB;AAAA,MAEIC,SAAS,GAAGN,KAAK,CAACM,SAFtB;AAAA,MAGIC,WAAW,GAAGP,KAAK,CAACO,WAHxB;AAIA,SAAOT,KAAK,CAACU,GAAN,CAAU,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AACvC,QAAIC,WAAW,GAAGF,KAAK,CAACG,KAAxB;AAAA,QACIC,KAAK,GAAGF,WAAW,CAACE,KADxB;AAAA,QAEIC,QAAQ,GAAGH,WAAW,CAACG,QAF3B;AAAA,QAGIC,qBAAqB,GAAGJ,WAAW,CAACT,SAHxC;AAAA,QAIIc,aAAa,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmCb,SAAnC,GAA+Ca,qBAJnE;AAAA,QAKIE,SAAS,GAAGN,WAAW,CAACM,SAL5B;AAAA,QAMIC,KAAK,GAAGP,WAAW,CAACO,KANxB;AAAA,QAOIC,gBAAgB,GAAGR,WAAW,CAACS,IAPnC;AAAA,QAQIA,IAAI,GAAGD,gBAAgB,KAAK,KAAK,CAA1B,GAA8B,CAA9B,GAAkCA,gBAR7C;AAAA,QASIE,GAAG,GAAGZ,KAAK,CAACY,GAThB;;AAWA,QAAI,OAAOjB,SAAP,KAAqB,QAAzB,EAAmC;AACjC;AAAO;AAAaT,QAAAA,KAAK,CAAC2B,aAAN,CAAoB1B,IAApB,EAA0B;AAC5CyB,UAAAA,GAAG,EAAE,GAAGE,MAAH,CAAUlB,IAAV,EAAgB,GAAhB,EAAqBkB,MAArB,CAA4BF,GAAG,IAAIX,KAAnC,CADuC;AAE5CO,UAAAA,SAAS,EAAEA,SAFiC;AAG5CC,UAAAA,KAAK,EAAEA,KAHqC;AAI5CE,UAAAA,IAAI,EAAEA,IAJsC;AAK5CnB,UAAAA,KAAK,EAAEA,KALqC;AAM5CG,UAAAA,SAAS,EAAEA,SANiC;AAO5CY,UAAAA,aAAa,EAAEA,aAP6B;AAQ5Cb,UAAAA,QAAQ,EAAEA,QARkC;AAS5CU,UAAAA,KAAK,EAAEP,SAAS,GAAGO,KAAH,GAAW,IATiB;AAU5CW,UAAAA,OAAO,EAAEjB,WAAW,GAAGO,QAAH,GAAc;AAVU,SAA1B;AAApB;AAYD;;AAED,WAAO;AAAC;AAAanB,IAAAA,KAAK,CAAC2B,aAAN,CAAoB1B,IAApB,EAA0B;AAC7CyB,MAAAA,GAAG,EAAE,SAASE,MAAT,CAAgBF,GAAG,IAAIX,KAAvB,CADwC;AAE7CO,MAAAA,SAAS,EAAEA,SAFkC;AAG7CC,MAAAA,KAAK,EAAEA,KAHsC;AAI7CE,MAAAA,IAAI,EAAE,CAJuC;AAK7CnB,MAAAA,KAAK,EAAEA,KALsC;AAM7CG,MAAAA,SAAS,EAAEA,SAAS,CAAC,CAAD,CANyB;AAO7CY,MAAAA,aAAa,EAAEA,aAP8B;AAQ7Cb,MAAAA,QAAQ,EAAEA,QARmC;AAS7CU,MAAAA,KAAK,EAAEA;AATsC,KAA1B,CAAd;AAUH;AAAalB,IAAAA,KAAK,CAAC2B,aAAN,CAAoB1B,IAApB,EAA0B;AACzCyB,MAAAA,GAAG,EAAE,WAAWE,MAAX,CAAkBF,GAAG,IAAIX,KAAzB,CADoC;AAEzCO,MAAAA,SAAS,EAAEA,SAF8B;AAGzCC,MAAAA,KAAK,EAAEA,KAHkC;AAIzCE,MAAAA,IAAI,EAAEA,IAAI,GAAG,CAAP,GAAW,CAJwB;AAKzChB,MAAAA,SAAS,EAAEA,SAAS,CAAC,CAAD,CALqB;AAMzCY,MAAAA,aAAa,EAAEA,aAN0B;AAOzCb,MAAAA,QAAQ,EAAEA,QAP+B;AAQzCqB,MAAAA,OAAO,EAAEV;AARgC,KAA1B,CAVV,CAAP;AAoBD,GA/CM,CAAP;AAgDD;;AAED,IAAIW,GAAG,GAAG,SAASA,GAAT,CAAab,KAAb,EAAoB;AAC5B,MAAIV,SAAS,GAAGU,KAAK,CAACV,SAAtB;AAAA,MACIwB,QAAQ,GAAGd,KAAK,CAACc,QADrB;AAAA,MAEIC,GAAG,GAAGf,KAAK,CAACe,GAFhB;AAAA,MAGIjB,KAAK,GAAGE,KAAK,CAACF,KAHlB;AAAA,MAIIP,QAAQ,GAAGS,KAAK,CAACT,QAJrB;;AAMA,MAAIuB,QAAJ,EAAc;AACZ;AAAO;AAAa/B,MAAAA,KAAK,CAAC2B,aAAN,CAAoB3B,KAAK,CAACiC,QAA1B,EAAoC,IAApC;AAA0C;AAAajC,MAAAA,KAAK,CAAC2B,aAAN,CAAoB,IAApB,EAA0B;AACnGD,QAAAA,GAAG,EAAE,SAASE,MAAT,CAAgBb,KAAhB,CAD8F;AAEnGO,QAAAA,SAAS,EAAE,GAAGM,MAAH,CAAUrB,SAAV,EAAqB,MAArB;AAFwF,OAA1B,EAGxEL,WAAW,CAAC8B,GAAD,EAAMf,KAAN,EAAa;AACzBR,QAAAA,SAAS,EAAE,IADc;AAEzBC,QAAAA,IAAI,EAAE,OAFmB;AAGzBC,QAAAA,SAAS,EAAE;AAHc,OAAb,CAH6D,CAAvD;AAOf;AAAaX,MAAAA,KAAK,CAAC2B,aAAN,CAAoB,IAApB,EAA0B;AAC1CD,QAAAA,GAAG,EAAE,WAAWE,MAAX,CAAkBb,KAAlB,CADqC;AAE1CO,QAAAA,SAAS,EAAE,GAAGM,MAAH,CAAUrB,SAAV,EAAqB,MAArB;AAF+B,OAA1B,EAGfL,WAAW,CAAC8B,GAAD,EAAMf,KAAN,EAAa;AACzBR,QAAAA,SAAS,EAAE,IADc;AAEzBC,QAAAA,IAAI,EAAE,SAFmB;AAGzBE,QAAAA,WAAW,EAAE;AAHY,OAAb,CAHI,CAPE;AAApB;AAeD;;AAED;AAAO;AAAaZ,IAAAA,KAAK,CAAC2B,aAAN,CAAoB,IAApB,EAA0B;AAC5CD,MAAAA,GAAG,EAAEX,KADuC;AAE5CO,MAAAA,SAAS,EAAE,GAAGM,MAAH,CAAUrB,SAAV,EAAqB,MAArB;AAFiC,KAA1B,EAGjBL,WAAW,CAAC8B,GAAD,EAAMf,KAAN,EAAa;AACzBR,MAAAA,SAAS,EAAED,QAAQ,GAAG,CAAC,IAAD,EAAO,IAAP,CAAH,GAAkB,IADZ;AAEzBE,MAAAA,IAAI,EAAE,MAFmB;AAGzBC,MAAAA,SAAS,EAAE,IAHc;AAIzBC,MAAAA,WAAW,EAAE;AAJY,KAAb,CAHM;AAApB;AASD,CAlCD;;AAoCA,eAAekB,GAAf","sourcesContent":["import * as React from 'react';\nimport Cell from './Cell';\n\nfunction renderCells(items, _ref, _ref2) {\n  var colon = _ref.colon,\n      prefixCls = _ref.prefixCls,\n      bordered = _ref.bordered;\n  var component = _ref2.component,\n      type = _ref2.type,\n      showLabel = _ref2.showLabel,\n      showContent = _ref2.showContent;\n  return items.map(function (_ref3, index) {\n    var _ref3$props = _ref3.props,\n        label = _ref3$props.label,\n        children = _ref3$props.children,\n        _ref3$props$prefixCls = _ref3$props.prefixCls,\n        itemPrefixCls = _ref3$props$prefixCls === void 0 ? prefixCls : _ref3$props$prefixCls,\n        className = _ref3$props.className,\n        style = _ref3$props.style,\n        _ref3$props$span = _ref3$props.span,\n        span = _ref3$props$span === void 0 ? 1 : _ref3$props$span,\n        key = _ref3.key;\n\n    if (typeof component === 'string') {\n      return /*#__PURE__*/React.createElement(Cell, {\n        key: \"\".concat(type, \"-\").concat(key || index),\n        className: className,\n        style: style,\n        span: span,\n        colon: colon,\n        component: component,\n        itemPrefixCls: itemPrefixCls,\n        bordered: bordered,\n        label: showLabel ? label : null,\n        content: showContent ? children : null\n      });\n    }\n\n    return [/*#__PURE__*/React.createElement(Cell, {\n      key: \"label-\".concat(key || index),\n      className: className,\n      style: style,\n      span: 1,\n      colon: colon,\n      component: component[0],\n      itemPrefixCls: itemPrefixCls,\n      bordered: bordered,\n      label: label\n    }), /*#__PURE__*/React.createElement(Cell, {\n      key: \"content-\".concat(key || index),\n      className: className,\n      style: style,\n      span: span * 2 - 1,\n      component: component[1],\n      itemPrefixCls: itemPrefixCls,\n      bordered: bordered,\n      content: children\n    })];\n  });\n}\n\nvar Row = function Row(props) {\n  var prefixCls = props.prefixCls,\n      vertical = props.vertical,\n      row = props.row,\n      index = props.index,\n      bordered = props.bordered;\n\n  if (vertical) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n      key: \"label-\".concat(index),\n      className: \"\".concat(prefixCls, \"-row\")\n    }, renderCells(row, props, {\n      component: 'th',\n      type: 'label',\n      showLabel: true\n    })), /*#__PURE__*/React.createElement(\"tr\", {\n      key: \"content-\".concat(index),\n      className: \"\".concat(prefixCls, \"-row\")\n    }, renderCells(row, props, {\n      component: 'td',\n      type: 'content',\n      showContent: true\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    className: \"\".concat(prefixCls, \"-row\")\n  }, renderCells(row, props, {\n    component: bordered ? ['th', 'td'] : 'td',\n    type: 'item',\n    showLabel: true,\n    showContent: true\n  }));\n};\n\nexport default Row;"]},"metadata":{},"sourceType":"module"}