{"ast":null,"code":"const column = () => [({\n  title: \"Name\",\n  dataIndex: \"name\",\n  filters: [{\n    text: \"Joe\",\n    value: \"Joe\"\n  }, {\n    text: \"Jim\",\n    value: \"Jim\"\n  }],\n  // specify the condition of filtering result\n  // here is that finding the name started with `value`\n  onFilter: (value, record) => record.name.indexOf(value) === 0,\n  sorter: (a, b) => a.name.length - b.name.length,\n  sortDirections: [\"descend\"]\n}, {\n  title: \"Age\",\n  dataIndex: \"age\",\n  defaultSortOrder: \"descend\",\n  sorter: (a, b) => a.age - b.age\n}, {\n  title: \"Address\",\n  dataIndex: \"address\",\n  filters: [{\n    text: \"London\",\n    value: \"London\"\n  }, {\n    text: \"New York\",\n    value: \"New York\"\n  }],\n  filterMultiple: false,\n  onFilter: (value, record) => record.address.indexOf(value) === 0,\n  sorter: (a, b) => a.address.length - b.address.length,\n  sortDirections: [\"descend\", \"ascend\"]\n})];\n\nexport { column };","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/Admin/components/PersonalComponent/components/column.jsx"],"names":["column","title","dataIndex","filters","text","value","onFilter","record","name","indexOf","sorter","a","b","length","sortDirections","defaultSortOrder","age","filterMultiple","address"],"mappings":"AAAA,MAAMA,MAAM,GAAG,MAAM,EAClB;AACCC,EAAAA,KAAK,EAAE,MADR;AAECC,EAAAA,SAAS,EAAE,MAFZ;AAGCC,EAAAA,OAAO,EAAE,CACP;AACEC,IAAAA,IAAI,EAAE,KADR;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADO,EAKP;AACED,IAAAA,IAAI,EAAE,KADR;AAEEC,IAAAA,KAAK,EAAE;AAFT,GALO,CAHV;AAaC;AACA;AACAC,EAAAA,QAAQ,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmBA,MAAM,CAACC,IAAP,CAAYC,OAAZ,CAAoBJ,KAApB,MAA+B,CAf7D;AAgBCK,EAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACH,IAAF,CAAOK,MAAP,GAAgBD,CAAC,CAACJ,IAAF,CAAOK,MAhB1C;AAiBCC,EAAAA,cAAc,EAAE,CAAC,SAAD;AAjBjB,GAmBD;AACEb,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,SAAS,EAAE,KAFb;AAGEa,EAAAA,gBAAgB,EAAE,SAHpB;AAIEL,EAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACK,GAAF,GAAQJ,CAAC,CAACI;AAJ9B,CAnBC,EAyBD;AACEf,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,SAAS,EAAE,SAFb;AAGEC,EAAAA,OAAO,EAAE,CACP;AACEC,IAAAA,IAAI,EAAE,QADR;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADO,EAKP;AACED,IAAAA,IAAI,EAAE,UADR;AAEEC,IAAAA,KAAK,EAAE;AAFT,GALO,CAHX;AAaEY,EAAAA,cAAc,EAAE,KAblB;AAcEX,EAAAA,QAAQ,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmBA,MAAM,CAACW,OAAP,CAAeT,OAAf,CAAuBJ,KAAvB,MAAkC,CAdjE;AAeEK,EAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACO,OAAF,CAAUL,MAAV,GAAmBD,CAAC,CAACM,OAAF,CAAUL,MAfjD;AAgBEC,EAAAA,cAAc,EAAE,CAAC,SAAD,EAAY,QAAZ;AAhBlB,CA1BmB,EAArB;;AA8CA,SAASd,MAAT","sourcesContent":["const column = () => [\n  ({\n    title: \"Name\",\n    dataIndex: \"name\",\n    filters: [\n      {\n        text: \"Joe\",\n        value: \"Joe\"\n      },\n      {\n        text: \"Jim\",\n        value: \"Jim\"\n      }\n    ],\n    // specify the condition of filtering result\n    // here is that finding the name started with `value`\n    onFilter: (value, record) => record.name.indexOf(value) === 0,\n    sorter: (a, b) => a.name.length - b.name.length,\n    sortDirections: [\"descend\"]\n  },\n  {\n    title: \"Age\",\n    dataIndex: \"age\",\n    defaultSortOrder: \"descend\",\n    sorter: (a, b) => a.age - b.age\n  },\n  {\n    title: \"Address\",\n    dataIndex: \"address\",\n    filters: [\n      {\n        text: \"London\",\n        value: \"London\"\n      },\n      {\n        text: \"New York\",\n        value: \"New York\"\n      }\n    ],\n    filterMultiple: false,\n    onFilter: (value, record) => record.address.indexOf(value) === 0,\n    sorter: (a, b) => a.address.length - b.address.length,\n    sortDirections: [\"descend\", \"ascend\"]\n  })\n];\n\nexport { column };\n"]},"metadata":{},"sourceType":"module"}