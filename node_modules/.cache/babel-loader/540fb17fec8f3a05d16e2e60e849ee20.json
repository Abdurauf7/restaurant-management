{"ast":null,"code":"import jwtDecode from \"jwt-decode\";\nimport https from \"./httpService\";\nimport { apiUrl, admin } from \"../config.json\";\nimport { openNotification } from \"../components/custom\";\nexport function login(values, history) {\n  return https.post(apiUrl + \"user/login\", values).then(res => {\n    localStorage.setItem(admin, res.data.admin);\n\n    if (res.data.status === 200) {\n      window.location.replace(\"/admin\");\n      openNotification(\"success\", `${res.data.data} Successfully logged in`);\n    } else if (res.data.status === 302) {\n      history.replace(\"/user\");\n      openNotification(\"success\", `${res.data.data} Successfully logged in`);\n    } else if (res.data.status === 401) {\n      return openNotification(\"error\", \"Email or Password is not valid\", \"Please retype Email or Password\");\n    } else if (res.data.status === 404) {\n      return openNotification(\"error\", \"Email or Password is not valid\", \"Please retype Email or Password\");\n    }\n  });\n}\nexport function getAdmin() {\n  try {\n    const jwt = localStorage.getItem(admin);\n    return jwtDecode(jwt);\n  } catch (error) {\n    return null;\n  }\n}\nexport function getUser() {\n  try {\n    const jwt = localStorage.getItem(admin);\n    return jwtDecode(jwt);\n  } catch (error) {\n    return null;\n  }\n}","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/services/auth.js"],"names":["jwtDecode","https","apiUrl","admin","openNotification","login","values","history","post","then","res","localStorage","setItem","data","status","window","location","replace","getAdmin","jwt","getItem","error","getUser"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,gBAA9B;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AAEA,OAAO,SAASC,KAAT,CAAeC,MAAf,EAAuBC,OAAvB,EAAgC;AACrC,SAAON,KAAK,CAACO,IAAN,CAAWN,MAAM,GAAG,YAApB,EAAkCI,MAAlC,EAA0CG,IAA1C,CAA+CC,GAAG,IAAI;AAC3DC,IAAAA,YAAY,CAACC,OAAb,CAAqBT,KAArB,EAA4BO,GAAG,CAACG,IAAJ,CAASV,KAArC;;AACA,QAAIO,GAAG,CAACG,IAAJ,CAASC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,QAAxB;AACAb,MAAAA,gBAAgB,CAAC,SAAD,EAAa,GAAEM,GAAG,CAACG,IAAJ,CAASA,IAAK,yBAA7B,CAAhB;AACD,KAHD,MAGO,IAAIH,GAAG,CAACG,IAAJ,CAASC,MAAT,KAAoB,GAAxB,EAA6B;AAClCP,MAAAA,OAAO,CAACU,OAAR,CAAgB,OAAhB;AACAb,MAAAA,gBAAgB,CAAC,SAAD,EAAa,GAAEM,GAAG,CAACG,IAAJ,CAASA,IAAK,yBAA7B,CAAhB;AACD,KAHM,MAGA,IAAIH,GAAG,CAACG,IAAJ,CAASC,MAAT,KAAoB,GAAxB,EAA6B;AAClC,aAAOV,gBAAgB,CACrB,OADqB,EAErB,gCAFqB,EAGrB,iCAHqB,CAAvB;AAKD,KANM,MAMA,IAAIM,GAAG,CAACG,IAAJ,CAASC,MAAT,KAAoB,GAAxB,EAA6B;AAClC,aAAOV,gBAAgB,CACrB,OADqB,EAErB,gCAFqB,EAGrB,iCAHqB,CAAvB;AAKD;AACF,GArBM,CAAP;AAsBD;AAED,OAAO,SAASc,QAAT,GAAoB;AACzB,MAAI;AACF,UAAMC,GAAG,GAAGR,YAAY,CAACS,OAAb,CAAqBjB,KAArB,CAAZ;AACA,WAAOH,SAAS,CAACmB,GAAD,CAAhB;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,WAAO,IAAP;AACD;AACF;AACD,OAAO,SAASC,OAAT,GAAmB;AACxB,MAAI;AACF,UAAMH,GAAG,GAAGR,YAAY,CAACS,OAAb,CAAqBjB,KAArB,CAAZ;AACA,WAAOH,SAAS,CAACmB,GAAD,CAAhB;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,WAAO,IAAP;AACD;AACF","sourcesContent":["import jwtDecode from \"jwt-decode\";\nimport https from \"./httpService\";\nimport { apiUrl, admin } from \"../config.json\";\nimport { openNotification } from \"../components/custom\";\n\nexport function login(values, history) {\n  return https.post(apiUrl + \"user/login\", values).then(res => {\n    localStorage.setItem(admin, res.data.admin);\n    if (res.data.status === 200) {\n      window.location.replace(\"/admin\");\n      openNotification(\"success\", `${res.data.data} Successfully logged in`);\n    } else if (res.data.status === 302) {\n      history.replace(\"/user\");\n      openNotification(\"success\", `${res.data.data} Successfully logged in`);\n    } else if (res.data.status === 401) {\n      return openNotification(\n        \"error\",\n        \"Email or Password is not valid\",\n        \"Please retype Email or Password\"\n      );\n    } else if (res.data.status === 404) {\n      return openNotification(\n        \"error\",\n        \"Email or Password is not valid\",\n        \"Please retype Email or Password\"\n      );\n    }\n  });\n}\n\nexport function getAdmin() {\n  try {\n    const jwt = localStorage.getItem(admin);\n    return jwtDecode(jwt);\n  } catch (error) {\n    return null;\n  }\n}\nexport function getUser() {\n  try {\n    const jwt = localStorage.getItem(admin);\n    return jwtDecode(jwt);\n  } catch (error) {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}