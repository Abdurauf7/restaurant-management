{"ast":null,"code":"var _jsxFileName = \"/Users/abdurauf/Desktop/\\u6BD5\\u4E1A\\u8BBE\\u8BA1/orginal/restaurant-management-system/plov/src/components/RegisterForm/registerForm.jsx\";\n// // React\n// import React, { Component, Fragment } from \"react\";\n// // Third Part\n// // custom\n// import \"../../assets/css/RegisterForm.css\";\n// const { Option } = Select;\n// const { Title } = Typography;\n// class SignUp extends Component {\n//   handleSubmit = e => {\n//     e.preventDefault();\n//     const { history } = this.props;\n//     this.props.form.validateFieldsAndScroll((err, values) => {\n//       if (!err)\n//         https\n//           .post(apiUrl + \"user/register\", {\n//             first_name: values.first_name,\n//             last_name: values.last_name,\n//             gender: values.gender,\n//             address: values.address,\n//             password: values.password,\n//             phone_number: values.phone,\n//             work_position: values.work_position,\n//             age: values.age,\n//             salary: values.salary,\n//             email: values.email,\n//             date: values.date._d\n//           })\n//           .then(history.replace(\"/\"));\n//     });\n//   };\n//   render() {\n//     const { getFieldDecorator } = this.props.form;\n//     return (\n//       <Fragment>\n//         <Form onSubmit={this.handleSubmit} className=\"form\">\n//           <Title style={{ textAlign: \"center\" }}>Register</Title>\n//           <Row gutter={20}>\n//             <Col span={8} offset={5}>\n//               <Form.Item label={<span>First Name&nbsp;</span>}>\n//                 {getFieldDecorator(\"first_name\", {\n//                   rules: [\n//                     {\n//                       required: true,\n//                       message: \"Please input your first name!\",\n//                       whitespace: true\n//                     }\n//                   ]\n//                 })(<Input />)}\n//               </Form.Item>\n//             </Col>\n//             <Col span={8}>\n//               <Form.Item label={<span>Last Name&nbsp;</span>}>\n//                 {getFieldDecorator(\"last_name\", {\n//                   rules: [\n//                     {\n//                       required: true,\n//                       message: \"Please input your last name!\",\n//                       whitespace: true\n//                     }\n//                   ]\n//                 })(<Input />)}\n//               </Form.Item>\n//             </Col>\n//           </Row>\n//           <Row gutter={20}>\n//             <Col span={8} offset={5}>\n//               <Form.Item label=\"Gender\">\n//                 {getFieldDecorator(\"gender\", {\n//                   rules: [\n//                     { required: true, message: \"Please select your gender!\" }\n//                   ]\n//                 })(\n//                   <Select placeholder=\"Select a option \">\n//                     <Option value=\"Male\">Male</Option>\n//                     <Option value=\"Female\">Female</Option>\n//                   </Select>\n//                 )}\n//               </Form.Item>\n//             </Col>\n//             <Col span={8}>\n//               <Form.Item label=\"Address\">\n//                 {getFieldDecorator(\"address\", {\n//                   rules: [\n//                     {\n//                       required: true,\n//                       message: \"Please input your address!\",\n//                       whitespace: true\n//                     },\n//                     {\n//                       required: true,\n//                       message: \"Please input your Address!\"\n//                     }\n//                   ]\n//                 })(<Input />)}\n//               </Form.Item>\n//             </Col>\n//           </Row>\n//           <Row gutter={20}>\n//             <Col span={8} offset={5}>\n//               <Form.Item label=\"E-mail\">\n//                 {getFieldDecorator(\"email\", {\n//                   rules: [\n//                     {\n//                       type: \"email\",\n//                       message: \"The input is not valid E-mail!\"\n//                     },\n//                     {\n//                       required: true,\n//                       message: \"Please input your E-mail!\"\n//                     }\n//                   ]\n//                 })(<Input />)}\n//               </Form.Item>\n//             </Col>\n//             <Col span={8}>\n//               <Form.Item label=\"Password\">\n//                 {getFieldDecorator(\"password\", {\n//                   rules: [\n//                     {\n//                       required: true,\n//                       message: \"Please input your password!\"\n//                     }\n//                   ]\n//                 })(<Input.Password />)}\n//               </Form.Item>\n//             </Col>\n//           </Row>\n//           <Row gutter={20}>\n//             <Col span={8} offset={5}>\n//               <Form.Item label=\"Phone\">\n//                 {getFieldDecorator(\"phone\", {\n//                   rules: [\n//                     {\n//                       required: true,\n//                       message: \"Please input your phone!\"\n//                     }\n//                   ]\n//                 })(<Input />)}\n//               </Form.Item>\n//             </Col>\n//             <Col span={8}>\n//               <Form.Item label=\"Work Position\">\n//                 {getFieldDecorator(\"work_position\", {\n//                   rules: [\n//                     {\n//                       required: true,\n//                       message: \"Please select your work position!\"\n//                     }\n//                   ]\n//                 })(\n//                   <Select placeholder=\"Select a option \">\n//                     <Option value=\"Chef\">Chef</Option>\n//                     <Option value=\"Waiter\">Waiter</Option>\n//                     <Option value=\"Employee\">Employee</Option>\n//                   </Select>\n//                 )}\n//               </Form.Item>\n//             </Col>\n//           </Row>\n//           <Row gutter={20}>\n//             <Col span={8} offset={5}>\n//               <Form.Item label=\"Age\">\n//                 {getFieldDecorator(\"age\", {\n//                   rules: [\n//                     {\n//                       required: true,\n//                       message: \"Please input your age!\"\n//                     }\n//                   ]\n//                 })(<Input />)}\n//               </Form.Item>\n//             </Col>\n//             <Col span={8}>\n//               <Form.Item label=\"Salary\">\n//                 {getFieldDecorator(\"salary\", {\n//                   rules: [\n//                     {\n//                       required: true,\n//                       message: \"Please input your salary!\"\n//                     }\n//                   ]\n//                 })(<Input />)}\n//               </Form.Item>\n//             </Col>\n//           </Row>\n//           <Row>\n//             <Col offset={5} span={8}>\n//               <Form.Item label=\"date\">\n//                 {getFieldDecorator(\"date\", {\n//                   rules: [\n//                     {\n//                       required: true,\n//                       message: \"Please input your date!\"\n//                     }\n//                   ]\n//                 })(<DatePicker showTime />)}\n//               </Form.Item>\n//             </Col>\n//           </Row>\n//           <Row gutter={20}>\n//             <Col offset={5}>\n//               <Form.Item>\n//                 <Button type=\"primary\" htmlType=\"submit\">\n//                   Register\n//                 </Button>\n//               </Form.Item>\n//             </Col>\n//           </Row>\n//         </Form>\n//       </Fragment>\n//     );\n//   }\n// }\n// export default SignUp;\n// React\nimport React, { Fragment } from \"react\"; // Third part\n\nimport { Form, Input, Select, Button, InputNumber, Row, Col, DatePicker } from \"antd\"; // services\n\nimport https from \"../../services/httpService\";\nimport { apiUrl } from \"../../config.json\";\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\nconst {\n  Option\n} = Select;\n\nconst Register = ({\n  history\n}) => {\n  const onHandleAdd = async values => {// await\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container pt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, React.createElement(Form, Object.assign({}, layout, {\n    name: \"basic\",\n    onFinish: onHandleAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }), React.createElement(Row, {\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"font-weight-bold text-uppercase\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, \"Register\")), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, React.createElement(Col, {\n    span: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    label: \"First Name\",\n    name: \"first_name\",\n    rules: [{\n      required: true,\n      message: \"Please input {firstName}\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, React.createElement(Input, {\n    allowClear: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    span: 10,\n    offset: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    label: \"Last Name\",\n    name: \"last_name\",\n    rules: [{\n      required: true,\n      message: \"Please input {lastName}\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, React.createElement(Input, {\n    allowClear: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, React.createElement(Col, {\n    span: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    label: \"Gender\",\n    name: \"gender\",\n    rules: [{\n      required: true,\n      message: \"Please choose {gender}\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, React.createElement(Select, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }, React.createElement(Option, {\n    default: true,\n    value: \"Male\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, \"Male\"), React.createElement(Option, {\n    value: \"Female\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }, \"Female\")))), React.createElement(Col, {\n    span: 10,\n    offset: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    label: \"Address\",\n    name: \"address\",\n    rules: [{\n      required: true,\n      message: \"Please input {Address}\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }, React.createElement(Select, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }, React.createElement(Option, {\n    value: \"Huangpu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, \"Huangpu\"), React.createElement(Option, {\n    value: \"Changning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }, \"Changning\"), React.createElement(Option, {\n    value: \"Jing'an\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }, \"Jing'an\"), React.createElement(Option, {\n    value: \"Putuo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }, \"Putuo\"), React.createElement(Option, {\n    value: \"Hongkou\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }, \"Hongkou\"), React.createElement(Option, {\n    value: \"Yangpu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }, \"Yangpu\"), React.createElement(Option, {\n    value: \"Minhang\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324\n    },\n    __self: this\n  }, \"Minhang \"), React.createElement(Option, {\n    value: \"Baoshan\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326\n    },\n    __self: this\n  }, \" Baoshan\"), React.createElement(Option, {\n    value: \"Jiading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  }, \" Jiading\"), React.createElement(Option, {\n    value: \"Pudong\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330\n    },\n    __self: this\n  }, \" Pudong\"), React.createElement(Option, {\n    value: \"Jinshan\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }, \" Jinshan\"), React.createElement(Option, {\n    value: \"Songjiang\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334\n    },\n    __self: this\n  }, \" Songjiang\"), React.createElement(Option, {\n    value: \"Qingpu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  }, \" Qingpu\"), React.createElement(Option, {\n    value: \"Fengxian\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  }, \" Fengxian\"), React.createElement(Option, {\n    value: \"Chongming\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }, \" Chongming\"))))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345\n    },\n    __self: this\n  }, React.createElement(Col, {\n    span: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346\n    },\n    __self: this\n  }, \" \", React.createElement(Form.Item, {\n    label: \"Password\",\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: \"Please input {password}\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }, React.createElement(Input.Password, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    span: 10,\n    offset: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    label: \"Phone\",\n    name: \"phone_number\",\n    rules: [{\n      required: true,\n      message: \"Please input {phoneNumber}\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357\n    },\n    __self: this\n  }, React.createElement(InputNumber, {\n    min: 0,\n    className: \"w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369\n    },\n    __self: this\n  }, React.createElement(Col, {\n    span: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    label: \"Position\",\n    name: \"work_position\",\n    rules: [{\n      required: true,\n      message: \"Please choose {workPosition}\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371\n    },\n    __self: this\n  }, React.createElement(Select, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378\n    },\n    __self: this\n  }, React.createElement(Option, {\n    default: true,\n    value: \"Chef\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379\n    },\n    __self: this\n  }, \"Chef\"), React.createElement(Option, {\n    value: \"Waiter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382\n    },\n    __self: this\n  }, \"Waiter\"), React.createElement(Option, {\n    value: \"Manager\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383\n    },\n    __self: this\n  }, \"Manager\"), React.createElement(Option, {\n    value: \"Cleaner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384\n    },\n    __self: this\n  }, \"Cleaner\")))), React.createElement(Col, {\n    span: 10,\n    offset: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388\n    },\n    __self: this\n  }, \" \", React.createElement(Form.Item, {\n    label: \"Age\",\n    name: \"age\",\n    rules: [{\n      required: true,\n      message: \"Please input {age}\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390\n    },\n    __self: this\n  }, React.createElement(InputNumber, {\n    min: 0,\n    max: 60,\n    className: \"w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399\n    },\n    __self: this\n  }, React.createElement(Col, {\n    span: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400\n    },\n    __self: this\n  }, \" \", React.createElement(Form.Item, {\n    label: \"Salary\",\n    name: \"salary\",\n    rules: [{\n      required: true,\n      message: \"Please input {salary}\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402\n    },\n    __self: this\n  }, React.createElement(InputNumber, {\n    min: 0,\n    max: 50000,\n    className: \"w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    span: 10,\n    offset: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410\n    },\n    __self: this\n  }, \" \", React.createElement(Form.Item, {\n    name: \"email\",\n    label: \"Email\",\n    rules: [{\n      required: true,\n      type: \"email\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421\n    },\n    __self: this\n  }, React.createElement(Col, {\n    span: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    name: \"date\",\n    label: \"Date\",\n    rules: [{\n      required: true,\n      message: \"Please choose {date}\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423\n    },\n    __self: this\n  }, React.createElement(DatePicker, {\n    className: \"w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433\n    },\n    __self: this\n  }, React.createElement(Col, {\n    span: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434\n    },\n    __self: this\n  }, React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436\n    },\n    __self: this\n  }, \"Add\")))))));\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/RegisterForm/registerForm.jsx"],"names":["React","Fragment","Form","Input","Select","Button","InputNumber","Row","Col","DatePicker","https","apiUrl","layout","labelCol","span","wrapperCol","tailLayout","offset","Option","Register","history","onHandleAdd","values","required","message","type"],"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","sourcesContent":["// // React\n// import React, { Component, Fragment } from \"react\";\n\n// // Third Part\n\n// // custom\n// import \"../../assets/css/RegisterForm.css\";\n\n// const { Option } = Select;\n// const { Title } = Typography;\n\n// class SignUp extends Component {\n//   handleSubmit = e => {\n//     e.preventDefault();\n//     const { history } = this.props;\n//     this.props.form.validateFieldsAndScroll((err, values) => {\n//       if (!err)\n//         https\n//           .post(apiUrl + \"user/register\", {\n//             first_name: values.first_name,\n//             last_name: values.last_name,\n//             gender: values.gender,\n//             address: values.address,\n//             password: values.password,\n//             phone_number: values.phone,\n//             work_position: values.work_position,\n//             age: values.age,\n//             salary: values.salary,\n//             email: values.email,\n//             date: values.date._d\n//           })\n//           .then(history.replace(\"/\"));\n//     });\n//   };\n//   render() {\n//     const { getFieldDecorator } = this.props.form;\n\n//     return (\n//       <Fragment>\n//         <Form onSubmit={this.handleSubmit} className=\"form\">\n//           <Title style={{ textAlign: \"center\" }}>Register</Title>\n//           <Row gutter={20}>\n//             <Col span={8} offset={5}>\n//               <Form.Item label={<span>First Name&nbsp;</span>}>\n//                 {getFieldDecorator(\"first_name\", {\n//                   rules: [\n//                     {\n//                       required: true,\n//                       message: \"Please input your first name!\",\n//                       whitespace: true\n//                     }\n//                   ]\n//                 })(<Input />)}\n//               </Form.Item>\n//             </Col>\n//             <Col span={8}>\n//               <Form.Item label={<span>Last Name&nbsp;</span>}>\n//                 {getFieldDecorator(\"last_name\", {\n//                   rules: [\n//                     {\n//                       required: true,\n//                       message: \"Please input your last name!\",\n//                       whitespace: true\n//                     }\n//                   ]\n//                 })(<Input />)}\n//               </Form.Item>\n//             </Col>\n//           </Row>\n//           <Row gutter={20}>\n//             <Col span={8} offset={5}>\n//               <Form.Item label=\"Gender\">\n//                 {getFieldDecorator(\"gender\", {\n//                   rules: [\n//                     { required: true, message: \"Please select your gender!\" }\n//                   ]\n//                 })(\n//                   <Select placeholder=\"Select a option \">\n//                     <Option value=\"Male\">Male</Option>\n//                     <Option value=\"Female\">Female</Option>\n//                   </Select>\n//                 )}\n//               </Form.Item>\n//             </Col>\n//             <Col span={8}>\n//               <Form.Item label=\"Address\">\n//                 {getFieldDecorator(\"address\", {\n//                   rules: [\n//                     {\n//                       required: true,\n//                       message: \"Please input your address!\",\n//                       whitespace: true\n//                     },\n//                     {\n//                       required: true,\n//                       message: \"Please input your Address!\"\n//                     }\n//                   ]\n//                 })(<Input />)}\n//               </Form.Item>\n//             </Col>\n//           </Row>\n//           <Row gutter={20}>\n//             <Col span={8} offset={5}>\n//               <Form.Item label=\"E-mail\">\n//                 {getFieldDecorator(\"email\", {\n//                   rules: [\n//                     {\n//                       type: \"email\",\n//                       message: \"The input is not valid E-mail!\"\n//                     },\n//                     {\n//                       required: true,\n//                       message: \"Please input your E-mail!\"\n//                     }\n//                   ]\n//                 })(<Input />)}\n//               </Form.Item>\n//             </Col>\n//             <Col span={8}>\n//               <Form.Item label=\"Password\">\n//                 {getFieldDecorator(\"password\", {\n//                   rules: [\n//                     {\n//                       required: true,\n//                       message: \"Please input your password!\"\n//                     }\n//                   ]\n//                 })(<Input.Password />)}\n//               </Form.Item>\n//             </Col>\n//           </Row>\n//           <Row gutter={20}>\n//             <Col span={8} offset={5}>\n//               <Form.Item label=\"Phone\">\n//                 {getFieldDecorator(\"phone\", {\n//                   rules: [\n//                     {\n//                       required: true,\n//                       message: \"Please input your phone!\"\n//                     }\n//                   ]\n//                 })(<Input />)}\n//               </Form.Item>\n//             </Col>\n//             <Col span={8}>\n//               <Form.Item label=\"Work Position\">\n//                 {getFieldDecorator(\"work_position\", {\n//                   rules: [\n//                     {\n//                       required: true,\n//                       message: \"Please select your work position!\"\n//                     }\n//                   ]\n//                 })(\n//                   <Select placeholder=\"Select a option \">\n//                     <Option value=\"Chef\">Chef</Option>\n//                     <Option value=\"Waiter\">Waiter</Option>\n//                     <Option value=\"Employee\">Employee</Option>\n//                   </Select>\n//                 )}\n//               </Form.Item>\n//             </Col>\n//           </Row>\n//           <Row gutter={20}>\n//             <Col span={8} offset={5}>\n//               <Form.Item label=\"Age\">\n//                 {getFieldDecorator(\"age\", {\n//                   rules: [\n//                     {\n//                       required: true,\n//                       message: \"Please input your age!\"\n//                     }\n//                   ]\n//                 })(<Input />)}\n//               </Form.Item>\n//             </Col>\n//             <Col span={8}>\n//               <Form.Item label=\"Salary\">\n//                 {getFieldDecorator(\"salary\", {\n//                   rules: [\n//                     {\n//                       required: true,\n//                       message: \"Please input your salary!\"\n//                     }\n//                   ]\n//                 })(<Input />)}\n//               </Form.Item>\n//             </Col>\n//           </Row>\n//           <Row>\n//             <Col offset={5} span={8}>\n//               <Form.Item label=\"date\">\n//                 {getFieldDecorator(\"date\", {\n//                   rules: [\n//                     {\n//                       required: true,\n//                       message: \"Please input your date!\"\n//                     }\n//                   ]\n//                 })(<DatePicker showTime />)}\n//               </Form.Item>\n//             </Col>\n//           </Row>\n//           <Row gutter={20}>\n//             <Col offset={5}>\n//               <Form.Item>\n//                 <Button type=\"primary\" htmlType=\"submit\">\n//                   Register\n//                 </Button>\n//               </Form.Item>\n//             </Col>\n//           </Row>\n//         </Form>\n//       </Fragment>\n//     );\n//   }\n// }\n\n// export default SignUp;\n\n// React\nimport React, { Fragment } from \"react\";\n\n// Third part\nimport {\n  Form,\n  Input,\n  Select,\n  Button,\n  InputNumber,\n  Row,\n  Col,\n  DatePicker\n} from \"antd\";\n\n// services\nimport https from \"../../services/httpService\";\nimport { apiUrl } from \"../../config.json\";\n\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nconst { Option } = Select;\nconst Register = ({ history }) => {\n  const onHandleAdd = async values => {\n    // await\n  };\n  return (\n    <Fragment>\n      <div className=\"container pt-5\">\n        <Form {...layout} name=\"basic\" onFinish={onHandleAdd}>\n          <Row justify=\"center\">\n            <h1 className=\"font-weight-bold text-uppercase\">Register</h1>\n          </Row>\n          <Row>\n            <Col span={10}>\n              <Form.Item\n                label=\"First Name\"\n                name=\"first_name\"\n                rules={[\n                  { required: true, message: \"Please input {firstName}\" }\n                ]}\n              >\n                <Input allowClear />\n              </Form.Item>\n            </Col>\n            <Col span={10} offset={2}>\n              <Form.Item\n                label=\"Last Name\"\n                name=\"last_name\"\n                rules={[{ required: true, message: \"Please input {lastName}\" }]}\n              >\n                <Input allowClear />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={10}>\n              <Form.Item\n                label=\"Gender\"\n                name=\"gender\"\n                rules={[{ required: true, message: \"Please choose {gender}\" }]}\n              >\n                <Select>\n                  <Option default value=\"Male\">\n                    Male\n                  </Option>\n                  <Option value=\"Female\">Female</Option>\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col span={10} offset={2}>\n              <Form.Item\n                label=\"Address\"\n                name=\"address\"\n                rules={[{ required: true, message: \"Please input {Address}\" }]}\n              >\n                <Select>\n                  <Option value=\"Huangpu\">Huangpu</Option>\n\n                  <Option value=\"Changning\">Changning</Option>\n\n                  <Option value=\"Jing'an\">Jing'an</Option>\n\n                  <Option value=\"Putuo\">Putuo</Option>\n\n                  <Option value=\"Hongkou\">Hongkou</Option>\n\n                  <Option value=\"Yangpu\">Yangpu</Option>\n\n                  <Option value=\"Minhang\">Minhang </Option>\n\n                  <Option value=\"Baoshan\"> Baoshan</Option>\n\n                  <Option value=\"Jiading\"> Jiading</Option>\n\n                  <Option value=\"Pudong\"> Pudong</Option>\n\n                  <Option value=\"Jinshan\"> Jinshan</Option>\n\n                  <Option value=\"Songjiang\"> Songjiang</Option>\n\n                  <Option value=\"Qingpu\"> Qingpu</Option>\n\n                  <Option value=\"Fengxian\"> Fengxian</Option>\n\n                  <Option value=\"Chongming\"> Chongming</Option>\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={10}>\n              {\" \"}\n              <Form.Item\n                label=\"Password\"\n                name=\"password\"\n                rules={[{ required: true, message: \"Please input {password}\" }]}\n              >\n                <Input.Password />\n              </Form.Item>\n            </Col>\n            <Col span={10} offset={2}>\n              <Form.Item\n                label=\"Phone\"\n                name=\"phone_number\"\n                rules={[\n                  { required: true, message: \"Please input {phoneNumber}\" }\n                ]}\n              >\n                <InputNumber min={0} className=\"w-100\" />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col span={10}>\n              <Form.Item\n                label=\"Position\"\n                name=\"work_position\"\n                rules={[\n                  { required: true, message: \"Please choose {workPosition}\" }\n                ]}\n              >\n                <Select>\n                  <Option default value=\"Chef\">\n                    Chef\n                  </Option>\n                  <Option value=\"Waiter\">Waiter</Option>\n                  <Option value=\"Manager\">Manager</Option>\n                  <Option value=\"Cleaner\">Cleaner</Option>\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col span={10} offset={2}>\n              {\" \"}\n              <Form.Item\n                label=\"Age\"\n                name=\"age\"\n                rules={[{ required: true, message: \"Please input {age}\" }]}\n              >\n                <InputNumber min={0} max={60} className=\"w-100\" />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={10}>\n              {\" \"}\n              <Form.Item\n                label=\"Salary\"\n                name=\"salary\"\n                rules={[{ required: true, message: \"Please input {salary}\" }]}\n              >\n                <InputNumber min={0} max={50000} className=\"w-100\" />\n              </Form.Item>\n            </Col>\n            <Col span={10} offset={2}>\n              {\" \"}\n              <Form.Item\n                name=\"email\"\n                label=\"Email\"\n                rules={[{ required: true, type: \"email\" }]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={10}>\n              <Form.Item\n                name=\"date\"\n                label=\"Date\"\n                rules={[{ required: true, message: \"Please choose {date}\" }]}\n              >\n                <DatePicker className=\"w-100\" />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col span={10}>\n              <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Add\n                </Button>\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}