{"ast":null,"code":"import _includes from \"lodash/includes\";\nimport _uniq from \"lodash/uniq\";\nimport _pickBy from \"lodash/pickBy\";\nimport _without from \"lodash/without\";\nimport _isFunction from \"lodash/isFunction\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _assign from \"lodash/assign\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nexport default {\n  /* Returns all own and shared events that should be attached to a single target element,\n   * i.e. an individual bar specified by target: \"data\", eventKey: [index].\n   * Returned events are scoped to the appropriate state. Either that of the component itself\n   * (i.e. VictoryBar) in the case of own events, or that of the parent component\n   * (i.e. VictoryChart) in the case of shared events\n   */\n  // eslint-disable-next-line max-params\n  getEvents: function getEvents(props, target, eventKey, getScopedEvents) {\n    var _this = this; // Returns all events that apply to a particular target element\n\n\n    var getEventsByTarget = function getEventsByTarget(events) {\n      var getSelectedEvents = function getSelectedEvents() {\n        var targetEvents = events.reduce(function (memo, event) {\n          if (event.target !== undefined) {\n            var matchesTarget = Array.isArray(event.target) ? _includes(event.target, target) : \"\".concat(event.target) === \"\".concat(target);\n            return matchesTarget ? memo.concat(event) : memo;\n          }\n\n          return memo.concat(event);\n        }, []);\n\n        if (eventKey !== undefined && target !== \"parent\") {\n          return targetEvents.filter(function (obj) {\n            var targetKeys = obj.eventKey;\n\n            var useKey = function useKey(key) {\n              return key ? \"\".concat(key) === \"\".concat(eventKey) : true;\n            };\n\n            return Array.isArray(targetKeys) ? targetKeys.some(function (k) {\n              return useKey(k);\n            }) : useKey(targetKeys);\n          });\n        }\n\n        return targetEvents;\n      };\n\n      var selectedEvents = getSelectedEvents();\n      return Array.isArray(selectedEvents) && selectedEvents.reduce(function (memo, event) {\n        return event ? _assign(memo, event.eventHandlers) : memo;\n      }, {});\n    };\n    /* Returns all events from props and defaultEvents from components. Events handlers\n     * specified in props will override handlers for the same event if they are also\n     * specified in defaultEvents of a sub-component\n     */\n\n\n    var getAllEvents = function getAllEvents() {\n      if (Array.isArray(_this.componentEvents)) {\n        var _this$componentEvents;\n\n        return Array.isArray(props.events) ? (_this$componentEvents = _this.componentEvents).concat.apply(_this$componentEvents, _toConsumableArray(props.events)) : _this.componentEvents;\n      }\n\n      return props.events;\n    };\n\n    var allEvents = getAllEvents();\n    var ownEvents = allEvents && _isFunction(getScopedEvents) ? getScopedEvents(getEventsByTarget(allEvents), target) : undefined;\n\n    if (!props.sharedEvents) {\n      return ownEvents;\n    }\n\n    var getSharedEvents = props.sharedEvents.getEvents;\n    var sharedEvents = props.sharedEvents.events && getSharedEvents(getEventsByTarget(props.sharedEvents.events), target);\n    return _assign({}, sharedEvents, ownEvents);\n  },\n\n  /* Returns a modified events object where each event handler is replaced by a new\n   * function that calls the original handler and then calls setState with the return\n   * of the original event handler assigned to state property that maps to the target\n   * element.\n   */\n  // eslint-disable-next-line max-params\n  getScopedEvents: function getScopedEvents(events, namespace, childType, baseProps) {\n    var _this2 = this;\n\n    if (_isEmpty(events)) {\n      return {};\n    }\n\n    baseProps = baseProps || this.baseProps; // returns the original base props or base state of a given target element\n\n    var getTargetProps = function getTargetProps(identifier, type) {\n      var childName = identifier.childName,\n          target = identifier.target,\n          key = identifier.key;\n      var baseType = type === \"props\" ? baseProps : _this2.state || {};\n      var base = childName === undefined || childName === null || !baseType[childName] ? baseType : baseType[childName];\n      return key === \"parent\" ? base.parent : base[key] && base[key][target];\n    }; // Returns the state object with the mutation caused by a given eventReturn\n    // applied to the appropriate property on the state object\n\n\n    var parseEvent = function parseEvent(eventReturn, eventKey) {\n      var childNames = namespace === \"parent\" ? eventReturn.childName : eventReturn.childName || childType;\n      var target = eventReturn.target || namespace; // returns all eventKeys to modify for a targeted childName\n\n      var getKeys = function getKeys(childName) {\n        if (target === \"parent\") {\n          return \"parent\";\n        }\n\n        if (eventReturn.eventKey === \"all\") {\n          return baseProps[childName] ? _without(Object.keys(baseProps[childName]), \"parent\") : _without(Object.keys(baseProps), \"parent\");\n        } else if (eventReturn.eventKey === undefined && eventKey === \"parent\") {\n          return baseProps[childName] ? Object.keys(baseProps[childName]) : Object.keys(baseProps);\n        }\n\n        return eventReturn.eventKey !== undefined ? eventReturn.eventKey : eventKey;\n      }; // returns the state object with mutated props applied for a single key\n\n\n      var getMutationObject = function getMutationObject(key, childName) {\n        var baseState = _this2.state || {};\n\n        if (!_isFunction(eventReturn.mutation)) {\n          return baseState;\n        }\n\n        var mutationTargetProps = getTargetProps({\n          childName: childName,\n          key: key,\n          target: target\n        }, \"props\");\n        var mutationTargetState = getTargetProps({\n          childName: childName,\n          key: key,\n          target: target\n        }, \"state\");\n        var mutatedProps = eventReturn.mutation(_assign({}, mutationTargetProps, mutationTargetState), baseProps);\n        var childState = baseState[childName] || {};\n\n        var filterState = function filterState(state) {\n          if (state[key] && state[key][target]) {\n            delete state[key][target];\n          }\n\n          if (state[key] && !Object.keys(state[key]).length) {\n            delete state[key];\n          }\n\n          return state;\n        };\n\n        var extendState = function extendState(state) {\n          return target === \"parent\" ? _assign(state, _defineProperty({}, key, _assign(state[key], mutatedProps))) : _assign(state, _defineProperty({}, key, _assign(state[key], _defineProperty({}, target, mutatedProps))));\n        };\n\n        var updateState = function updateState(state) {\n          return mutatedProps ? extendState(state) : filterState(state);\n        };\n\n        return childName !== undefined && childName !== null ? _assign(baseState, _defineProperty({}, childName, updateState(childState))) : updateState(baseState);\n      }; // returns entire mutated state for a given childName\n\n\n      var getReturnByChild = function getReturnByChild(childName) {\n        var mutationKeys = getKeys(childName);\n        return Array.isArray(mutationKeys) ? mutationKeys.reduce(function (memo, key) {\n          return _assign(memo, getMutationObject(key, childName));\n        }, {}) : getMutationObject(mutationKeys, childName);\n      }; // returns an entire mutated state for all children\n\n\n      var allChildNames = childNames === \"all\" ? _without(Object.keys(baseProps), \"parent\") : childNames;\n      return Array.isArray(allChildNames) ? allChildNames.reduce(function (memo, childName) {\n        return _assign(memo, getReturnByChild(childName));\n      }, {}) : getReturnByChild(allChildNames);\n    }; // Parses an array of event returns into a single state mutation\n\n\n    var parseEventReturn = function parseEventReturn(eventReturn, eventKey) {\n      return Array.isArray(eventReturn) ? eventReturn.reduce(function (memo, props) {\n        memo = _assign({}, memo, parseEvent(props, eventKey));\n        return memo;\n      }, {}) : parseEvent(eventReturn, eventKey);\n    };\n\n    var compileCallbacks = function compileCallbacks(eventReturn) {\n      var getCallback = function getCallback(obj) {\n        return _isFunction(obj.callback) && obj.callback;\n      };\n\n      var callbacks = Array.isArray(eventReturn) ? eventReturn.map(function (evtObj) {\n        return getCallback(evtObj);\n      }) : [getCallback(eventReturn)];\n      var callbackArray = callbacks.filter(function (callback) {\n        return callback !== false;\n      });\n      return callbackArray.length ? function () {\n        return callbackArray.forEach(function (callback) {\n          return callback();\n        });\n      } : undefined;\n    }; // A function that calls a particular event handler, parses its return\n    // into a state mutation, and calls setState\n    // eslint-disable-next-line max-params\n\n\n    var onEvent = function onEvent(evt, childProps, eventKey, eventName) {\n      var eventReturn = events[eventName](evt, childProps, eventKey, _this2);\n\n      if (eventReturn) {\n        var callbacks = compileCallbacks(eventReturn);\n\n        _this2.setState(parseEventReturn(eventReturn, eventKey), callbacks);\n      }\n    }; // returns a new events object with enhanced event handlers\n\n\n    return Object.keys(events).reduce(function (memo, event) {\n      memo[event] = onEvent;\n      return memo;\n    }, {});\n  },\n\n  /* Returns a partially applied event handler for a specific target element\n   * This allows event handlers to have access to props controlling each element\n   */\n  getPartialEvents: function getPartialEvents(events, eventKey, childProps) {\n    return events ? Object.keys(events).reduce(function (memo, eventName) {\n      var appliedEvent = function appliedEvent(evt) {\n        return events[eventName](evt, childProps, eventKey, eventName);\n      };\n\n      memo[eventName] = appliedEvent;\n      return memo;\n    }, {}) : {};\n  },\n\n  /* Returns the property of the state object corresponding to event changes for\n   * a particular element\n   */\n  getEventState: function getEventState(eventKey, namespace, childType) {\n    var state = this.state || {};\n\n    if (!childType) {\n      return eventKey === \"parent\" ? state[eventKey] && state[eventKey][namespace] || state[eventKey] : state[eventKey] && state[eventKey][namespace];\n    }\n\n    return state[childType] && state[childType][eventKey] && state[childType][eventKey][namespace];\n  },\n\n  /**\n   * Returns a set of all mutations for shared events\n   *\n   * @param  {Array} mutations an array of mutations objects\n   * @param  {Object} baseProps an object that describes all props for children of VictorySharedEvents\n   * @param  {Object} baseState an object that describes state for children of VictorySharedEvents\n   * @param  {Array} childNames an array of childNames\n   *\n   * @return {Object} a object describing all mutations for VictorySharedEvents\n   */\n  // eslint-disable-next-line max-params\n  getExternalMutationsWithChildren: function getExternalMutationsWithChildren(mutations, baseProps, baseState, childNames) {\n    var _this3 = this;\n\n    baseProps = baseProps || {};\n    baseState = baseState || {};\n    return childNames.reduce(function (memo, childName) {\n      var childState = baseState[childName];\n\n      var mutation = _this3.getExternalMutations(mutations, baseProps[childName], baseState[childName], childName);\n\n      memo[childName] = mutation ? mutation : childState;\n      return _pickBy(memo, function (v) {\n        return !_isEmpty(v);\n      });\n    }, {});\n  },\n\n  /**\n   * Returns a set of all mutations for a component\n   *\n   * @param  {Array} mutations an array of mutations objects\n   * @param  {Object} baseProps a props object (scoped to a childName when used by shared events)\n   * @param  {Object} baseState a state object (scoped to a childName when used by shared events)\n   * @param  {String} childName an optional childName\n   *\n   * @return {Object} a object describing mutations for a given component\n   */\n  // eslint-disable-next-line max-params\n  getExternalMutations: function getExternalMutations(mutations, baseProps, baseState, childName) {\n    var _this4 = this;\n\n    baseProps = baseProps || {};\n    baseState = baseState || {};\n    var eventKeys = Object.keys(baseProps);\n    return eventKeys.reduce(function (memo, eventKey) {\n      var keyState = baseState[eventKey] || {};\n      var keyProps = baseProps[eventKey] || {};\n\n      if (eventKey === \"parent\") {\n        var identifier = {\n          eventKey: eventKey,\n          target: \"parent\"\n        };\n\n        var mutation = _this4.getExternalMutation(mutations, keyProps, keyState, identifier);\n\n        memo[eventKey] = mutation !== undefined ? _assign({}, keyState, mutation) : keyState;\n      } else {\n        // use keys from both state and props so that elements not intially included in baseProps\n        // will be used. (i.e. labels)\n        var targets = _uniq(Object.keys(keyProps).concat(Object.keys(keyState)));\n\n        memo[eventKey] = targets.reduce(function (m, target) {\n          var identifier = {\n            eventKey: eventKey,\n            target: target,\n            childName: childName\n          };\n\n          var mutation = _this4.getExternalMutation(mutations, keyProps[target], keyState[target], identifier);\n\n          m[target] = mutation !== undefined ? _assign({}, keyState[target], mutation) : keyState[target];\n          return _pickBy(m, function (v) {\n            return !_isEmpty(v);\n          });\n        }, {});\n      }\n\n      return _pickBy(memo, function (v) {\n        return !_isEmpty(v);\n      });\n    }, {});\n  },\n\n  /**\n   * Returns a set of mutations for a particular element given scoped baseProps and baseState\n   *\n   * @param  {Array} mutations an array of mutations objects\n   * @param  {Object} baseProps a props object (scoped the element specified by the identifier)\n   * @param  {Object} baseState a state object (scoped the element specified by the identifier)\n   * @param  {Object} identifier { eventKey, target, childName }\n   *\n   * @return {Object | undefined} a object describing mutations for a given element, or undefined\n   */\n  // eslint-disable-next-line max-params\n  getExternalMutation: function getExternalMutation(mutations, baseProps, baseState, identifier) {\n    var filterMutations = function filterMutations(mutation, type) {\n      if (typeof mutation[type] === \"string\") {\n        return mutation[type] === \"all\" || mutation[type] === identifier[type];\n      } else if (Array.isArray(mutation[type])) {\n        // coerce arrays to strings before matching\n        var stringArray = mutation[type].map(function (m) {\n          return \"\".concat(m);\n        });\n        return _includes(stringArray, identifier[type]);\n      } else {\n        return false;\n      }\n    };\n\n    mutations = Array.isArray(mutations) ? mutations : [mutations];\n    var scopedMutations = mutations;\n\n    if (identifier.childName) {\n      scopedMutations = mutations.filter(function (m) {\n        return filterMutations(m, \"childName\");\n      });\n    } // find any mutation objects that match the target\n\n\n    var targetMutations = scopedMutations.filter(function (m) {\n      return filterMutations(m, \"target\");\n    });\n\n    if (_isEmpty(targetMutations)) {\n      return undefined;\n    }\n\n    var keyMutations = targetMutations.filter(function (m) {\n      return filterMutations(m, \"eventKey\");\n    });\n\n    if (_isEmpty(keyMutations)) {\n      return undefined;\n    }\n\n    return keyMutations.reduce(function (memo, curr) {\n      var mutationFunction = curr && _isFunction(curr.mutation) ? curr.mutation : function () {\n        return undefined;\n      };\n      var currentMutation = mutationFunction(_assign({}, baseProps, baseState));\n      return _assign({}, memo, currentMutation);\n    }, {});\n  },\n\n  /* Returns an array of defaultEvents from sub-components of a given component.\n   * i.e. any static `defaultEvents` on `labelComponent` will be returned\n   */\n  getComponentEvents: function getComponentEvents(props, components) {\n    var events = Array.isArray(components) && components.reduce(function (memo, componentName) {\n      var _memo;\n\n      var component = props[componentName];\n      var defaultEvents = component && component.type && component.type.defaultEvents;\n      var componentEvents = _isFunction(defaultEvents) ? defaultEvents(component.props) : defaultEvents;\n      memo = Array.isArray(componentEvents) ? (_memo = memo).concat.apply(_memo, _toConsumableArray(componentEvents)) : memo;\n      return memo;\n    }, []);\n    return events && events.length ? events : undefined;\n  }\n};","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/node_modules/victory-core/es/victory-util/events.js"],"names":["_includes","_uniq","_pickBy","_without","_isFunction","_isEmpty","_assign","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","prototype","toString","call","Array","from","isArray","i","arr2","length","getEvents","props","target","eventKey","getScopedEvents","_this","getEventsByTarget","events","getSelectedEvents","targetEvents","reduce","memo","event","undefined","matchesTarget","concat","filter","targetKeys","useKey","some","k","selectedEvents","eventHandlers","getAllEvents","componentEvents","_this$componentEvents","apply","allEvents","ownEvents","sharedEvents","getSharedEvents","namespace","childType","baseProps","_this2","getTargetProps","identifier","type","childName","baseType","state","base","parent","parseEvent","eventReturn","childNames","getKeys","keys","getMutationObject","baseState","mutation","mutationTargetProps","mutationTargetState","mutatedProps","childState","filterState","extendState","updateState","getReturnByChild","mutationKeys","allChildNames","parseEventReturn","compileCallbacks","getCallback","callback","callbacks","map","evtObj","callbackArray","forEach","onEvent","evt","childProps","eventName","setState","getPartialEvents","appliedEvent","getEventState","getExternalMutationsWithChildren","mutations","_this3","getExternalMutations","v","_this4","eventKeys","keyState","keyProps","getExternalMutation","targets","m","filterMutations","stringArray","scopedMutations","targetMutations","keyMutations","curr","mutationFunction","currentMutation","getComponentEvents","components","componentName","_memo","component","defaultEvents"],"mappings":"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","sourcesContent":["import _includes from \"lodash/includes\";\nimport _uniq from \"lodash/uniq\";\nimport _pickBy from \"lodash/pickBy\";\nimport _without from \"lodash/without\";\nimport _isFunction from \"lodash/isFunction\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _assign from \"lodash/assign\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nexport default {\n  /* Returns all own and shared events that should be attached to a single target element,\n   * i.e. an individual bar specified by target: \"data\", eventKey: [index].\n   * Returned events are scoped to the appropriate state. Either that of the component itself\n   * (i.e. VictoryBar) in the case of own events, or that of the parent component\n   * (i.e. VictoryChart) in the case of shared events\n   */\n  // eslint-disable-next-line max-params\n  getEvents: function (props, target, eventKey, getScopedEvents) {\n    var _this = this;\n\n    // Returns all events that apply to a particular target element\n    var getEventsByTarget = function (events) {\n      var getSelectedEvents = function () {\n        var targetEvents = events.reduce(function (memo, event) {\n          if (event.target !== undefined) {\n            var matchesTarget = Array.isArray(event.target) ? _includes(event.target, target) : \"\".concat(event.target) === \"\".concat(target);\n            return matchesTarget ? memo.concat(event) : memo;\n          }\n\n          return memo.concat(event);\n        }, []);\n\n        if (eventKey !== undefined && target !== \"parent\") {\n          return targetEvents.filter(function (obj) {\n            var targetKeys = obj.eventKey;\n\n            var useKey = function (key) {\n              return key ? \"\".concat(key) === \"\".concat(eventKey) : true;\n            };\n\n            return Array.isArray(targetKeys) ? targetKeys.some(function (k) {\n              return useKey(k);\n            }) : useKey(targetKeys);\n          });\n        }\n\n        return targetEvents;\n      };\n\n      var selectedEvents = getSelectedEvents();\n      return Array.isArray(selectedEvents) && selectedEvents.reduce(function (memo, event) {\n        return event ? _assign(memo, event.eventHandlers) : memo;\n      }, {});\n    };\n    /* Returns all events from props and defaultEvents from components. Events handlers\n     * specified in props will override handlers for the same event if they are also\n     * specified in defaultEvents of a sub-component\n     */\n\n\n    var getAllEvents = function () {\n      if (Array.isArray(_this.componentEvents)) {\n        var _this$componentEvents;\n\n        return Array.isArray(props.events) ? (_this$componentEvents = _this.componentEvents).concat.apply(_this$componentEvents, _toConsumableArray(props.events)) : _this.componentEvents;\n      }\n\n      return props.events;\n    };\n\n    var allEvents = getAllEvents();\n    var ownEvents = allEvents && _isFunction(getScopedEvents) ? getScopedEvents(getEventsByTarget(allEvents), target) : undefined;\n\n    if (!props.sharedEvents) {\n      return ownEvents;\n    }\n\n    var getSharedEvents = props.sharedEvents.getEvents;\n    var sharedEvents = props.sharedEvents.events && getSharedEvents(getEventsByTarget(props.sharedEvents.events), target);\n    return _assign({}, sharedEvents, ownEvents);\n  },\n\n  /* Returns a modified events object where each event handler is replaced by a new\n   * function that calls the original handler and then calls setState with the return\n   * of the original event handler assigned to state property that maps to the target\n   * element.\n   */\n  // eslint-disable-next-line max-params\n  getScopedEvents: function (events, namespace, childType, baseProps) {\n    var _this2 = this;\n\n    if (_isEmpty(events)) {\n      return {};\n    }\n\n    baseProps = baseProps || this.baseProps; // returns the original base props or base state of a given target element\n\n    var getTargetProps = function (identifier, type) {\n      var childName = identifier.childName,\n          target = identifier.target,\n          key = identifier.key;\n      var baseType = type === \"props\" ? baseProps : _this2.state || {};\n      var base = childName === undefined || childName === null || !baseType[childName] ? baseType : baseType[childName];\n      return key === \"parent\" ? base.parent : base[key] && base[key][target];\n    }; // Returns the state object with the mutation caused by a given eventReturn\n    // applied to the appropriate property on the state object\n\n\n    var parseEvent = function (eventReturn, eventKey) {\n      var childNames = namespace === \"parent\" ? eventReturn.childName : eventReturn.childName || childType;\n      var target = eventReturn.target || namespace; // returns all eventKeys to modify for a targeted childName\n\n      var getKeys = function (childName) {\n        if (target === \"parent\") {\n          return \"parent\";\n        }\n\n        if (eventReturn.eventKey === \"all\") {\n          return baseProps[childName] ? _without(Object.keys(baseProps[childName]), \"parent\") : _without(Object.keys(baseProps), \"parent\");\n        } else if (eventReturn.eventKey === undefined && eventKey === \"parent\") {\n          return baseProps[childName] ? Object.keys(baseProps[childName]) : Object.keys(baseProps);\n        }\n\n        return eventReturn.eventKey !== undefined ? eventReturn.eventKey : eventKey;\n      }; // returns the state object with mutated props applied for a single key\n\n\n      var getMutationObject = function (key, childName) {\n        var baseState = _this2.state || {};\n\n        if (!_isFunction(eventReturn.mutation)) {\n          return baseState;\n        }\n\n        var mutationTargetProps = getTargetProps({\n          childName: childName,\n          key: key,\n          target: target\n        }, \"props\");\n        var mutationTargetState = getTargetProps({\n          childName: childName,\n          key: key,\n          target: target\n        }, \"state\");\n        var mutatedProps = eventReturn.mutation(_assign({}, mutationTargetProps, mutationTargetState), baseProps);\n        var childState = baseState[childName] || {};\n\n        var filterState = function (state) {\n          if (state[key] && state[key][target]) {\n            delete state[key][target];\n          }\n\n          if (state[key] && !Object.keys(state[key]).length) {\n            delete state[key];\n          }\n\n          return state;\n        };\n\n        var extendState = function (state) {\n          return target === \"parent\" ? _assign(state, _defineProperty({}, key, _assign(state[key], mutatedProps))) : _assign(state, _defineProperty({}, key, _assign(state[key], _defineProperty({}, target, mutatedProps))));\n        };\n\n        var updateState = function (state) {\n          return mutatedProps ? extendState(state) : filterState(state);\n        };\n\n        return childName !== undefined && childName !== null ? _assign(baseState, _defineProperty({}, childName, updateState(childState))) : updateState(baseState);\n      }; // returns entire mutated state for a given childName\n\n\n      var getReturnByChild = function (childName) {\n        var mutationKeys = getKeys(childName);\n        return Array.isArray(mutationKeys) ? mutationKeys.reduce(function (memo, key) {\n          return _assign(memo, getMutationObject(key, childName));\n        }, {}) : getMutationObject(mutationKeys, childName);\n      }; // returns an entire mutated state for all children\n\n\n      var allChildNames = childNames === \"all\" ? _without(Object.keys(baseProps), \"parent\") : childNames;\n      return Array.isArray(allChildNames) ? allChildNames.reduce(function (memo, childName) {\n        return _assign(memo, getReturnByChild(childName));\n      }, {}) : getReturnByChild(allChildNames);\n    }; // Parses an array of event returns into a single state mutation\n\n\n    var parseEventReturn = function (eventReturn, eventKey) {\n      return Array.isArray(eventReturn) ? eventReturn.reduce(function (memo, props) {\n        memo = _assign({}, memo, parseEvent(props, eventKey));\n        return memo;\n      }, {}) : parseEvent(eventReturn, eventKey);\n    };\n\n    var compileCallbacks = function (eventReturn) {\n      var getCallback = function (obj) {\n        return _isFunction(obj.callback) && obj.callback;\n      };\n\n      var callbacks = Array.isArray(eventReturn) ? eventReturn.map(function (evtObj) {\n        return getCallback(evtObj);\n      }) : [getCallback(eventReturn)];\n      var callbackArray = callbacks.filter(function (callback) {\n        return callback !== false;\n      });\n      return callbackArray.length ? function () {\n        return callbackArray.forEach(function (callback) {\n          return callback();\n        });\n      } : undefined;\n    }; // A function that calls a particular event handler, parses its return\n    // into a state mutation, and calls setState\n    // eslint-disable-next-line max-params\n\n\n    var onEvent = function (evt, childProps, eventKey, eventName) {\n      var eventReturn = events[eventName](evt, childProps, eventKey, _this2);\n\n      if (eventReturn) {\n        var callbacks = compileCallbacks(eventReturn);\n\n        _this2.setState(parseEventReturn(eventReturn, eventKey), callbacks);\n      }\n    }; // returns a new events object with enhanced event handlers\n\n\n    return Object.keys(events).reduce(function (memo, event) {\n      memo[event] = onEvent;\n      return memo;\n    }, {});\n  },\n\n  /* Returns a partially applied event handler for a specific target element\n   * This allows event handlers to have access to props controlling each element\n   */\n  getPartialEvents: function (events, eventKey, childProps) {\n    return events ? Object.keys(events).reduce(function (memo, eventName) {\n      var appliedEvent = function (evt) {\n        return events[eventName](evt, childProps, eventKey, eventName);\n      };\n\n      memo[eventName] = appliedEvent;\n      return memo;\n    }, {}) : {};\n  },\n\n  /* Returns the property of the state object corresponding to event changes for\n   * a particular element\n   */\n  getEventState: function (eventKey, namespace, childType) {\n    var state = this.state || {};\n\n    if (!childType) {\n      return eventKey === \"parent\" ? state[eventKey] && state[eventKey][namespace] || state[eventKey] : state[eventKey] && state[eventKey][namespace];\n    }\n\n    return state[childType] && state[childType][eventKey] && state[childType][eventKey][namespace];\n  },\n\n  /**\n   * Returns a set of all mutations for shared events\n   *\n   * @param  {Array} mutations an array of mutations objects\n   * @param  {Object} baseProps an object that describes all props for children of VictorySharedEvents\n   * @param  {Object} baseState an object that describes state for children of VictorySharedEvents\n   * @param  {Array} childNames an array of childNames\n   *\n   * @return {Object} a object describing all mutations for VictorySharedEvents\n   */\n  // eslint-disable-next-line max-params\n  getExternalMutationsWithChildren: function (mutations, baseProps, baseState, childNames) {\n    var _this3 = this;\n\n    baseProps = baseProps || {};\n    baseState = baseState || {};\n    return childNames.reduce(function (memo, childName) {\n      var childState = baseState[childName];\n\n      var mutation = _this3.getExternalMutations(mutations, baseProps[childName], baseState[childName], childName);\n\n      memo[childName] = mutation ? mutation : childState;\n      return _pickBy(memo, function (v) {\n        return !_isEmpty(v);\n      });\n    }, {});\n  },\n\n  /**\n   * Returns a set of all mutations for a component\n   *\n   * @param  {Array} mutations an array of mutations objects\n   * @param  {Object} baseProps a props object (scoped to a childName when used by shared events)\n   * @param  {Object} baseState a state object (scoped to a childName when used by shared events)\n   * @param  {String} childName an optional childName\n   *\n   * @return {Object} a object describing mutations for a given component\n   */\n  // eslint-disable-next-line max-params\n  getExternalMutations: function (mutations, baseProps, baseState, childName) {\n    var _this4 = this;\n\n    baseProps = baseProps || {};\n    baseState = baseState || {};\n    var eventKeys = Object.keys(baseProps);\n    return eventKeys.reduce(function (memo, eventKey) {\n      var keyState = baseState[eventKey] || {};\n      var keyProps = baseProps[eventKey] || {};\n\n      if (eventKey === \"parent\") {\n        var identifier = {\n          eventKey: eventKey,\n          target: \"parent\"\n        };\n\n        var mutation = _this4.getExternalMutation(mutations, keyProps, keyState, identifier);\n\n        memo[eventKey] = mutation !== undefined ? _assign({}, keyState, mutation) : keyState;\n      } else {\n        // use keys from both state and props so that elements not intially included in baseProps\n        // will be used. (i.e. labels)\n        var targets = _uniq(Object.keys(keyProps).concat(Object.keys(keyState)));\n\n        memo[eventKey] = targets.reduce(function (m, target) {\n          var identifier = {\n            eventKey: eventKey,\n            target: target,\n            childName: childName\n          };\n\n          var mutation = _this4.getExternalMutation(mutations, keyProps[target], keyState[target], identifier);\n\n          m[target] = mutation !== undefined ? _assign({}, keyState[target], mutation) : keyState[target];\n          return _pickBy(m, function (v) {\n            return !_isEmpty(v);\n          });\n        }, {});\n      }\n\n      return _pickBy(memo, function (v) {\n        return !_isEmpty(v);\n      });\n    }, {});\n  },\n\n  /**\n   * Returns a set of mutations for a particular element given scoped baseProps and baseState\n   *\n   * @param  {Array} mutations an array of mutations objects\n   * @param  {Object} baseProps a props object (scoped the element specified by the identifier)\n   * @param  {Object} baseState a state object (scoped the element specified by the identifier)\n   * @param  {Object} identifier { eventKey, target, childName }\n   *\n   * @return {Object | undefined} a object describing mutations for a given element, or undefined\n   */\n  // eslint-disable-next-line max-params\n  getExternalMutation: function (mutations, baseProps, baseState, identifier) {\n    var filterMutations = function (mutation, type) {\n      if (typeof mutation[type] === \"string\") {\n        return mutation[type] === \"all\" || mutation[type] === identifier[type];\n      } else if (Array.isArray(mutation[type])) {\n        // coerce arrays to strings before matching\n        var stringArray = mutation[type].map(function (m) {\n          return \"\".concat(m);\n        });\n        return _includes(stringArray, identifier[type]);\n      } else {\n        return false;\n      }\n    };\n\n    mutations = Array.isArray(mutations) ? mutations : [mutations];\n    var scopedMutations = mutations;\n\n    if (identifier.childName) {\n      scopedMutations = mutations.filter(function (m) {\n        return filterMutations(m, \"childName\");\n      });\n    } // find any mutation objects that match the target\n\n\n    var targetMutations = scopedMutations.filter(function (m) {\n      return filterMutations(m, \"target\");\n    });\n\n    if (_isEmpty(targetMutations)) {\n      return undefined;\n    }\n\n    var keyMutations = targetMutations.filter(function (m) {\n      return filterMutations(m, \"eventKey\");\n    });\n\n    if (_isEmpty(keyMutations)) {\n      return undefined;\n    }\n\n    return keyMutations.reduce(function (memo, curr) {\n      var mutationFunction = curr && _isFunction(curr.mutation) ? curr.mutation : function () {\n        return undefined;\n      };\n      var currentMutation = mutationFunction(_assign({}, baseProps, baseState));\n      return _assign({}, memo, currentMutation);\n    }, {});\n  },\n\n  /* Returns an array of defaultEvents from sub-components of a given component.\n   * i.e. any static `defaultEvents` on `labelComponent` will be returned\n   */\n  getComponentEvents: function (props, components) {\n    var events = Array.isArray(components) && components.reduce(function (memo, componentName) {\n      var _memo;\n\n      var component = props[componentName];\n      var defaultEvents = component && component.type && component.type.defaultEvents;\n      var componentEvents = _isFunction(defaultEvents) ? defaultEvents(component.props) : defaultEvents;\n      memo = Array.isArray(componentEvents) ? (_memo = memo).concat.apply(_memo, _toConsumableArray(componentEvents)) : memo;\n      return memo;\n    }, []);\n    return events && events.length ? events : undefined;\n  }\n};"]},"metadata":{},"sourceType":"module"}