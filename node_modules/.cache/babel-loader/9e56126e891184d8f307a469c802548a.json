{"ast":null,"code":"// // React\n// import React, { Component, Fragment } from \"react\";\n// // Third part\n// import { Form, Icon, Input, Button, Row, Col, Typography } from \"antd\";\n// import { Link } from \"react-router-dom\";\n// import { login } from \"../../services/userServices\";\n// // custom\n// import \"../../assets/css/LoginForm.css\";\n// const { Title } = Typography;\n// function hasErrors(fieldsError) {\n//   return Object.keys(fieldsError).some(field => fieldsError[field]);\n// }\n// class SignInForm extends Component {\n//   async componentDidMount() {\n//     // To disable submit button at the beginning.\n//     await this.props.form.validateFields();\n//   }\n//   handleSubmit = async e => {\n//     e.preventDefault();\n//     const { history } = this.props;\n//     await this.props.form.validateFields((err, values) => {\n//       if (!err) {\n//         try {\n//           login(values, history);\n//         } catch (error) {\n//           console.log(\"Error\");\n//         }\n//       }\n//     });\n//   };\n//   render() {\n//     const formItemLayout = {\n//       labelCol: {\n//         xs: { span: 24 },\n//         sm: { span: 8 }\n//       },\n//       wrapperCol: {\n//         xs: { span: 24 },\n//         sm: { span: 16 }\n//       }\n//     };\n//     const {\n//       getFieldDecorator,\n//       getFieldsError,\n//       getFieldError,\n//       isFieldTouched\n//     } = this.props.form;\n//     // Only show error after a field is touched.\n//     const usernameError = isFieldTouched(\"email\") && getFieldError(\"email\");\n//     const passwordError =\n//       isFieldTouched(\"password\") && getFieldError(\"password\");\n//     return (\n//       <Fragment>\n//         <div>\n//           <Row gutter={20}>\n//             <Col xs={10} xl={10} md={10}>\n//               <div>\n//                 <img\n//                   alt=\"restaurant\"\n//                   style={{ width: \"100%\" }}\n//                   src=\"https://images.unsplash.com/photo-1537047902294-62a40c20a6ae?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1275&q=80\"\n//                 />\n//               </div>\n//             </Col>\n//             <Col xs={{ span: 10, offset: 2 }} xl={{ span: 10, offset: 3 }}>\n//               <Form\n//                 {...formItemLayout}\n//                 onSubmit={this.handleSubmit}\n//                 className=\"log-form\"\n//               >\n//                 <Title>Welcome Restaurant</Title>\n//                 <Form.Item\n//                   validateStatus={usernameError ? \"error\" : \"\"}\n//                   help={usernameError || \"\"}\n//                 >\n//                   {getFieldDecorator(\"email\", {\n//                     rules: [\n//                       {\n//                         type: \"email\",\n//                         message: \"The input is not valid E-mail!\"\n//                       },\n//                       {\n//                         required: true,\n//                         message: \"Please input your E-mail!\"\n//                       }\n//                     ]\n//                   })(\n//                     <Input\n//                       prefix={\n//                         <Icon\n//                           type=\"user\"\n//                           style={{ color: \"rgba(0,0,0,.25)\" }}\n//                         />\n//                       }\n//                       placeholder=\"Email\"\n//                     />\n//                   )}\n//                 </Form.Item>\n//                 <Form.Item\n//                   validateStatus={passwordError ? \"error\" : \"\"}\n//                   help={passwordError || \"\"}\n//                 >\n//                   {getFieldDecorator(\"password\", {\n//                     rules: [\n//                       {\n//                         required: true,\n//                         message: \"Please input your Password!\"\n//                       }\n//                     ]\n//                   })(\n//                     <Input\n//                       prefix={\n//                         <Icon\n//                           type=\"lock\"\n//                           style={{ color: \"rgba(0,0,0,.25)\" }}\n//                         />\n//                       }\n//                       type=\"password\"\n//                       placeholder=\"Password\"\n//                     />\n//                   )}\n//                 </Form.Item>\n//                 <Form.Item>\n//                   <div style={{ textAlign: \"center\" }}>\n//                     <Button\n//                       type=\"primary\"\n//                       block\n//                       htmlType=\"submit\"\n//                       disabled={hasErrors(getFieldsError())}\n//                     >\n//                       Log in\n//                     </Button>\n//                   </div>\n//                 </Form.Item>\n//                 <Link to=\"/register\">\n//                   <p> or Register</p>\n//                 </Link>\n//               </Form>\n//             </Col>\n//           </Row>\n//         </div>\n//       </Fragment>\n//     );\n//   }\n// }\n// const WrapperLoginForm = Form.create({ name: \"login\" })(SignInForm);\n// export default WrapperLoginForm;","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/LoginForm/loginForm.jsx"],"names":[],"mappingssourcesContent":["// // React\n// import React, { Component, Fragment } from \"react\";\n\n// // Third part\n// import { Form, Icon, Input, Button, Row, Col, Typography } from \"antd\";\n// import { Link } from \"react-router-dom\";\n// import { login } from \"../../services/userServices\";\n// // custom\n// import \"../../assets/css/LoginForm.css\";\n\n// const { Title } = Typography;\n\n// function hasErrors(fieldsError) {\n//   return Object.keys(fieldsError).some(field => fieldsError[field]);\n// }\n\n// class SignInForm extends Component {\n//   async componentDidMount() {\n//     // To disable submit button at the beginning.\n//     await this.props.form.validateFields();\n//   }\n\n//   handleSubmit = async e => {\n//     e.preventDefault();\n//     const { history } = this.props;\n\n//     await this.props.form.validateFields((err, values) => {\n//       if (!err) {\n//         try {\n//           login(values, history);\n//         } catch (error) {\n//           console.log(\"Error\");\n//         }\n//       }\n//     });\n//   };\n//   render() {\n//     const formItemLayout = {\n//       labelCol: {\n//         xs: { span: 24 },\n//         sm: { span: 8 }\n//       },\n//       wrapperCol: {\n//         xs: { span: 24 },\n//         sm: { span: 16 }\n//       }\n//     };\n//     const {\n//       getFieldDecorator,\n//       getFieldsError,\n//       getFieldError,\n//       isFieldTouched\n//     } = this.props.form;\n\n//     // Only show error after a field is touched.\n//     const usernameError = isFieldTouched(\"email\") && getFieldError(\"email\");\n//     const passwordError =\n//       isFieldTouched(\"password\") && getFieldError(\"password\");\n\n//     return (\n//       <Fragment>\n//         <div>\n//           <Row gutter={20}>\n//             <Col xs={10} xl={10} md={10}>\n//               <div>\n//                 <img\n//                   alt=\"restaurant\"\n//                   style={{ width: \"100%\" }}\n//                   src=\"https://images.unsplash.com/photo-1537047902294-62a40c20a6ae?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1275&q=80\"\n//                 />\n//               </div>\n//             </Col>\n//             <Col xs={{ span: 10, offset: 2 }} xl={{ span: 10, offset: 3 }}>\n//               <Form\n//                 {...formItemLayout}\n//                 onSubmit={this.handleSubmit}\n//                 className=\"log-form\"\n//               >\n//                 <Title>Welcome Restaurant</Title>\n//                 <Form.Item\n//                   validateStatus={usernameError ? \"error\" : \"\"}\n//                   help={usernameError || \"\"}\n//                 >\n//                   {getFieldDecorator(\"email\", {\n//                     rules: [\n//                       {\n//                         type: \"email\",\n//                         message: \"The input is not valid E-mail!\"\n//                       },\n//                       {\n//                         required: true,\n//                         message: \"Please input your E-mail!\"\n//                       }\n//                     ]\n//                   })(\n//                     <Input\n//                       prefix={\n//                         <Icon\n//                           type=\"user\"\n//                           style={{ color: \"rgba(0,0,0,.25)\" }}\n//                         />\n//                       }\n//                       placeholder=\"Email\"\n//                     />\n//                   )}\n//                 </Form.Item>\n\n//                 <Form.Item\n//                   validateStatus={passwordError ? \"error\" : \"\"}\n//                   help={passwordError || \"\"}\n//                 >\n//                   {getFieldDecorator(\"password\", {\n//                     rules: [\n//                       {\n//                         required: true,\n//                         message: \"Please input your Password!\"\n//                       }\n//                     ]\n//                   })(\n//                     <Input\n//                       prefix={\n//                         <Icon\n//                           type=\"lock\"\n//                           style={{ color: \"rgba(0,0,0,.25)\" }}\n//                         />\n//                       }\n//                       type=\"password\"\n//                       placeholder=\"Password\"\n//                     />\n//                   )}\n//                 </Form.Item>\n\n//                 <Form.Item>\n//                   <div style={{ textAlign: \"center\" }}>\n//                     <Button\n//                       type=\"primary\"\n//                       block\n//                       htmlType=\"submit\"\n//                       disabled={hasErrors(getFieldsError())}\n//                     >\n//                       Log in\n//                     </Button>\n//                   </div>\n//                 </Form.Item>\n\n//                 <Link to=\"/register\">\n//                   <p> or Register</p>\n//                 </Link>\n//               </Form>\n//             </Col>\n//           </Row>\n//         </div>\n//       </Fragment>\n//     );\n//   }\n// }\n\n// const WrapperLoginForm = Form.create({ name: \"login\" })(SignInForm);\n// export default WrapperLoginForm;\n"]},"metadata":{},"sourceType":"module"}