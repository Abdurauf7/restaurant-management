{"ast":null,"code":"const column = [// phone_number,\n// work_position,\n// age,\n// salary,\n// email,\n// date\n{\n  title: \"First Name\",\n  dataIndex: \"first_name\",\n  onFilter: (value, record) => record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : false // filters: [\n  //   {\n  //     text: \"Ms\",\n  //     value: \"Ms\"\n  //   }\n  // ],\n  // filterMultiple: false,\n  // onFilter: (value, record) => record.first_name.indexOf(value) === 0,\n  // sorter: (a, b) => a.first_name.length - b.first_name.length,\n  // sortDirections: [\"descend\", \"ascend\"]\n\n}, {\n  title: \"Last Name\",\n  dataIndex: \"last_name\",\n  onFilter: (value, record) => record.last_name.indexOf(value) === 0,\n  sorter: (a, b) => a.last_name.length - b.last_name.length,\n  sortDirections: [\"descend\", \"ascend\"]\n}, {\n  title: \"Gender\",\n  dataIndex: \"gender\",\n  filters: [{\n    text: \"Female\",\n    value: \"Female\"\n  }, {\n    text: \"Male\",\n    value: \"Male\"\n  }],\n  filterMultiple: false,\n  onFilter: (value, record) => record.gender.indexOf(value) === 0 // sorter: (a, b) => a.gender.length - b.gender.length,\n  // sortDirections: [\"descend\"]\n\n}, {\n  title: \"Age\",\n  dataIndex: \"age\",\n  // defaultSortOrder: \"descend\",\n  sorter: (a, b) => a.age - b.age,\n  sortDirections: [\"ascend\"]\n}, {\n  title: \"Address\",\n  dataIndex: \"address\",\n  filters: [{\n    text: \"China\",\n    value: \"China\"\n  }, {\n    text: \"Russian\",\n    value: \"Russian\"\n  }],\n  filterMultiple: false,\n  onFilter: (value, record) => record.address.indexOf(value) === 0,\n  sorter: (a, b) => a.address.length - b.address.length,\n  sortDirections: [\"descend\", \"ascend\"]\n}, {\n  title: \"Phone\",\n  dataIndex: \"phone_number\",\n  defaultSortOrder: \"descend\",\n  sorter: (a, b) => a.phone_number.length - b.phone_number.length,\n  sortDirections: [\"descend\", \"ascend\"]\n}];\nexport { column };","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/Admin/components/PersonalComponent/components/column.jsx"],"names":["column","title","dataIndex","onFilter","value","record","toString","toLowerCase","includes","last_name","indexOf","sorter","a","b","length","sortDirections","filters","text","filterMultiple","gender","age","address","defaultSortOrder","phone_number"],"mappings":"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","sourcesContent":["const column = [\n  // phone_number,\n  // work_position,\n  // age,\n  // salary,\n  // email,\n  // date\n  {\n    title: \"First Name\",\n    dataIndex: \"first_name\",\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : false\n    // filters: [\n    //   {\n    //     text: \"Ms\",\n    //     value: \"Ms\"\n    //   }\n    // ],\n    // filterMultiple: false,\n    // onFilter: (value, record) => record.first_name.indexOf(value) === 0,\n    // sorter: (a, b) => a.first_name.length - b.first_name.length,\n    // sortDirections: [\"descend\", \"ascend\"]\n  },\n  {\n    title: \"Last Name\",\n    dataIndex: \"last_name\",\n    onFilter: (value, record) => record.last_name.indexOf(value) === 0,\n    sorter: (a, b) => a.last_name.length - b.last_name.length,\n    sortDirections: [\"descend\", \"ascend\"]\n  },\n  {\n    title: \"Gender\",\n    dataIndex: \"gender\",\n    filters: [\n      {\n        text: \"Female\",\n        value: \"Female\"\n      },\n      {\n        text: \"Male\",\n        value: \"Male\"\n      }\n    ],\n    filterMultiple: false,\n    onFilter: (value, record) => record.gender.indexOf(value) === 0\n    // sorter: (a, b) => a.gender.length - b.gender.length,\n    // sortDirections: [\"descend\"]\n  },\n  {\n    title: \"Age\",\n    dataIndex: \"age\",\n    // defaultSortOrder: \"descend\",\n    sorter: (a, b) => a.age - b.age,\n    sortDirections: [\"ascend\"]\n  },\n  {\n    title: \"Address\",\n    dataIndex: \"address\",\n    filters: [\n      {\n        text: \"China\",\n        value: \"China\"\n      },\n      {\n        text: \"Russian\",\n        value: \"Russian\"\n      }\n    ],\n    filterMultiple: false,\n    onFilter: (value, record) => record.address.indexOf(value) === 0,\n    sorter: (a, b) => a.address.length - b.address.length,\n    sortDirections: [\"descend\", \"ascend\"]\n  },\n  {\n    title: \"Phone\",\n    dataIndex: \"phone_number\",\n    defaultSortOrder: \"descend\",\n    sorter: (a, b) => a.phone_number.length - b.phone_number.length,\n    sortDirections: [\"descend\", \"ascend\"]\n  }\n];\n\nexport { column };\n"]},"metadata":{},"sourceType":"module"}