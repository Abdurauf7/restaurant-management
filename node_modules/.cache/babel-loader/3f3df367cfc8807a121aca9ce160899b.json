{"ast":null,"code":"import React from \"react\";\n\nconst Column = () => {\n  const Col = () => {\n    const columns = [{\n      title: \"Name\",\n      dataIndex: \"name\",\n      filters: [{\n        text: \"Joe\",\n        value: \"Joe\"\n      }, {\n        text: \"Jim\",\n        value: \"Jim\"\n      }, {\n        text: \"Submenu\",\n        value: \"Submenu\",\n        children: [{\n          text: \"Green\",\n          value: \"Green\"\n        }, {\n          text: \"Black\",\n          value: \"Black\"\n        }]\n      }],\n      // specify the condition of filtering result\n      // here is that finding the name started with `value`\n      onFilter: (value, record) => record.name.indexOf(value) === 0,\n      sorter: (a, b) => a.name.length - b.name.length,\n      sortDirections: [\"descend\"]\n    }, {\n      title: \"Age\",\n      dataIndex: \"age\",\n      defaultSortOrder: \"descend\",\n      sorter: (a, b) => a.age - b.age\n    }, {\n      title: \"Address\",\n      dataIndex: \"address\",\n      filters: [{\n        text: \"London\",\n        value: \"London\"\n      }, {\n        text: \"New York\",\n        value: \"New York\"\n      }],\n      filterMultiple: false,\n      onFilter: (value, record) => record.address.indexOf(value) === 0,\n      sorter: (a, b) => a.address.length - b.address.length,\n      sortDirections: [\"descend\", \"ascend\"]\n    }];\n  };\n\n  return Col();\n};\n\nconsole.log(Col());\nexport default Column;","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/Admin/components/PersonalComponent/components/column.jsx"],"names":["React","Column","Col","columns","title","dataIndex","filters","text","value","children","onFilter","record","name","indexOf","sorter","a","b","length","sortDirections","defaultSortOrder","age","filterMultiple","address","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,GAAG,GAAG,MAAM;AAChB,UAAMC,OAAO,GAAG,CACd;AACEC,MAAAA,KAAK,EAAE,MADT;AAEEC,MAAAA,SAAS,EAAE,MAFb;AAGEC,MAAAA,OAAO,EAAE,CACP;AACEC,QAAAA,IAAI,EAAE,KADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OADO,EAKP;AACED,QAAAA,IAAI,EAAE,KADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OALO,EASP;AACED,QAAAA,IAAI,EAAE,SADR;AAEEC,QAAAA,KAAK,EAAE,SAFT;AAGEC,QAAAA,QAAQ,EAAE,CACR;AACEF,UAAAA,IAAI,EAAE,OADR;AAEEC,UAAAA,KAAK,EAAE;AAFT,SADQ,EAKR;AACED,UAAAA,IAAI,EAAE,OADR;AAEEC,UAAAA,KAAK,EAAE;AAFT,SALQ;AAHZ,OATO,CAHX;AA2BE;AACA;AACAE,MAAAA,QAAQ,EAAE,CAACF,KAAD,EAAQG,MAAR,KAAmBA,MAAM,CAACC,IAAP,CAAYC,OAAZ,CAAoBL,KAApB,MAA+B,CA7B9D;AA8BEM,MAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACH,IAAF,CAAOK,MAAP,GAAgBD,CAAC,CAACJ,IAAF,CAAOK,MA9B3C;AA+BEC,MAAAA,cAAc,EAAE,CAAC,SAAD;AA/BlB,KADc,EAkCd;AACEd,MAAAA,KAAK,EAAE,KADT;AAEEC,MAAAA,SAAS,EAAE,KAFb;AAGEc,MAAAA,gBAAgB,EAAE,SAHpB;AAIEL,MAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACK,GAAF,GAAQJ,CAAC,CAACI;AAJ9B,KAlCc,EAwCd;AACEhB,MAAAA,KAAK,EAAE,SADT;AAEEC,MAAAA,SAAS,EAAE,SAFb;AAGEC,MAAAA,OAAO,EAAE,CACP;AACEC,QAAAA,IAAI,EAAE,QADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OADO,EAKP;AACED,QAAAA,IAAI,EAAE,UADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OALO,CAHX;AAaEa,MAAAA,cAAc,EAAE,KAblB;AAcEX,MAAAA,QAAQ,EAAE,CAACF,KAAD,EAAQG,MAAR,KAAmBA,MAAM,CAACW,OAAP,CAAeT,OAAf,CAAuBL,KAAvB,MAAkC,CAdjE;AAeEM,MAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACO,OAAF,CAAUL,MAAV,GAAmBD,CAAC,CAACM,OAAF,CAAUL,MAfjD;AAgBEC,MAAAA,cAAc,EAAE,CAAC,SAAD,EAAY,QAAZ;AAhBlB,KAxCc,CAAhB;AA2DD,GA5DD;;AA6DA,SAAOhB,GAAG,EAAV;AACD,CA/DD;;AAgEAqB,OAAO,CAACC,GAAR,CAAYtB,GAAG,EAAf;AAEA,eAAeD,MAAf","sourcesContent":["import React from \"react\";\nconst Column = () => {\n  const Col = () => {\n    const columns = [\n      {\n        title: \"Name\",\n        dataIndex: \"name\",\n        filters: [\n          {\n            text: \"Joe\",\n            value: \"Joe\"\n          },\n          {\n            text: \"Jim\",\n            value: \"Jim\"\n          },\n          {\n            text: \"Submenu\",\n            value: \"Submenu\",\n            children: [\n              {\n                text: \"Green\",\n                value: \"Green\"\n              },\n              {\n                text: \"Black\",\n                value: \"Black\"\n              }\n            ]\n          }\n        ],\n        // specify the condition of filtering result\n        // here is that finding the name started with `value`\n        onFilter: (value, record) => record.name.indexOf(value) === 0,\n        sorter: (a, b) => a.name.length - b.name.length,\n        sortDirections: [\"descend\"]\n      },\n      {\n        title: \"Age\",\n        dataIndex: \"age\",\n        defaultSortOrder: \"descend\",\n        sorter: (a, b) => a.age - b.age\n      },\n      {\n        title: \"Address\",\n        dataIndex: \"address\",\n        filters: [\n          {\n            text: \"London\",\n            value: \"London\"\n          },\n          {\n            text: \"New York\",\n            value: \"New York\"\n          }\n        ],\n        filterMultiple: false,\n        onFilter: (value, record) => record.address.indexOf(value) === 0,\n        sorter: (a, b) => a.address.length - b.address.length,\n        sortDirections: [\"descend\", \"ascend\"]\n      }\n    ];\n  };\n  return Col();\n};\nconsole.log(Col());\n\nexport default Column;\n"]},"metadata":{},"sourceType":"module"}