{"ast":null,"code":"// React\nimport React, { useEffect, useState } from \"react\"; // third part\n\nimport { Modal, Form, Select, Input, TimePicker } from \"antd\"; // Services\n\nimport { getTable } from \"../../../../../services/tableServices\";\nimport { getDishes } from \"../../../../../services/dishServices\"; // custom\n\nimport { openNotification } from \"../../../../custom\";\nconst layout = {\n  labelCol: {\n    span: 5\n  },\n  wrapperCol: {\n    span: 16\n  }\n}; // const EditModal = ({ editableData, visible, handleUpdate, onClose }) => {\n//   const [form] = Form.useForm();\n//   const [tableNumber, setTableNumber] = useState([]);\n//   const [orders, setOrders] = useState([]);\n//   const fetchTableNumber = async () => {\n//     try {\n//       await getTable()\n//         .then((res) => res.data)\n//         .then((data) => setTableNumber(data));\n//     } catch (error) {\n//       openNotification(\"error\", \"Cant get tables\", \"Check connection\");\n//     }\n//   };\n//   const fetchOrders = async () => {\n//     try {\n//       await getDishes()\n//         .then((res) => res.data)\n//         .then((data) => setOrders(data));\n//     } catch (error) {}\n//   };\n//   useEffect(() => {\n//     fetchTableNumber();\n//     fetchOrders();\n//   }, []);\n//   const handleChange = ({ currentTarget }) => {\n//     currentTarget[name] = currentTarget.value;\n//   };\n//   return (\n//     <Modal\n//       closable={false}\n//       visible={visible}\n//       okText=\"Edit\"\n//       cancelText=\"Cancel\"\n//       onCancel={onClose}\n//       onOk={() => {\n//         form\n//           .validateFields()\n//           .then((values) => {\n//             form.resetFields();\n//             handleUpdate(values);\n//           })\n//           .catch((info) => {\n//             console.log(\"Validate Failed:\", info);\n//           });\n//       }}\n//     >\n//       <Select\n//         value={editableData.table}\n//         onChange={this.handleChange}\n//         name=\"table\"\n//       >\n//         {tableNumber.map((table) => (\n//           <Select.Option key={table.id} value={table.table_number}>\n//             {table.table_number}\n//           </Select.Option>\n//         ))}\n//       </Select>\n//     </Modal>\n//     //     >\n//     //       <Form\n//     //         {...layout}\n//     //         hideRequiredMark\n//     //         onFinish={handleUpdate}\n//     //         form={form}\n//     //         initialValues={{\n//     //           id: editableData.id,\n//     //           table_number: editableData.table,\n//     //           customer_name: editableData.customer,\n//     //           dish: editableData.ordered_items,\n//     //           price: editableData.price,\n//     //         }}\n//     //       >\n//     //         <Form.Item name=\"id\">\n//     //           <h1>Edit Orders</h1>\n//     //         </Form.Item>\n//     //         <Form.Item\n//     //           label=\"Table Number\"\n//     //           name=\"table_number\"\n//     //           rules={[{ required: true, message: \"Enter Table Number\" }]}\n//     //         >\n//     //           <Select placeholder=\"select table number\">\n//     //             {tableNumber.map((table) => (\n//     //               <Select.Option key={table.id} value={table.table_number}>\n//     //                 {table.table_number}\n//     //               </Select.Option>\n//     //             ))}\n//     //           </Select>\n//     //         </Form.Item>\n//     //         <Form.Item\n//     //           label=\"Customer\"\n//     //           name=\"customer_name\"\n//     //           rules={[{ required: true, message: \"Enter Customer Name\" }]}\n//     //         >\n//     //           <Input placeholder=\"Customer Name\" allowClear />\n//     //         </Form.Item>\n//     //         <Form.Item label=\"Order\" name=\"dish\">\n//     //           <Select placeholder=\"Please select\" mode=\"multiple\">\n//     //             {orders.map((or) => (\n//     //               <Select.Option key={or.id} value={or.name}>\n//     //                 {or.name}\n//     //               </Select.Option>\n//     //             ))}\n//     //           </Select>\n//     //         </Form.Item>\n//     //         <Form.Item label=\"Price\" name=\"price\">\n//     //           <Select placeholder=\"Please select\" mode=\"multiple\">\n//     //             {orders.map((or) => (\n//     //               <Select.Option key={or.id} value={or.name}>\n//     //                 {or.name}-{or.price}¥\n//     //               </Select.Option>\n//     //             ))}\n//     //           </Select>\n//     //         </Form.Item>\n//     //         <Form.Item\n//     //           label=\"Time\"\n//     //           name=\"time\"\n//     //           placeholder=\"select time\"\n//     //           rules={[{ required: true, message: \"Enter ordered time\" }]}\n//     //         >\n//     //           <TimePicker />\n//     //         </Form.Item>\n//     //       </Form>\n//     //     </Modal>\n//     //   );\n//     // };\n\nexport default EditModal;","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/Employee/components/Order/components/editModal.jsx"],"names":["React","useEffect","useState","Modal","Form","Select","Input","TimePicker","getTable","getDishes","openNotification","layout","labelCol","span","wrapperCol","EditModal"],"mappings":"AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CAEA;;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,EAA8BC,KAA9B,EAAqCC,UAArC,QAAuD,MAAvD,C,CAEA;;AACA,SAASC,QAAT,QAAyB,uCAAzB;AACA,SAASC,SAAT,QAA0B,sCAA1B,C,CACA;;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE;AADE,GADG;AAIbC,EAAAA,UAAU,EAAE;AACVD,IAAAA,IAAI,EAAE;AADI;AAJC,CAAfeAAeE,SAAf","sourcesContent":["// React\nimport React, { useEffect, useState } from \"react\";\n\n// third part\nimport { Modal, Form, Select, Input, TimePicker } from \"antd\";\n\n// Services\nimport { getTable } from \"../../../../../services/tableServices\";\nimport { getDishes } from \"../../../../../services/dishServices\";\n// custom\nimport { openNotification } from \"../../../../custom\";\n\nconst layout = {\n  labelCol: {\n    span: 5,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\n// const EditModal = ({ editableData, visible, handleUpdate, onClose }) => {\n//   const [form] = Form.useForm();\n//   const [tableNumber, setTableNumber] = useState([]);\n//   const [orders, setOrders] = useState([]);\n\n//   const fetchTableNumber = async () => {\n//     try {\n//       await getTable()\n//         .then((res) => res.data)\n//         .then((data) => setTableNumber(data));\n//     } catch (error) {\n//       openNotification(\"error\", \"Cant get tables\", \"Check connection\");\n//     }\n//   };\n//   const fetchOrders = async () => {\n//     try {\n//       await getDishes()\n//         .then((res) => res.data)\n//         .then((data) => setOrders(data));\n//     } catch (error) {}\n//   };\n//   useEffect(() => {\n//     fetchTableNumber();\n//     fetchOrders();\n//   }, []);\n\n//   const handleChange = ({ currentTarget }) => {\n//     currentTarget[name] = currentTarget.value;\n//   };\n//   return (\n//     <Modal\n//       closable={false}\n//       visible={visible}\n//       okText=\"Edit\"\n//       cancelText=\"Cancel\"\n//       onCancel={onClose}\n//       onOk={() => {\n//         form\n//           .validateFields()\n//           .then((values) => {\n//             form.resetFields();\n//             handleUpdate(values);\n//           })\n//           .catch((info) => {\n//             console.log(\"Validate Failed:\", info);\n//           });\n//       }}\n//     >\n//       <Select\n//         value={editableData.table}\n//         onChange={this.handleChange}\n//         name=\"table\"\n//       >\n//         {tableNumber.map((table) => (\n//           <Select.Option key={table.id} value={table.table_number}>\n//             {table.table_number}\n//           </Select.Option>\n//         ))}\n//       </Select>\n//     </Modal>\n//     //     >\n//     //       <Form\n//     //         {...layout}\n//     //         hideRequiredMark\n//     //         onFinish={handleUpdate}\n//     //         form={form}\n//     //         initialValues={{\n//     //           id: editableData.id,\n//     //           table_number: editableData.table,\n//     //           customer_name: editableData.customer,\n//     //           dish: editableData.ordered_items,\n//     //           price: editableData.price,\n//     //         }}\n//     //       >\n//     //         <Form.Item name=\"id\">\n//     //           <h1>Edit Orders</h1>\n//     //         </Form.Item>\n//     //         <Form.Item\n//     //           label=\"Table Number\"\n//     //           name=\"table_number\"\n//     //           rules={[{ required: true, message: \"Enter Table Number\" }]}\n//     //         >\n//     //           <Select placeholder=\"select table number\">\n//     //             {tableNumber.map((table) => (\n//     //               <Select.Option key={table.id} value={table.table_number}>\n//     //                 {table.table_number}\n//     //               </Select.Option>\n//     //             ))}\n//     //           </Select>\n//     //         </Form.Item>\n//     //         <Form.Item\n//     //           label=\"Customer\"\n//     //           name=\"customer_name\"\n//     //           rules={[{ required: true, message: \"Enter Customer Name\" }]}\n//     //         >\n//     //           <Input placeholder=\"Customer Name\" allowClear />\n//     //         </Form.Item>\n//     //         <Form.Item label=\"Order\" name=\"dish\">\n//     //           <Select placeholder=\"Please select\" mode=\"multiple\">\n//     //             {orders.map((or) => (\n//     //               <Select.Option key={or.id} value={or.name}>\n//     //                 {or.name}\n//     //               </Select.Option>\n//     //             ))}\n//     //           </Select>\n//     //         </Form.Item>\n//     //         <Form.Item label=\"Price\" name=\"price\">\n//     //           <Select placeholder=\"Please select\" mode=\"multiple\">\n//     //             {orders.map((or) => (\n//     //               <Select.Option key={or.id} value={or.name}>\n//     //                 {or.name}-{or.price}¥\n//     //               </Select.Option>\n//     //             ))}\n//     //           </Select>\n//     //         </Form.Item>\n//     //         <Form.Item\n//     //           label=\"Time\"\n//     //           name=\"time\"\n//     //           placeholder=\"select time\"\n//     //           rules={[{ required: true, message: \"Enter ordered time\" }]}\n//     //         >\n//     //           <TimePicker />\n//     //         </Form.Item>\n//     //       </Form>\n//     //     </Modal>\n//     //   );\n//     // };\n\nexport default EditModal;\n"]},"metadata":{},"sourceType":"module"}