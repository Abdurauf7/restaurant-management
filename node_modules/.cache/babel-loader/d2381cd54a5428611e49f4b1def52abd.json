{"ast":null,"code":"var _jsxFileName = \"/Users/abdurauf/Desktop/\\u6BD5\\u4E1A\\u8BBE\\u8BA1/orginal/restaurant-management-system/plov/src/components/Admin/components/TableRes.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Layout, Table, Button, InputNumber, Input, Form, Row, Col, Select } from \"antd\";\nimport { Resizable } from \"react-resizable\";\nimport \"../../../assets/css/style.css\";\nconst {\n  Option\n} = Select; // for resizing\n\nconst ResizeableTitle = props => {\n  const {\n    onResize,\n    width,\n    ...restProps\n  } = props;\n\n  if (!width) {\n    return React.createElement(\"th\", Object.assign({}, restProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(Resizable, {\n    width: width,\n    height: 0,\n    onResize: onResize,\n    draggableOpts: {\n      enableUserSelectHack: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"th\", Object.assign({}, restProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })));\n}; // for editable\n\n\nconst EditableContext = React.createContext();\n\nclass EditableCell extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getInput = () => {\n      if (this.props.inputType === \"number\") {\n        return React.createElement(InputNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      });\n    };\n\n    this.renderCell = ({\n      getFieldDecorator\n    }) => {\n      const {\n        editing,\n        dataIndex,\n        title,\n        inputType,\n        record,\n        index,\n        children,\n        ...restProps\n      } = this.props;\n      return React.createElement(\"td\", Object.assign({}, restProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), editing ? React.createElement(Form.Item, {\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, getFieldDecorator(dataIndex, {\n        rules: [{\n          required: true,\n          message: `Please Input ${title}!`\n        }],\n        initialValue: record[dataIndex]\n      })(this.getInput())) : children);\n    };\n  }\n\n  render() {\n    return React.createElement(EditableContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.renderCell);\n  }\n\n}\n\nconst {\n  Content\n} = Layout;\n\nclass TableRes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.isEditing = record => record.key === this.state.editingKey;\n\n    this.cancel = () => {\n      this.setState({\n        editingKey: \"\"\n      });\n    };\n\n    this.handleDelete = key => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({\n        dataSource: dataSource.filter(item => item.key !== key)\n      });\n    };\n\n    this.components = {\n      header: {\n        cell: ResizeableTitle\n      },\n      body: {\n        cell: EditableCell\n      }\n    };\n\n    this.handleAdd = () => {\n      const {\n        key,\n        dataSource,\n        number,\n        type,\n        seats\n      } = this.state;\n      const newData = {\n        key: key,\n        number: number,\n        type: type,\n        seats: seats\n      };\n\n      if (name !== \"\" && price !== null && type !== \"\" && age !== null && address !== \"\") {\n        this.setState({\n          dataSource: [...dataSource, newData],\n          key: key + 1\n        });\n      }\n    };\n\n    this.handleResize = index => (e, {\n      size\n    }) => {\n      this.setState(({\n        columns\n      }) => {\n        const nextColumns = [...columns];\n        nextColumns[index] = { ...nextColumns[index],\n          width: size.width\n        };\n        return {\n          columns: nextColumns\n        };\n      });\n    };\n\n    this.state = {\n      columns: [{\n        title: \"Number\",\n        dataIndex: \"number\",\n        editable: true\n      }, {\n        title: \"Type\",\n        dataIndex: \"type\",\n        editable: true\n      }, {\n        title: \"Seats\",\n        dataIndex: \"seats\",\n        editable: true\n      }, {\n        title: \"Action\",\n        dataIndex: \"operation\",\n        render: (text, record) => {\n          const {\n            editingKey\n          } = this.state;\n          const editable = this.isEditing(record);\n          return editable ? React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, React.createElement(EditableContext.Consumer, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, form => React.createElement(Row, {\n            gutter: 20,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, React.createElement(Col, {\n            span: 9,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, React.createElement(Button, {\n            size: \"small\",\n            onClick: () => this.save(form, record.key),\n            style: {\n              width: \"60px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, \"Save\")), React.createElement(Col, {\n            span: 9,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }, React.createElement(Button, {\n            size: \"small\",\n            style: {\n              width: \"70px\"\n            },\n            onClick: () => this.cancel(record.key),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, \"Cancel\"))))) : React.createElement(Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }, React.createElement(Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148\n            },\n            __self: this\n          }, React.createElement(Col, {\n            span: 10,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"danger\",\n            size: \"small\",\n            style: {\n              width: \"60px\"\n            },\n            onClick: () => this.handleDelete(record.key),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150\n            },\n            __self: this\n          }, \"Delete\")), React.createElement(Col, {\n            span: 8,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"primary\",\n            size: \"small\",\n            style: {\n              width: \"60px\"\n            },\n            disabled: editingKey !== \"\",\n            onClick: () => this.edit(record.key),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160\n            },\n            __self: this\n          }, \"Edit\"))));\n        }\n      }],\n      dataSource: [{\n        key: 0,\n        number: 1,\n        type: \"square\",\n        seats: 4\n      }],\n      key: 0,\n      editingKey: \"\",\n      number: \"\",\n      type: \"\",\n      seats: \"\"\n    };\n    this.numberHandleChange = this.numberHandleChange.bind(this);\n    this.typehandleChange = this.typehandleChange.bind(this);\n    this.seatshandleChange = this.seatshandleChange.bind(this);\n  }\n\n  numberHandleChange(number) {\n    this.setState({\n      number: number\n    });\n  }\n\n  typehandleChange(type) {\n    this.setState({\n      type: type\n    });\n  }\n\n  agehandleChange(seats) {\n    this.setState({\n      seats: seats\n    });\n  }\n\n  edit(key) {\n    this.setState({\n      editingKey: key\n    });\n  }\n\n  save(form, key) {\n    form.validateFields((error, row) => {\n      if (error) {\n        return;\n      }\n\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => key === item.key);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item,\n          ...row\n        });\n        this.setState({\n          dataSource: newData,\n          editingKey: \"\"\n        });\n      } else {\n        newData.push(row);\n        this.setState({\n          dataSource: newData,\n          editingKey: \"\"\n        });\n      }\n    });\n  }\n\n  render() {\n    const columns = this.state.columns.map((col, index) => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return { ...col,\n        onHeaderCell: column => ({\n          width: column.width,\n          onResize: this.handleResize(index)\n        }),\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === \"age\" ? \"number\" : \"text\",\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record)\n        })\n      };\n    });\n    const {\n      dataSource\n    } = this.state;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(Content, {\n      style: {\n        margin: \"2em 16px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        background: \"#fff\",\n        padding: 24,\n        minHeight: 280\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(Row, {\n      gutter: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(InputNumber, {\n      placeholder: \"Number\",\n      value: this.state.number,\n      onChange: this.priceHandleChange,\n      style: {\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    })), React.createElement(Col, {\n      span: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(Select, {\n      onChange: this.typehandleChange,\n      defaultValue: \"Select\",\n      style: {\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"square\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, \"square\"), React.createElement(Option, {\n      value: \"round\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"Chef\"))), React.createElement(Col, {\n      span: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(InputNumber, {\n      placeholder: \"age\",\n      value: this.state.age,\n      onChange: this.agehandleChange,\n      style: {\n        width: \"150px\"\n      },\n      max: 11,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    })), React.createElement(Col, {\n      span: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Address\",\n      value: this.state.address,\n      onChange: this.addresshandleChange,\n      allowClear: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    })), React.createElement(Col, {\n      span: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(InputNumber, {\n      style: {\n        width: \"150px\"\n      },\n      placeholder: \"Phone\",\n      value: this.state.phone,\n      onChange: this.phoneHandleChange,\n      max: 11,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    })), React.createElement(Col, {\n      span: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleAdd,\n      type: \"primary\",\n      style: {\n        marginBottom: 16,\n        width: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, \"Add\"))), React.createElement(EditableContext.Provider, {\n      value: this.props.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(Table, {\n      components: this.components,\n      columns: columns,\n      dataSource: dataSource,\n      bordered: true,\n      rowClassName: \"editable-row\",\n      title: () => \"Table Information\",\n      footer: () => \"Footer\",\n      pagination: false,\n      scroll: {\n        y: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst WrappedHorizontalLoginForm = Form.create()(TableRes);\nexport default WrappedHorizontalLoginForm;","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/Admin/components/TableRes.js"],"names":["React","Component","Fragment","Layout","Table","Button","InputNumber","Input","Form","Row","Col","Select","Resizable","Option","ResizeableTitle","props","onResize","width","restProps","enableUserSelectHack","EditableContext","createContext","EditableCell","getInput","inputType","renderCell","getFieldDecorator","editing","dataIndex","title","record","index","children","margin","rules","required","message","initialValue","render","Content","TableRes","constructor","isEditing","key","state","editingKey","cancel","setState","handleDelete","dataSource","filter","item","components","header","cell","body","handleAdd","number","type","seats","newData","name","price","age","address","handleResize","e","size","columns","nextColumns","editable","text","form","save","edit","numberHandleChange","bind","typehandleChange","seatshandleChange","agehandleChange","validateFields","error","row","findIndex","splice","push","map","col","onHeaderCell","column","onCell","background","padding","minHeight","priceHandleChange","addresshandleChange","phone","phoneHandleChange","marginBottom","y","WrappedHorizontalLoginForm","create"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport {\n  Layout,\n  Table,\n  Button,\n  InputNumber,\n  Input,\n  Form,\n  Row,\n  Col,\n  Select\n} from \"antd\";\nimport { Resizable } from \"react-resizable\";\n\nimport \"../../../assets/css/style.css\";\n\nconst { Option } = Select;\n\n// for resizing\nconst ResizeableTitle = props => {\n  const { onResize, width, ...restProps } = props;\n\n  if (!width) {\n    return <th {...restProps} />;\n  }\n\n  return (\n    <Resizable\n      width={width}\n      height={0}\n      onResize={onResize}\n      draggableOpts={{ enableUserSelectHack: false }}\n    >\n      <th {...restProps} />\n    </Resizable>\n  );\n};\n\n// for editable\nconst EditableContext = React.createContext();\n\nclass EditableCell extends React.Component {\n  getInput = () => {\n    if (this.props.inputType === \"number\") {\n      return <InputNumber />;\n    }\n    return <Input />;\n  };\n\n  renderCell = ({ getFieldDecorator }) => {\n    const {\n      editing,\n      dataIndex,\n      title,\n      inputType,\n      record,\n      index,\n      children,\n      ...restProps\n    } = this.props;\n    return (\n      <td {...restProps}>\n        {editing ? (\n          <Form.Item style={{ margin: 0 }}>\n            {getFieldDecorator(dataIndex, {\n              rules: [\n                {\n                  required: true,\n                  message: `Please Input ${title}!`\n                }\n              ],\n              initialValue: record[dataIndex]\n            })(this.getInput())}\n          </Form.Item>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  };\n\n  render() {\n    return (\n      <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\n    );\n  }\n}\n\nconst { Content } = Layout;\nclass TableRes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      columns: [\n        {\n          title: \"Number\",\n          dataIndex: \"number\",\n          editable: true\n        },\n\n        {\n          title: \"Type\",\n          dataIndex: \"type\",\n          editable: true\n        },\n\n        {\n          title: \"Seats\",\n          dataIndex: \"seats\",\n          editable: true\n        },\n        {\n          title: \"Action\",\n          dataIndex: \"operation\",\n          render: (text, record) => {\n            const { editingKey } = this.state;\n            const editable = this.isEditing(record);\n            return editable ? (\n              <span>\n                <EditableContext.Consumer>\n                  {form => (\n                    <Row gutter={20}>\n                      <Col span={9}>\n                        <Button\n                          size=\"small\"\n                          onClick={() => this.save(form, record.key)}\n                          style={{ width: \"60px\" }}\n                        >\n                          Save\n                        </Button>\n                      </Col>\n                      <Col span={9}>\n                        <Button\n                          size=\"small\"\n                          style={{ width: \"70px\" }}\n                          onClick={() => this.cancel(record.key)}\n                        >\n                          Cancel\n                        </Button>\n                      </Col>\n                    </Row>\n                  )}\n                </EditableContext.Consumer>\n              </span>\n            ) : (\n              <Fragment>\n                <Row>\n                  <Col span={10}>\n                    <Button\n                      type=\"danger\"\n                      size=\"small\"\n                      style={{ width: \"60px\" }}\n                      onClick={() => this.handleDelete(record.key)}\n                    >\n                      Delete\n                    </Button>\n                  </Col>\n                  <Col span={8}>\n                    <Button\n                      type=\"primary\"\n                      size=\"small\"\n                      style={{ width: \"60px\" }}\n                      disabled={editingKey !== \"\"}\n                      onClick={() => this.edit(record.key)}\n                    >\n                      Edit\n                    </Button>\n                  </Col>\n                </Row>\n              </Fragment>\n            );\n          }\n        }\n      ],\n\n      dataSource: [\n        {\n          key: 0,\n          number: 1,\n          type: \"square\",\n          seats: 4\n        }\n      ],\n      key: 0,\n      editingKey: \"\",\n      number: \"\",\n      type: \"\",\n      seats: \"\"\n    };\n\n    this.numberHandleChange = this.numberHandleChange.bind(this);\n    this.typehandleChange = this.typehandleChange.bind(this);\n    this.seatshandleChange = this.seatshandleChange.bind(this);\n  }\n\n  numberHandleChange(number) {\n    this.setState({\n      number: number\n    });\n  }\n\n  typehandleChange(type) {\n    this.setState({\n      type: type\n    });\n  }\n  agehandleChange(seats) {\n    this.setState({\n      seats: seats\n    });\n  }\n\n  isEditing = record => record.key === this.state.editingKey;\n\n  cancel = () => {\n    this.setState({ editingKey: \"\" });\n  };\n  edit(key) {\n    this.setState({ editingKey: key });\n  }\n\n  handleDelete = key => {\n    const dataSource = [...this.state.dataSource];\n    this.setState({ dataSource: dataSource.filter(item => item.key !== key) });\n  };\n\n  save(form, key) {\n    form.validateFields((error, row) => {\n      if (error) {\n        return;\n      }\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => key === item.key);\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, {\n          ...item,\n          ...row\n        });\n        this.setState({ dataSource: newData, editingKey: \"\" });\n      } else {\n        newData.push(row);\n        this.setState({ dataSource: newData, editingKey: \"\" });\n      }\n    });\n  }\n  components = {\n    header: {\n      cell: ResizeableTitle\n    },\n    body: {\n      cell: EditableCell\n    }\n  };\n  handleAdd = () => {\n    const { key, dataSource, number, type, seats } = this.state;\n    const newData = {\n      key: key,\n      number: number,\n      type: type,\n      seats: seats\n    };\n    if (\n      name !== \"\" &&\n      price !== null &&\n      type !== \"\" &&\n      age !== null &&\n      address !== \"\"\n    ) {\n      this.setState({\n        dataSource: [...dataSource, newData],\n        key: key + 1\n      });\n    }\n  };\n\n  handleResize = index => (e, { size }) => {\n    this.setState(({ columns }) => {\n      const nextColumns = [...columns];\n      nextColumns[index] = {\n        ...nextColumns[index],\n        width: size.width\n      };\n      return { columns: nextColumns };\n    });\n  };\n\n  render() {\n    const columns = this.state.columns.map((col, index) => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onHeaderCell: column => ({\n          width: column.width,\n          onResize: this.handleResize(index)\n        }),\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === \"age\" ? \"number\" : \"text\",\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record)\n        })\n      };\n    });\n    const { dataSource } = this.state;\n    return (\n      <Fragment>\n        <Content style={{ margin: \"2em 16px\" }}>\n          <div style={{ background: \"#fff\", padding: 24, minHeight: 280 }}>\n            <Row gutter={20}>\n              <Col span={3}>\n                <InputNumber\n                  placeholder=\"Number\"\n                  value={this.state.number}\n                  onChange={this.priceHandleChange}\n                  style={{ width: \"150px\" }}\n                />\n              </Col>\n              <Col span={3}>\n                <Select\n                  onChange={this.typehandleChange}\n                  defaultValue=\"Select\"\n                  style={{ width: \"150px\" }}\n                >\n                  <Option value=\"square\">square</Option>\n                  <Option value=\"round\">Chef</Option>\n                </Select>\n              </Col>\n              <Col span={3}>\n                <InputNumber\n                  placeholder=\"age\"\n                  value={this.state.age}\n                  onChange={this.agehandleChange}\n                  style={{ width: \"150px\" }}\n                  max={11}\n                />\n              </Col>\n              <Col span={3}>\n                <Input\n                  placeholder=\"Address\"\n                  value={this.state.address}\n                  onChange={this.addresshandleChange}\n                  allowClear\n                />\n              </Col>\n              <Col span={3}>\n                <InputNumber\n                  style={{ width: \"150px\" }}\n                  placeholder=\"Phone\"\n                  value={this.state.phone}\n                  onChange={this.phoneHandleChange}\n                  max={11}\n                />\n              </Col>\n\n              <Col span={3}>\n                <Button\n                  onClick={this.handleAdd}\n                  type=\"primary\"\n                  style={{ marginBottom: 16, width: \"100px\" }}\n                >\n                  Add\n                </Button>\n              </Col>\n            </Row>\n            <EditableContext.Provider value={this.props.form}>\n              <Table\n                components={this.components}\n                columns={columns}\n                dataSource={dataSource}\n                bordered\n                rowClassName=\"editable-row\"\n                title={() => \"Table Information\"}\n                footer={() => \"Footer\"}\n                pagination={false}\n                scroll={{ y: 500 }}\n              />\n            </EditableContext.Provider>\n          </div>\n        </Content>\n      </Fragment>\n    );\n  }\n}\n\nconst WrappedHorizontalLoginForm = Form.create()(TableRes);\nexport default WrappedHorizontalLoginForm;\n"]},"metadata":{},"sourceType":"module"}