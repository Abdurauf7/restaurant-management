{"ast":null,"code":"var _jsxFileName = \"/Users/abdurauf/Desktop/\\u6BD5\\u4E1A\\u8BBE\\u8BA1/orginal/restaurant-management-system/plov/src/components/Employee/components/Order/components/orderDrawer.jsx\";\n// React\nimport React, { useState, useEffect } from \"react\"; // third part\n\nimport { Drawer, Form, Row, Col, Select, Input, TimePicker, Button, TreeSelect } from \"antd\"; // Services\n\nimport { getTable } from \"../../../../../services/tableServices\";\nimport { getDishes } from \"../../../../../services/dishServices\"; // custom\n\nimport { openNotification } from \"../../../../custom\";\nconst layout = {\n  labelCol: {\n    span: 8,\n    offset: 1\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\n\nconst OrderDrawer = ({\n  visible,\n  onClose,\n  handleAdd\n}) => {\n  // state\n  const [tableNumber, setTableNumber] = useState([]);\n  const [orders, setOrders] = useState([]); //   fetchTableNumber\n\n  const fetchTableNumber = async () => {\n    try {\n      await getTable().then(res => res.data).then(data => setTableNumber(data));\n    } catch (error) {\n      openNotification(\"error\", \"Cant get tables\", \"Check connection\");\n    }\n  };\n\n  const fetchOrders = async () => {\n    try {\n      await getDishes().then(res => res.data).then(data => setOrders(data));\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    fetchTableNumber();\n    fetchOrders();\n  }, []);\n  return React.createElement(Drawer, {\n    title: \"Take Order\",\n    visible: visible,\n    onClose: onClose,\n    closable: false,\n    placement: \"bottom\",\n    width: 480,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Form, Object.assign({}, layout, {\n    hideRequiredMark: true,\n    onFinish: handleAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 24,\n    sm: 12,\n    md: 12,\n    lg: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    label: \"Table Number\",\n    name: \"table_number\",\n    rules: [{\n      required: true,\n      message: \"Enter Table Number\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Select, {\n    placeholder: \"select table number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, tableNumber.map(table => React.createElement(Select.Option, {\n    key: table.id,\n    value: table.table_number,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, table.table_number))))), React.createElement(Col, {\n    xs: 24,\n    sm: 12,\n    md: 12,\n    lg: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    label: \"Customer\",\n    name: \"customer_name\",\n    rules: [{\n      required: true,\n      message: \"Enter Customer Name\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Customer Name\",\n    allowClear: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    xs: 24,\n    sm: 12,\n    lg: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    label: \"Order\",\n    name: \"dish\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(TreeSelect, {\n    style: {\n      width: \"100%\"\n    },\n    dropdownStyle: {\n      maxHeight: 400,\n      overflow: \"auto\"\n    },\n    placeholder: \"Please select\",\n    allowClear: true,\n    multiple: true,\n    showSearch: true,\n    autoClearSearchValue: true,\n    bordered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, orders.map(or => React.createElement(TreeSelect.TreeNode, {\n    value: or.type,\n    title: or.type,\n    selectable: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(TreeSelect.TreeNode, {\n    value: or.name,\n    title: or.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })))))), React.createElement(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    label: \"Price\",\n    name: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(TreeSelect, {\n    showSearch: true,\n    style: {\n      width: \"100%\"\n    },\n    placeholder: \"Please select Price\",\n    allowClear: true,\n    multiple: true,\n    bordered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, orders.map(or => React.createElement(TreeSelect.TreeNode, {\n    selectable: false,\n    title: or.name,\n    value: or.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(TreeSelect.TreeNode, {\n    title: or.price,\n    value: or.price,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })))))), React.createElement(Col, {\n    xs: 24,\n    sm: 12,\n    md: 12,\n    lg: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    label: \"Time\",\n    name: \"time\",\n    placeholder: \"select time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(TimePicker, {\n    className: \"w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 4,\n    sm: 4,\n    md: 3,\n    lg: 2,\n    xl: {\n      span: 2,\n      offset: 3\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Order\")), React.createElement(Col, {\n    xs: 4,\n    sm: 3,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"danger\",\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Cancel\")))));\n};\n\nexport default OrderDrawer;","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/Employee/components/Order/components/orderDrawer.jsx"],"names":["React","useState","useEffect","Drawer","Form","Row","Col","Select","Input","TimePicker","Button","TreeSelect","getTable","getDishes","openNotification","layout","labelCol","span","offset","wrapperCol","OrderDrawer","visible","onClose","handleAdd","tableNumber","setTableNumber","orders","setOrders","fetchTableNumber","then","res","data","error","fetchOrders","required","message","map","table","id","table_number","width","maxHeight","overflow","or","type","name","price"],"mappings":"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","sourcesContent":["// React\nimport React, { useState, useEffect } from \"react\";\n\n// third part\nimport {\n  Drawer,\n  Form,\n  Row,\n  Col,\n  Select,\n  Input,\n  TimePicker,\n  Button,\n  TreeSelect\n} from \"antd\";\n\n// Services\nimport { getTable } from \"../../../../../services/tableServices\";\nimport { getDishes } from \"../../../../../services/dishServices\";\n\n// custom\nimport { openNotification } from \"../../../../custom\";\n\nconst layout = {\n  labelCol: {\n    span: 8,\n    offset: 1\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\n\nconst OrderDrawer = ({ visible, onClose, handleAdd }) => {\n  // state\n  const [tableNumber, setTableNumber] = useState([]);\n  const [orders, setOrders] = useState([]);\n\n  //   fetchTableNumber\n  const fetchTableNumber = async () => {\n    try {\n      await getTable()\n        .then(res => res.data)\n        .then(data => setTableNumber(data));\n    } catch (error) {\n      openNotification(\"error\", \"Cant get tables\", \"Check connection\");\n    }\n  };\n  const fetchOrders = async () => {\n    try {\n      await getDishes()\n        .then(res => res.data)\n        .then(data => setOrders(data));\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    fetchTableNumber();\n    fetchOrders();\n  }, []);\n\n  return (\n    <Drawer\n      title=\"Take Order\"\n      visible={visible}\n      onClose={onClose}\n      closable={false}\n      placement=\"bottom\"\n      width={480}\n    >\n      <Form {...layout} hideRequiredMark onFinish={handleAdd}>\n        <Row>\n          <Col xs={24} sm={12} md={12} lg={7}>\n            <Form.Item\n              label=\"Table Number\"\n              name=\"table_number\"\n              rules={[{ required: true, message: \"Enter Table Number\" }]}\n            >\n              <Select placeholder=\"select table number\">\n                {tableNumber.map(table => (\n                  <Select.Option key={table.id} value={table.table_number}>\n                    {table.table_number}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col xs={24} sm={12} md={12} lg={6}>\n            <Form.Item\n              label=\"Customer\"\n              name=\"customer_name\"\n              rules={[{ required: true, message: \"Enter Customer Name\" }]}\n            >\n              <Input placeholder=\"Customer Name\" allowClear />\n            </Form.Item>\n          </Col>\n          <Col xs={24} sm={12} lg={6}>\n            <Form.Item label=\"Order\" name=\"dish\">\n              <TreeSelect\n                style={{ width: \"100%\" }}\n                dropdownStyle={{ maxHeight: 400, overflow: \"auto\" }}\n                placeholder=\"Please select\"\n                allowClear\n                multiple\n                showSearch\n                autoClearSearchValue\n                bordered\n              >\n                {orders.map(or => (\n                  <TreeSelect.TreeNode\n                    value={or.type}\n                    title={or.type}\n                    selectable={false}\n                  >\n                    <TreeSelect.TreeNode value={or.name} title={or.name} />\n                  </TreeSelect.TreeNode>\n                ))}\n              </TreeSelect>\n            </Form.Item>\n          </Col>\n          <Col xs={12}>\n            <Form.Item label=\"Price\" name=\"price\">\n              <TreeSelect\n                showSearch\n                style={{ width: \"100%\" }}\n                placeholder=\"Please select Price\"\n                allowClear\n                multiple\n                bordered\n              >\n                {orders.map(or => (\n                  <TreeSelect.TreeNode\n                    selectable={false}\n                    title={or.name}\n                    value={or.name}\n                  >\n                    <TreeSelect.TreeNode title={or.price} value={or.price} />\n                  </TreeSelect.TreeNode>\n                ))}\n              </TreeSelect>\n            </Form.Item>\n          </Col>\n          <Col xs={24} sm={12} md={12} lg={5}>\n            <Form.Item label=\"Time\" name=\"time\" placeholder=\"select time\">\n              <TimePicker className=\"w-100\" />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={4} sm={4} md={3} lg={2} xl={{ span: 2, offset: 3 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Order\n            </Button>\n          </Col>\n          <Col xs={4} sm={3} md={3}>\n            <Button type=\"danger\" onClick={onClose}>\n              Cancel\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    </Drawer>\n  );\n};\n\nexport default OrderDrawer;\n"]},"metadata":{},"sourceType":"module"}