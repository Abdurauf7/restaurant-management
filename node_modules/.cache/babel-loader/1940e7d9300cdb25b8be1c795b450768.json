{"ast":null,"code":"const column = [{\n  title: \"Last Name\",\n  dataIndex: \"last_name\",\n  filters: [{\n    text: \"Joe\",\n    value: \"Joe\"\n  }, {\n    text: \"Jim\",\n    value: \"Jim\"\n  }],\n  // specify the condition of filtering result\n  // here is that finding the name started with `value`\n  // onFilter: (first_name, record) => first_name.indexOf(first_name) === 0,\n  sorter: (a, b) => a.last_name.length - b.last_name.length,\n  sortDirections: [\"descend\"]\n}, {\n  title: \"Age\",\n  dataIndex: \"age\",\n  defaultSortOrder: \"descend\",\n  sorter: (a, b) => a.age - b.age\n}, {\n  title: \"Address\",\n  dataIndex: \"address\",\n  filters: [{\n    text: \"London\",\n    value: \"London\"\n  }, {\n    text: \"New York\",\n    value: \"New York\"\n  }],\n  filterMultiple: false,\n  onFilter: (value, record) => record.address.indexOf(value) === 0,\n  sorter: (a, b) => a.address.length - b.address.length,\n  sortDirections: [\"descend\", \"ascend\"]\n}];\nexport { column };","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/Admin/components/PersonalComponent/components/column.jsx"],"names":["column","title","dataIndex","filters","text","value","sorter","a","b","last_name","length","sortDirections","defaultSortOrder","age","filterMultiple","onFilter","record","address","indexOf"],"mappings":"AAAA,MAAMA,MAAM,GAAG,CACb;AACEC,EAAAA,KAAK,EAAE,WADT;AAEEC,EAAAA,SAAS,EAAE,WAFb;AAGEC,EAAAA,OAAO,EAAE,CACP;AACEC,IAAAA,IAAI,EAAE,KADR;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADO,EAKP;AACED,IAAAA,IAAI,EAAE,KADR;AAEEC,IAAAA,KAAK,EAAE;AAFT,GALO,CAHX;AAaE;AACA;AACA;AACAC,EAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,SAAF,CAAYC,MAAZ,GAAqBF,CAAC,CAACC,SAAF,CAAYC,MAhBrD;AAiBEC,EAAAA,cAAc,EAAE,CAAC,SAAD;AAjBlB,CADa,EAoBb;AACEV,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,SAAS,EAAE,KAFb;AAGEU,EAAAA,gBAAgB,EAAE,SAHpB;AAIEN,EAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACM,GAAF,GAAQL,CAAC,CAACK;AAJ9B,CApBa,EA0Bb;AACEZ,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,SAAS,EAAE,SAFb;AAGEC,EAAAA,OAAO,EAAE,CACP;AACEC,IAAAA,IAAI,EAAE,QADR;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADO,EAKP;AACED,IAAAA,IAAI,EAAE,UADR;AAEEC,IAAAA,KAAK,EAAE;AAFT,GALO,CAHX;AAaES,EAAAA,cAAc,EAAE,KAblB;AAcEC,EAAAA,QAAQ,EAAE,CAACV,KAAD,EAAQW,MAAR,KAAmBA,MAAM,CAACC,OAAP,CAAeC,OAAf,CAAuBb,KAAvB,MAAkC,CAdjE;AAeEC,EAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACU,OAAF,CAAUP,MAAV,GAAmBF,CAAC,CAACS,OAAF,CAAUP,MAfjD;AAgBEC,EAAAA,cAAc,EAAE,CAAC,SAAD,EAAY,QAAZ;AAhBlB,CA1Ba,CAAf;AA8CA,SAASX,MAAT","sourcesContent":["const column = [\n  {\n    title: \"Last Name\",\n    dataIndex: \"last_name\",\n    filters: [\n      {\n        text: \"Joe\",\n        value: \"Joe\"\n      },\n      {\n        text: \"Jim\",\n        value: \"Jim\"\n      }\n    ],\n    // specify the condition of filtering result\n    // here is that finding the name started with `value`\n    // onFilter: (first_name, record) => first_name.indexOf(first_name) === 0,\n    sorter: (a, b) => a.last_name.length - b.last_name.length,\n    sortDirections: [\"descend\"]\n  },\n  {\n    title: \"Age\",\n    dataIndex: \"age\",\n    defaultSortOrder: \"descend\",\n    sorter: (a, b) => a.age - b.age\n  },\n  {\n    title: \"Address\",\n    dataIndex: \"address\",\n    filters: [\n      {\n        text: \"London\",\n        value: \"London\"\n      },\n      {\n        text: \"New York\",\n        value: \"New York\"\n      }\n    ],\n    filterMultiple: false,\n    onFilter: (value, record) => record.address.indexOf(value) === 0,\n    sorter: (a, b) => a.address.length - b.address.length,\n    sortDirections: [\"descend\", \"ascend\"]\n  }\n];\n\nexport { column };\n"]},"metadata":{},"sourceType":"module"}