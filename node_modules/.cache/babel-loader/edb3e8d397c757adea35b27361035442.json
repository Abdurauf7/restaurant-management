{"ast":null,"code":"const columns = () => {\n  [{\n    title: \"Name\",\n    dataIndex: \"name\",\n    filters: [{\n      text: \"Joe\",\n      value: \"Joe\"\n    }, {\n      text: \"Jim\",\n      value: \"Jim\"\n    }],\n    // specify the condition of filtering result\n    // here is that finding the name started with `value`\n    onFilter: (value, record) => record.name.indexOf(value) === 0,\n    sorter: (a, b) => a.name.length - b.name.length,\n    sortDirections: [\"descend\"]\n  }, {\n    title: \"Age\",\n    dataIndex: \"age\",\n    defaultSortOrder: \"descend\",\n    sorter: (a, b) => a.age - b.age\n  }, {\n    title: \"Address\",\n    dataIndex: \"address\",\n    filters: [{\n      text: \"London\",\n      value: \"London\"\n    }, {\n      text: \"New York\",\n      value: \"New York\"\n    }],\n    filterMultiple: false,\n    onFilter: (value, record) => record.address.indexOf(value) === 0,\n    sorter: (a, b) => a.address.length - b.address.length,\n    sortDirections: [\"descend\", \"ascend\"]\n  }];\n};\n\nexport { columns };","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/Admin/components/PersonalComponent/components/column.jsx"],"names":["columns","title","dataIndex","filters","text","value","onFilter","record","name","indexOf","sorter","a","b","length","sortDirections","defaultSortOrder","age","filterMultiple","address"],"mappings":"AAAA,MAAMA,OAAO,GAAG,MAAM;AACpB,GACE;AACEC,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,MAFb;AAGEC,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,IAAI,EAAE,KADR;AAEEC,MAAAA,KAAK,EAAE;AAFT,KADO,EAKP;AACED,MAAAA,IAAI,EAAE,KADR;AAEEC,MAAAA,KAAK,EAAE;AAFT,KALO,CAHX;AAaE;AACA;AACAC,IAAAA,QAAQ,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmBA,MAAM,CAACC,IAAP,CAAYC,OAAZ,CAAoBJ,KAApB,MAA+B,CAf9D;AAgBEK,IAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACH,IAAF,CAAOK,MAAP,GAAgBD,CAAC,CAACJ,IAAF,CAAOK,MAhB3C;AAiBEC,IAAAA,cAAc,EAAE,CAAC,SAAD;AAjBlB,GADF,EAoBE;AACEb,IAAAA,KAAK,EAAE,KADT;AAEEC,IAAAA,SAAS,EAAE,KAFb;AAGEa,IAAAA,gBAAgB,EAAE,SAHpB;AAIEL,IAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACK,GAAF,GAAQJ,CAAC,CAACI;AAJ9B,GApBF,EA0BE;AACEf,IAAAA,KAAK,EAAE,SADT;AAEEC,IAAAA,SAAS,EAAE,SAFb;AAGEC,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,IAAI,EAAE,QADR;AAEEC,MAAAA,KAAK,EAAE;AAFT,KADO,EAKP;AACED,MAAAA,IAAI,EAAE,UADR;AAEEC,MAAAA,KAAK,EAAE;AAFT,KALO,CAHX;AAaEY,IAAAA,cAAc,EAAE,KAblB;AAcEX,IAAAA,QAAQ,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmBA,MAAM,CAACW,OAAP,CAAeT,OAAf,CAAuBJ,KAAvB,MAAkC,CAdjE;AAeEK,IAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACO,OAAF,CAAUL,MAAV,GAAmBD,CAAC,CAACM,OAAF,CAAUL,MAfjD;AAgBEC,IAAAA,cAAc,EAAE,CAAC,SAAD,EAAY,QAAZ;AAhBlB,GA1BF;AA6CD,CA9CD;;AA+CA,SAASd,OAAT","sourcesContent":["const columns = () => {\n  [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      filters: [\n        {\n          text: \"Joe\",\n          value: \"Joe\"\n        },\n        {\n          text: \"Jim\",\n          value: \"Jim\"\n        }\n      ],\n      // specify the condition of filtering result\n      // here is that finding the name started with `value`\n      onFilter: (value, record) => record.name.indexOf(value) === 0,\n      sorter: (a, b) => a.name.length - b.name.length,\n      sortDirections: [\"descend\"]\n    },\n    {\n      title: \"Age\",\n      dataIndex: \"age\",\n      defaultSortOrder: \"descend\",\n      sorter: (a, b) => a.age - b.age\n    },\n    {\n      title: \"Address\",\n      dataIndex: \"address\",\n      filters: [\n        {\n          text: \"London\",\n          value: \"London\"\n        },\n        {\n          text: \"New York\",\n          value: \"New York\"\n        }\n      ],\n      filterMultiple: false,\n      onFilter: (value, record) => record.address.indexOf(value) === 0,\n      sorter: (a, b) => a.address.length - b.address.length,\n      sortDirections: [\"descend\", \"ascend\"]\n    }\n  ];\n};\nexport { columns };\n"]},"metadata":{},"sourceType":"module"}