{"ast":null,"code":"var _jsxFileName = \"/Users/abdurauf/Desktop/\\u6BD5\\u4E1A\\u8BBE\\u8BA1/orginal/restaurant-management-system/plov/src/components/SignUpForm.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport { Form, Icon, Input, Button, Row, Col } from \"antd\";\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass SignUpForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log(\"Received values of form: \", values);\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    // To disable submit button at the beginning.\n    this.props.form.validateFields();\n  }\n\n  render() {\n    const {\n      getFieldDecorator,\n      getFieldsError,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form; // Only show error after a field is touched.\n\n    const usernameError = isFieldTouched(\"username\") && getFieldError(\"username\");\n    const passwordError = isFieldTouched(\"password\") && getFieldError(\"password\");\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      justify: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: {\n        width: \"100%\"\n      },\n      src: \"https://images.unsplash.com/photo-1537047902294-62a40c20a6ae?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1275&q=80\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Form, {\n      layout: \"inline\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      validateStatus: usernameError ? \"error\" : \"\",\n      help: usernameError || \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, getFieldDecorator(\"username\", {\n      rules: [{\n        required: true,\n        message: \"Please input your username!\"\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      validateStatus: passwordError ? \"error\" : \"\",\n      help: passwordError || \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, getFieldDecorator(\"password\", {\n      rules: [{\n        required: true,\n        message: \"Please input your Password!\"\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      disabled: hasErrors(getFieldsError()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Log in\")))))));\n  }\n\n}\n\nconst WrappedHorizontalLoginForm = Form.create({\n  name: \"horizontal_login\"\n})(SignUpForm);\nexport default WrappedHorizontalLoginForm;","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/SignUpForm.jsx"],"names":["React","Component","Fragment","Form","Icon","Input","Button","Row","Col","hasErrors","fieldsError","Object","keys","some","field","SignUpForm","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","componentDidMount","render","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","usernameError","passwordError","width","rules","required","message","color","WrappedHorizontalLoginForm","create","name"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Form, Icon, Input, Button, Row, Col } from \"antd\";\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass SignUpForm extends Component {\n  componentDidMount() {\n    // To disable submit button at the beginning.\n    this.props.form.validateFields();\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n      }\n    });\n  };\n  render() {\n    const {\n      getFieldDecorator,\n      getFieldsError,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form;\n\n    // Only show error after a field is touched.\n    const usernameError =\n      isFieldTouched(\"username\") && getFieldError(\"username\");\n    const passwordError =\n      isFieldTouched(\"password\") && getFieldError(\"password\");\n    return (\n      <Fragment>\n        <Row type=\"flex\" justify=\"end\">\n          <Col span={12}>\n            <div>\n              <img\n                style={{ width: \"100%\" }}\n                src=\"https://images.unsplash.com/photo-1537047902294-62a40c20a6ae?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1275&q=80\"\n              />\n            </div>\n          </Col>\n          <Col span={12}>\n            <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n              <Col>\n                <Form.Item\n                  validateStatus={usernameError ? \"error\" : \"\"}\n                  help={usernameError || \"\"}\n                >\n                  {getFieldDecorator(\"username\", {\n                    rules: [\n                      { required: true, message: \"Please input your username!\" }\n                    ]\n                  })(\n                    <Input\n                      prefix={\n                        <Icon\n                          type=\"user\"\n                          style={{ color: \"rgba(0,0,0,.25)\" }}\n                        />\n                      }\n                      placeholder=\"Username\"\n                    />\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item\n                  validateStatus={passwordError ? \"error\" : \"\"}\n                  help={passwordError || \"\"}\n                >\n                  {getFieldDecorator(\"password\", {\n                    rules: [\n                      { required: true, message: \"Please input your Password!\" }\n                    ]\n                  })(\n                    <Input\n                      prefix={\n                        <Icon\n                          type=\"lock\"\n                          style={{ color: \"rgba(0,0,0,.25)\" }}\n                        />\n                      }\n                      type=\"password\"\n                      placeholder=\"Password\"\n                    />\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    disabled={hasErrors(getFieldsError())}\n                  >\n                    Log in\n                  </Button>\n                </Form.Item>\n              </Col>\n            </Form>\n          </Col>\n        </Row>\n      </Fragment>\n    );\n  }\n}\nconst WrappedHorizontalLoginForm = Form.create({ name: \"horizontal_login\" })(\n  SignUpForm\n);\nexport default WrappedHorizontalLoginForm;\n"]},"metadata":{},"sourceType":"module"}