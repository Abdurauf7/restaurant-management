{"ast":null,"code":"var _jsxFileName = \"/Users/abdurauf/Desktop/\\u6BD5\\u4E1A\\u8BBE\\u8BA1/orginal/restaurant-management-system/plov/src/components/Admin/components/dish.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Layout, Table, Button, InputNumber, Input, Form, Row, Col } from \"antd\";\nimport { Resizable } from \"react-resizable\";\nimport \"../../../assets/css/AdminForm.css\";\nimport WrappedDishForm from \"../../common/dishDrawer\";\nimport Title from \"../../common/title\";\nimport { getDishes, addDishes, deleteDishes } from \"../../../services/dishServices\"; // for resizing\n\nconst ResizeableTitle = props => {\n  const {\n    onResize,\n    width,\n    ...restProps\n  } = props;\n\n  if (!width) {\n    return React.createElement(\"th\", Object.assign({}, restProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(Resizable, {\n    width: width,\n    height: 0,\n    onResize: onResize,\n    draggableOpts: {\n      enableUserSelectHack: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"th\", Object.assign({}, restProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })));\n};\n\nconst {\n  Content\n} = Layout; // Here Started Dish Component\n\nclass Dish extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      columns: [{\n        title: \"Name\",\n        dataIndex: \"name\",\n        editable: true\n      }, {\n        title: \"Price\",\n        dataIndex: \"price\",\n        editable: true\n      }, {\n        title: \"Type\",\n        dataIndex: \"type\",\n        editable: true\n      }, {\n        title: \"Date\",\n        dataIndex: \"date\",\n        editable: true\n      }, {\n        title: \"Action\",\n        dataIndex: \"operation\",\n        render: (text, record) => {\n          React.createElement(Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"danger\",\n            size: \"small\",\n            style: {\n              width: \"60px\",\n              margin: \" 0 1em\"\n            },\n            onClick: () => this.handleDelete(record.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, \"Delete\"), React.createElement(Button, {\n            type: \"primary\",\n            size: \"small\",\n            style: {\n              width: \"60px\"\n            } // onClick={}\n            ,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, \"Edit\"));\n        }\n      }],\n      visible: false,\n      dataSource: [],\n      editingKey: \"\",\n      title: \"Dish Menu\"\n    };\n\n    this.isEditing = record => record.id === this.state.editingKey;\n\n    this.cancel = () => {\n      this.setState({\n        editingKey: \"\"\n      });\n    };\n\n    this.handleDelete = async id => {\n      const orginaldata = this.state.dataSource;\n\n      try {\n        await deleteDishes(id);\n      } catch (err) {\n        this.setState({\n          dataSource: orginaldata\n        });\n      }\n    };\n\n    this.components = {\n      header: {\n        cell: ResizeableTitle\n      },\n      body: {\n        cell: EditableCell\n      }\n    };\n\n    this.handleAdd = async e => {\n      e.preventDefault();\n      await this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          addDishes(values);\n          this.setState({\n            visible: false\n          });\n        }\n      });\n    };\n\n    this.showDrawer = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.onClose = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleResize = index => (e, {\n      size\n    }) => {\n      this.setState(({\n        columns\n      }) => {\n        const nextColumns = [...columns];\n        nextColumns[index] = { ...nextColumns[index],\n          width: size.width\n        };\n        return {\n          columns: nextColumns\n        };\n      });\n    };\n  }\n\n  async populateDishTable() {\n    const {\n      data: dataSource\n    } = await getDishes();\n    this.setState({\n      dataSource\n    });\n  }\n\n  async componentDidMount() {\n    await this.populateDishTable();\n  }\n\n  edit(id) {\n    this.setState({\n      editingKey: id\n    });\n  }\n\n  save(form, id) {\n    form.validateFields((error, row) => {\n      if (error) {\n        return;\n      }\n\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => id === item.id);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item,\n          ...row\n        });\n        this.setState({\n          dataSource: newData,\n          editingKey: \"\"\n        });\n      } else {\n        newData.push(row);\n        this.setState({\n          dataSource: newData,\n          editingKey: \"\"\n        });\n      }\n    });\n  }\n\n  render() {\n    const columns = this.state.columns.map((col, index) => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return { ...col,\n        onHeaderCell: column => ({\n          width: column.width,\n          onResize: this.handleResize(index)\n        }),\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === \"age\" ? \"number\" : \"text\",\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record.id)\n        })\n      };\n    });\n    const {\n      dataSource,\n      visible,\n      title\n    } = this.state;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(Content, {\n      style: {\n        margin: \"2em 16px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        background: \"#fff\",\n        padding: 24,\n        minHeight: 280\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Title, {\n      title: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showDrawer,\n      style: {\n        margin: \"2em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Add\")), React.createElement(WrappedDishForm, {\n      onClose: this.onClose,\n      visible: visible,\n      form: this.props.form,\n      handleSubmit: this.handleAdd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), React.createElement(EditableContext.Provider, {\n      value: this.props.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(Table, {\n      components: this.components,\n      columns: columns,\n      dataSource: dataSource,\n      bordered: true,\n      rowClassName: \"editable-row\",\n      title: () => \"Dish Menu\",\n      footer: () => \"Footer\",\n      pagination: false,\n      scroll: {\n        y: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst WrappedHorizontalLoginForm = Form.create()(Dish);\nexport default WrappedHorizontalLoginForm;","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/Admin/components/dish.js"],"names":["React","Component","Fragment","Layout","Table","Button","InputNumber","Input","Form","Row","Col","Resizable","WrappedDishForm","Title","getDishes","addDishes","deleteDishes","ResizeableTitle","props","onResize","width","restProps","enableUserSelectHack","Content","Dish","state","columns","title","dataIndex","editable","render","text","record","margin","handleDelete","id","visible","dataSource","editingKey","isEditing","cancel","setState","orginaldata","err","components","header","cell","body","EditableCell","handleAdd","e","preventDefault","form","validateFieldsAndScroll","values","showDrawer","onClose","handleResize","index","size","nextColumns","populateDishTable","data","componentDidMount","edit","save","validateFields","error","row","newData","findIndex","item","splice","push","map","col","onHeaderCell","column","onCell","inputType","editing","background","padding","minHeight","textAlign","y","WrappedHorizontalLoginForm","create"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport {\n  Layout,\n  Table,\n  Button,\n  InputNumber,\n  Input,\n  Form,\n  Row,\n  Col\n} from \"antd\";\nimport { Resizable } from \"react-resizable\";\nimport \"../../../assets/css/AdminForm.css\";\nimport WrappedDishForm from \"../../common/dishDrawer\";\nimport Title from \"../../common/title\";\nimport {\n  getDishes,\n  addDishes,\n  deleteDishes\n} from \"../../../services/dishServices\";\n\n// for resizing\nconst ResizeableTitle = props => {\n  const { onResize, width, ...restProps } = props;\n\n  if (!width) {\n    return <th {...restProps} />;\n  }\n  return (\n    <Resizable\n      width={width}\n      height={0}\n      onResize={onResize}\n      draggableOpts={{ enableUserSelectHack: false }}\n    >\n      <th {...restProps} />\n    </Resizable>\n  );\n};\n\nconst { Content } = Layout;\n\n// Here Started Dish Component\nclass Dish extends Component {\n  async populateDishTable() {\n    const { data: dataSource } = await getDishes();\n    this.setState({ dataSource });\n  }\n\n  async componentDidMount() {\n    await this.populateDishTable();\n  }\n\n  state = {\n    columns: [\n      {\n        title: \"Name\",\n        dataIndex: \"name\",\n        editable: true\n      },\n      {\n        title: \"Price\",\n        dataIndex: \"price\",\n        editable: true\n      },\n      {\n        title: \"Type\",\n        dataIndex: \"type\",\n        editable: true\n      },\n      {\n        title: \"Date\",\n        dataIndex: \"date\",\n        editable: true\n      },\n      {\n        title: \"Action\",\n        dataIndex: \"operation\",\n        render: (text, record) => {\n          <Fragment>\n            <Button\n              type=\"danger\"\n              size=\"small\"\n              style={{ width: \"60px\", margin: \" 0 1em\" }}\n              onClick={() => this.handleDelete(record.id)}\n            >\n              Delete\n            </Button>\n            <Button\n              type=\"primary\"\n              size=\"small\"\n              style={{ width: \"60px\" }}\n              // onClick={}\n            >\n              Edit\n            </Button>\n          </Fragment>;\n        }\n      }\n    ],\n\n    visible: false,\n    dataSource: [],\n    editingKey: \"\",\n\n    title: \"Dish Menu\"\n  };\n\n  isEditing = record => record.id === this.state.editingKey;\n\n  cancel = () => {\n    this.setState({ editingKey: \"\" });\n  };\n  edit(id) {\n    this.setState({ editingKey: id });\n  }\n\n  handleDelete = async id => {\n    const orginaldata = this.state.dataSource;\n    try {\n      await deleteDishes(id);\n    } catch (err) {\n      this.setState({ dataSource: orginaldata });\n    }\n  };\n\n  save(form, id) {\n    form.validateFields((error, row) => {\n      if (error) {\n        return;\n      }\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => id === item.id);\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, {\n          ...item,\n          ...row\n        });\n        this.setState({ dataSource: newData, editingKey: \"\" });\n      } else {\n        newData.push(row);\n        this.setState({ dataSource: newData, editingKey: \"\" });\n      }\n    });\n  }\n  components = {\n    header: {\n      cell: ResizeableTitle\n    },\n    body: {\n      cell: EditableCell\n    }\n  };\n\n  handleAdd = async e => {\n    e.preventDefault();\n    await this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        addDishes(values);\n        this.setState({ visible: false });\n      }\n    });\n  };\n\n  showDrawer = () => {\n    this.setState({\n      visible: true\n    });\n  };\n  onClose = () => {\n    this.setState({\n      visible: false\n    });\n  };\n  handleResize = index => (e, { size }) => {\n    this.setState(({ columns }) => {\n      const nextColumns = [...columns];\n      nextColumns[index] = {\n        ...nextColumns[index],\n        width: size.width\n      };\n      return { columns: nextColumns };\n    });\n  };\n\n  render() {\n    const columns = this.state.columns.map((col, index) => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onHeaderCell: column => ({\n          width: column.width,\n          onResize: this.handleResize(index)\n        }),\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === \"age\" ? \"number\" : \"text\",\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record.id)\n        })\n      };\n    });\n    const { dataSource, visible, title } = this.state;\n    return (\n      <Fragment>\n        <Content style={{ margin: \"2em 16px\" }}>\n          <div style={{ background: \"#fff\", padding: 24, minHeight: 280 }}>\n            <Title title={title} />\n            <div style={{ textAlign: \"right\" }}>\n              <Button\n                type=\"primary\"\n                onClick={this.showDrawer}\n                style={{ margin: \"2em\" }}\n              >\n                Add\n              </Button>\n            </div>\n            <WrappedDishForm\n              onClose={this.onClose}\n              visible={visible}\n              form={this.props.form}\n              handleSubmit={this.handleAdd}\n            />\n            <EditableContext.Provider value={this.props.form}>\n              <Table\n                components={this.components}\n                columns={columns}\n                dataSource={dataSource}\n                bordered\n                rowClassName=\"editable-row\"\n                title={() => \"Dish Menu\"}\n                footer={() => \"Footer\"}\n                pagination={false}\n                scroll={{ y: 500 }}\n              />\n            </EditableContext.Provider>\n          </div>\n        </Content>\n      </Fragment>\n    );\n  }\n}\n\nconst WrappedHorizontalLoginForm = Form.create()(Dish);\nexport default WrappedHorizontalLoginForm;\n"]},"metadata":{},"sourceType":"module"}