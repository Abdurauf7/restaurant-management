{"ast":null,"code":"import _mapValues from \"lodash/mapValues\";\nimport _defaults from \"lodash/defaults\";\nimport _isFunction from \"lodash/isFunction\";\nimport _throttle from \"lodash/throttle\";\nimport _assign from \"lodash/assign\";\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nimport { Selection } from \"victory-core\";\nimport isEqual from \"react-fast-compare\";\nvar Helpers = {\n  getDimension: function (props) {\n    var horizontal = props.horizontal,\n        brushDimension = props.brushDimension;\n\n    if (!horizontal || !brushDimension) {\n      return brushDimension;\n    }\n\n    return brushDimension === \"x\" ? \"y\" : \"x\";\n  },\n  withinBounds: function (point, bounds, padding) {\n    var _mapValues2 = _mapValues(bounds, Number),\n        x1 = _mapValues2.x1,\n        x2 = _mapValues2.x2,\n        y1 = _mapValues2.y1,\n        y2 = _mapValues2.y2;\n\n    var _mapValues3 = _mapValues(point, Number),\n        x = _mapValues3.x,\n        y = _mapValues3.y;\n\n    padding = padding ? padding / 2 : 0;\n    return x + padding >= Math.min(x1, x2) && x - padding <= Math.max(x1, x2) && y + padding >= Math.min(y1, y2) && y - padding <= Math.max(y1, y2);\n  },\n  getDomainBox: function (props, fullDomain, selectedDomain) {\n    var brushDimension = this.getDimension(props);\n    fullDomain = _defaults({}, fullDomain, props.domain);\n    selectedDomain = _defaults({}, selectedDomain, fullDomain);\n    var fullCoords = Selection.getDomainCoordinates(props, fullDomain);\n    var selectedCoords = Selection.getDomainCoordinates(props, selectedDomain);\n    return {\n      x1: brushDimension !== \"y\" ? Math.min.apply(Math, _toConsumableArray(selectedCoords.x)) : Math.min.apply(Math, _toConsumableArray(fullCoords.x)),\n      x2: brushDimension !== \"y\" ? Math.max.apply(Math, _toConsumableArray(selectedCoords.x)) : Math.max.apply(Math, _toConsumableArray(fullCoords.x)),\n      y1: brushDimension !== \"x\" ? Math.min.apply(Math, _toConsumableArray(selectedCoords.y)) : Math.min.apply(Math, _toConsumableArray(fullCoords.y)),\n      y2: brushDimension !== \"x\" ? Math.max.apply(Math, _toConsumableArray(selectedCoords.y)) : Math.max.apply(Math, _toConsumableArray(fullCoords.y))\n    };\n  },\n  getHandles: function (props, domainBox) {\n    var brushDimension = this.getDimension(props);\n    var x1 = domainBox.x1,\n        x2 = domainBox.x2,\n        y1 = domainBox.y1,\n        y2 = domainBox.y2;\n    var minX = Math.min(x1, x2);\n    var maxX = Math.max(x1, x2);\n    var minY = Math.min(y1, y2);\n    var maxY = Math.max(y1, y2);\n    var handleWidth = props.handleWidth / 2;\n    return {\n      left: brushDimension !== \"y\" && {\n        x1: minX - handleWidth,\n        x2: minX + handleWidth,\n        y1: y1,\n        y2: y2\n      },\n      right: brushDimension !== \"y\" && {\n        x1: maxX - handleWidth,\n        x2: maxX + handleWidth,\n        y1: y1,\n        y2: y2\n      },\n      top: brushDimension !== \"x\" && {\n        x1: x1,\n        x2: x2,\n        y1: minY - handleWidth,\n        y2: minY + handleWidth\n      },\n      bottom: brushDimension !== \"x\" && {\n        x1: x1,\n        x2: x2,\n        y1: maxY - handleWidth,\n        y2: maxY + handleWidth\n      }\n    };\n  },\n  getActiveHandles: function (point, props, domainBox) {\n    var _this = this;\n\n    var handles = this.getHandles(props, domainBox);\n    var activeHandles = [\"top\", \"bottom\", \"left\", \"right\"].reduce(function (memo, opt) {\n      memo = handles[opt] && _this.withinBounds(point, handles[opt]) ? memo.concat(opt) : memo;\n      return memo;\n    }, []);\n    return activeHandles.length && activeHandles;\n  },\n  getResizeMutation: function (box, handles) {\n    var x1 = box.x1,\n        y1 = box.y1,\n        x2 = box.x2,\n        y2 = box.y2;\n    var mutations = {\n      left: {\n        x1: Math.max(x1, x2),\n        x2: Math.min(x1, x2),\n        y1: y1,\n        y2: y2\n      },\n      right: {\n        x1: Math.min(x1, x2),\n        x2: Math.max(x1, x2),\n        y1: y1,\n        y2: y2\n      },\n      top: {\n        y1: Math.max(y1, y2),\n        y2: Math.min(y1, y2),\n        x1: x1,\n        x2: x2\n      },\n      bottom: {\n        y1: Math.min(y1, y2),\n        y2: Math.max(y1, y2),\n        x1: x1,\n        x2: x2\n      }\n    };\n    return handles.reduce(function (memo, current) {\n      return _assign(memo, mutations[current]);\n    }, {});\n  },\n  getMinimumDomain: function () {\n    return {\n      x: [0, 1 / Number.MAX_SAFE_INTEGER],\n      y: [0, 1 / Number.MAX_SAFE_INTEGER]\n    };\n  },\n  getDefaultBrushArea: function (targetProps, cachedDomain, evt) {\n    var defaultBrushArea = targetProps.defaultBrushArea,\n        domain = targetProps.domain,\n        fullDomain = targetProps.fullDomain,\n        scale = targetProps.scale,\n        horizontal = targetProps.horizontal;\n\n    if (defaultBrushArea === \"none\") {\n      return this.getMinimumDomain();\n    } else if (defaultBrushArea === \"disable\") {\n      return cachedDomain;\n    } else if (defaultBrushArea === \"move\") {\n      var brushBox = this.getDomainBox(targetProps, fullDomain, cachedDomain);\n      var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n      var pannedBox = this.panBox(_objectSpread({}, targetProps, brushBox, {\n        brushDomain: cachedDomain,\n        startX: (brushBox.x1 + brushBox.x2) / 2,\n        startY: (brushBox.y1 + brushBox.y2) / 2\n      }), Selection.getSVGEventCoordinates(evt, parentSVG));\n      var fullDomainBox = targetProps.fullDomainBox || this.getDomainBox(targetProps, fullDomain);\n      var constrainedBox = this.constrainBox(pannedBox, fullDomainBox);\n      return Selection.getBounds(_objectSpread({}, constrainedBox, {\n        scale: scale,\n        horizontal: horizontal\n      }));\n    } else {\n      return domain;\n    }\n  },\n  getSelectionMutation: function (point, box, brushDimension) {\n    var x = point.x,\n        y = point.y;\n    var x1 = box.x1,\n        x2 = box.x2,\n        y1 = box.y1,\n        y2 = box.y2;\n    return {\n      x1: brushDimension !== \"y\" ? x : x1,\n      y1: brushDimension !== \"x\" ? y : y1,\n      x2: brushDimension !== \"y\" ? x : x2,\n      y2: brushDimension !== \"x\" ? y : y2\n    };\n  },\n  panBox: function (props, point) {\n    var domain = props.domain,\n        startX = props.startX,\n        startY = props.startY;\n    var brushDimension = this.getDimension(props);\n\n    var brushDomain = _defaults({}, props.brushDomain, domain);\n\n    var fullDomain = _defaults({}, props.fullDomain, domain);\n\n    var _ref = props.x1 ? props : this.getDomainBox(props, fullDomain, brushDomain),\n        x1 = _ref.x1,\n        x2 = _ref.x2,\n        y1 = _ref.y1,\n        y2 = _ref.y2;\n\n    var x = point.x,\n        y = point.y;\n    var delta = {\n      x: startX ? startX - x : 0,\n      y: startY ? startY - y : 0\n    };\n    return {\n      x1: brushDimension !== \"y\" ? Math.min(x1, x2) - delta.x : Math.min(x1, x2),\n      x2: brushDimension !== \"y\" ? Math.max(x1, x2) - delta.x : Math.max(x1, x2),\n      y1: brushDimension !== \"x\" ? Math.min(y1, y2) - delta.y : Math.min(y1, y2),\n      y2: brushDimension !== \"x\" ? Math.max(y1, y2) - delta.y : Math.max(y1, y2)\n    };\n  },\n  constrainBox: function (box, fullDomainBox) {\n    var _mapValues4 = _mapValues(fullDomainBox, Number),\n        x1 = _mapValues4.x1,\n        y1 = _mapValues4.y1,\n        x2 = _mapValues4.x2,\n        y2 = _mapValues4.y2;\n\n    return {\n      x1: box.x2 > x2 ? x2 - Math.abs(box.x2 - box.x1) : Math.max(box.x1, x1),\n      y1: box.y2 > y2 ? y2 - Math.abs(box.y2 - box.y1) : Math.max(box.y1, y1),\n      x2: box.x1 < x1 ? x1 + Math.abs(box.x2 - box.x1) : Math.min(box.x2, x2),\n      y2: box.y1 < y1 ? y1 + Math.abs(box.y2 - box.y1) : Math.min(box.y2, y2)\n    };\n  },\n  hasMoved: function (props) {\n    var x1 = props.x1,\n        x2 = props.x2,\n        y1 = props.y1,\n        y2 = props.y2,\n        mouseMoveThreshold = props.mouseMoveThreshold;\n    var brushDimension = this.getDimension(props);\n    var xMoved = Math.abs(x1 - x2) >= mouseMoveThreshold;\n    var yMoved = Math.abs(y1 - y2) >= mouseMoveThreshold;\n\n    switch (brushDimension) {\n      case \"x\":\n        return xMoved;\n\n      case \"y\":\n        return yMoved;\n\n      default:\n        return xMoved || yMoved;\n    }\n  },\n  // eslint-disable-next-line max-statements, complexity\n  onMouseDown: function (evt, targetProps) {\n    var _this2 = this;\n\n    evt.preventDefault();\n    var handleWidth = targetProps.handleWidth,\n        cachedBrushDomain = targetProps.cachedBrushDomain,\n        domain = targetProps.domain,\n        allowResize = targetProps.allowResize,\n        allowDrag = targetProps.allowDrag,\n        allowDraw = targetProps.allowDraw;\n    var brushDimension = this.getDimension(targetProps); // Don't trigger events for static brushes\n\n    if (!allowResize && !allowDrag) {\n      return {};\n    }\n\n    var fullDomainBox = targetProps.fullDomainBox || this.getDomainBox(targetProps, domain);\n    var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n\n    var _Selection$getSVGEven = Selection.getSVGEventCoordinates(evt, parentSVG),\n        x = _Selection$getSVGEven.x,\n        y = _Selection$getSVGEven.y; // Ignore events that occur outside of the maximum domain region\n\n\n    if (!this.withinBounds({\n      x: x,\n      y: y\n    }, fullDomainBox, handleWidth)) {\n      return {};\n    }\n\n    var brushDomain = _defaults({}, targetProps.brushDomain, domain);\n\n    var currentDomain = isEqual(brushDomain, cachedBrushDomain) ? targetProps.currentDomain || brushDomain || domain : brushDomain || domain;\n    var domainBox = this.getDomainBox(targetProps, domain, currentDomain);\n    var activeHandles = allowResize && this.getActiveHandles({\n      x: x,\n      y: y\n    }, targetProps, domainBox); // If the event occurs in any of the handle regions, start a resize\n\n    if (activeHandles) {\n      return [{\n        target: \"parent\",\n        mutation: function () {\n          return _objectSpread({\n            isSelecting: true,\n            domainBox: domainBox,\n            fullDomainBox: fullDomainBox,\n            cachedBrushDomain: brushDomain,\n            currentDomain: currentDomain,\n            parentSVG: parentSVG\n          }, _this2.getResizeMutation(domainBox, activeHandles));\n        }\n      }];\n    } else if (this.withinBounds({\n      x: x,\n      y: y\n    }, domainBox) && !isEqual(domain, currentDomain)) {\n      // if the event occurs within a selected region start a panning event, unless the whole\n      // domain is selected\n      return [{\n        target: \"parent\",\n        mutation: function () {\n          return _objectSpread({\n            isPanning: allowDrag,\n            startX: x,\n            startY: y,\n            domainBox: domainBox,\n            fullDomainBox: fullDomainBox,\n            currentDomain: currentDomain,\n            cachedBrushDomain: brushDomain,\n            parentSVG: parentSVG\n          }, domainBox);\n        }\n      }];\n    } else {\n      // if the event occurs outside the region, or if the whole domain is selected,\n      // start a new selection\n      return allowDraw ? [{\n        target: \"parent\",\n        mutation: function () {\n          return _objectSpread({\n            isSelecting: allowResize,\n            domainBox: domainBox,\n            fullDomainBox: fullDomainBox,\n            parentSVG: parentSVG,\n            cachedBrushDomain: brushDomain,\n            cachedCurrentDomain: currentDomain,\n            currentDomain: _this2.getMinimumDomain()\n          }, _this2.getSelectionMutation({\n            x: x,\n            y: y\n          }, domainBox, brushDimension));\n        }\n      }] : {};\n    }\n  },\n  // eslint-disable-next-line max-statements, complexity\n  onMouseMove: function (evt, targetProps) {\n    // if a panning or selection has not been started, ignore the event\n    if (!targetProps.isPanning && !targetProps.isSelecting) {\n      return {};\n    }\n\n    var scale = targetProps.scale,\n        isPanning = targetProps.isPanning,\n        isSelecting = targetProps.isSelecting,\n        fullDomainBox = targetProps.fullDomainBox,\n        onBrushDomainChange = targetProps.onBrushDomainChange,\n        allowResize = targetProps.allowResize,\n        allowDrag = targetProps.allowDrag,\n        horizontal = targetProps.horizontal,\n        mouseMoveThreshold = targetProps.mouseMoveThreshold;\n    var brushDimension = this.getDimension(targetProps);\n    var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n\n    var _Selection$getSVGEven2 = Selection.getSVGEventCoordinates(evt, parentSVG),\n        x = _Selection$getSVGEven2.x,\n        y = _Selection$getSVGEven2.y; // Ignore events that occur outside of the maximum domain region\n\n\n    if (!allowResize && !allowDrag || !this.withinBounds({\n      x: x,\n      y: y\n    }, fullDomainBox) || mouseMoveThreshold > 0 && !this.hasMoved(_objectSpread({}, targetProps, {\n      x2: x,\n      y2: y\n    }))) {\n      return {};\n    }\n\n    if (allowDrag && isPanning) {\n      var startX = targetProps.startX,\n          startY = targetProps.startY;\n      var pannedBox = this.panBox(targetProps, {\n        x: x,\n        y: y\n      });\n      var constrainedBox = this.constrainBox(pannedBox, fullDomainBox);\n      var currentDomain = Selection.getBounds(_objectSpread({}, constrainedBox, {\n        scale: scale,\n        horizontal: horizontal\n      }));\n\n      var mutatedProps = _objectSpread({\n        currentDomain: currentDomain,\n        parentSVG: parentSVG,\n        startX: pannedBox.x2 >= fullDomainBox.x2 || pannedBox.x1 <= fullDomainBox.x1 ? startX : x,\n        startY: pannedBox.y2 >= fullDomainBox.y2 || pannedBox.y1 <= fullDomainBox.y1 ? startY : y\n      }, constrainedBox);\n\n      if (_isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n\n      return [{\n        target: \"parent\",\n        mutation: function () {\n          return mutatedProps;\n        }\n      }];\n    } else if (allowResize && isSelecting) {\n      var x2 = brushDimension !== \"y\" ? x : targetProps.x2;\n      var y2 = brushDimension !== \"x\" ? y : targetProps.y2;\n\n      var _currentDomain = Selection.getBounds({\n        x2: x2,\n        y2: y2,\n        x1: targetProps.x1,\n        y1: targetProps.y1,\n        scale: scale,\n        horizontal: horizontal\n      });\n\n      var _mutatedProps = {\n        x2: x2,\n        y2: y2,\n        currentDomain: _currentDomain,\n        parentSVG: parentSVG\n      };\n\n      if (_isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(_currentDomain, _defaults({}, _mutatedProps, targetProps));\n      }\n\n      return [{\n        target: \"parent\",\n        mutation: function () {\n          return _mutatedProps;\n        }\n      }];\n    }\n\n    return {};\n  },\n  onMouseUp: function (evt, targetProps) {\n    // eslint-disable-line max-statements, complexity\n    var x1 = targetProps.x1,\n        y1 = targetProps.y1,\n        x2 = targetProps.x2,\n        y2 = targetProps.y2,\n        isPanning = targetProps.isPanning,\n        isSelecting = targetProps.isSelecting,\n        onBrushDomainChange = targetProps.onBrushDomainChange,\n        onBrushDomainChangeEnd = targetProps.onBrushDomainChangeEnd,\n        onBrushCleared = targetProps.onBrushCleared,\n        currentDomain = targetProps.currentDomain,\n        allowResize = targetProps.allowResize,\n        allowDrag = targetProps.allowDrag,\n        defaultBrushArea = targetProps.defaultBrushArea;\n    var defaultBrushHasArea = defaultBrushArea !== undefined && defaultBrushArea !== \"none\";\n    var mutatedProps = {\n      isPanning: false,\n      isSelecting: false\n    }; // if the mouse hasn't moved since a mouseDown event, select the default brush area\n\n    if ((allowResize || defaultBrushHasArea) && (x1 === x2 || y1 === y2)) {\n      var cachedDomain = targetProps.cachedCurrentDomain || currentDomain;\n      var defaultDomain = this.getDefaultBrushArea(targetProps, cachedDomain, evt);\n      mutatedProps.currentDomain = defaultDomain;\n\n      if (_isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(defaultDomain, _defaults({}, mutatedProps, targetProps));\n      }\n\n      if (_isFunction(onBrushDomainChangeEnd)) {\n        onBrushDomainChangeEnd(defaultDomain, _defaults({}, mutatedProps, targetProps));\n      }\n\n      if (_isFunction(onBrushCleared)) {\n        onBrushCleared(defaultDomain, _defaults({}, mutatedProps, targetProps));\n      }\n    } else if (allowDrag && isPanning || allowResize && isSelecting) {\n      if (_isFunction(onBrushDomainChangeEnd)) {\n        onBrushDomainChangeEnd(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n    }\n\n    return [{\n      target: \"parent\",\n      mutation: function () {\n        return mutatedProps;\n      }\n    }];\n  },\n  onMouseLeave: function () {\n    return [{\n      target: \"parent\",\n      mutation: function () {\n        return {\n          isPanning: false,\n          isSelecting: false\n        };\n      }\n    }];\n  }\n};\nexport default _objectSpread({}, Helpers, {\n  onMouseDown: Helpers.onMouseDown.bind(Helpers),\n  onMouseUp: Helpers.onMouseUp.bind(Helpers),\n  onMouseLeave: Helpers.onMouseLeave.bind(Helpers),\n  onMouseMove: _throttle(Helpers.onMouseMove.bind(Helpers), 16, // eslint-disable-line no-magic-numbers\n  {\n    leading: true,\n    trailing: false\n  })\n});","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/node_modules/victory-brush-container/es/brush-helpers.js"],"names":["_mapValues","_defaults","_isFunction","_throttle","_assign","_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","prototype","toString","call","Array","from","isArray","arr2","Selection","isEqual","Helpers","getDimension","props","horizontal","brushDimension","withinBounds","point","bounds","padding","_mapValues2","Number","x1","x2","y1","y2","_mapValues3","x","y","Math","min","max","getDomainBox","fullDomain","selectedDomain","domain","fullCoords","getDomainCoordinates","selectedCoords","apply","getHandles","domainBox","minX","maxX","minY","maxY","handleWidth","left","right","top","bottom","getActiveHandles","_this","handles","activeHandles","reduce","memo","opt","getResizeMutation","box","mutations","current","getMinimumDomain","MAX_SAFE_INTEGER","getDefaultBrushArea","targetProps","cachedDomain","evt","defaultBrushArea","scale","brushBox","parentSVG","getParentSVG","pannedBox","panBox","brushDomain","startX","startY","getSVGEventCoordinates","fullDomainBox","constrainedBox","constrainBox","getBounds","getSelectionMutation","_ref","delta","_mapValues4","abs","hasMoved","mouseMoveThreshold","xMoved","yMoved","onMouseDown","_this2","preventDefault","cachedBrushDomain","allowResize","allowDrag","allowDraw","_Selection$getSVGEven","currentDomain","mutation","isSelecting","isPanning","cachedCurrentDomain","onMouseMove","onBrushDomainChange","_Selection$getSVGEven2","mutatedProps","_currentDomain","_mutatedProps","onMouseUp","onBrushDomainChangeEnd","onBrushCleared","defaultBrushHasArea","undefined","defaultDomain","onMouseLeave","bind","leading","trailing"],"mappings":"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","sourcesContent":["import _mapValues from \"lodash/mapValues\";\nimport _defaults from \"lodash/defaults\";\nimport _isFunction from \"lodash/isFunction\";\nimport _throttle from \"lodash/throttle\";\nimport _assign from \"lodash/assign\";\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nimport { Selection } from \"victory-core\";\nimport isEqual from \"react-fast-compare\";\nvar Helpers = {\n  getDimension: function (props) {\n    var horizontal = props.horizontal,\n        brushDimension = props.brushDimension;\n\n    if (!horizontal || !brushDimension) {\n      return brushDimension;\n    }\n\n    return brushDimension === \"x\" ? \"y\" : \"x\";\n  },\n  withinBounds: function (point, bounds, padding) {\n    var _mapValues2 = _mapValues(bounds, Number),\n        x1 = _mapValues2.x1,\n        x2 = _mapValues2.x2,\n        y1 = _mapValues2.y1,\n        y2 = _mapValues2.y2;\n\n    var _mapValues3 = _mapValues(point, Number),\n        x = _mapValues3.x,\n        y = _mapValues3.y;\n\n    padding = padding ? padding / 2 : 0;\n    return x + padding >= Math.min(x1, x2) && x - padding <= Math.max(x1, x2) && y + padding >= Math.min(y1, y2) && y - padding <= Math.max(y1, y2);\n  },\n  getDomainBox: function (props, fullDomain, selectedDomain) {\n    var brushDimension = this.getDimension(props);\n    fullDomain = _defaults({}, fullDomain, props.domain);\n    selectedDomain = _defaults({}, selectedDomain, fullDomain);\n    var fullCoords = Selection.getDomainCoordinates(props, fullDomain);\n    var selectedCoords = Selection.getDomainCoordinates(props, selectedDomain);\n    return {\n      x1: brushDimension !== \"y\" ? Math.min.apply(Math, _toConsumableArray(selectedCoords.x)) : Math.min.apply(Math, _toConsumableArray(fullCoords.x)),\n      x2: brushDimension !== \"y\" ? Math.max.apply(Math, _toConsumableArray(selectedCoords.x)) : Math.max.apply(Math, _toConsumableArray(fullCoords.x)),\n      y1: brushDimension !== \"x\" ? Math.min.apply(Math, _toConsumableArray(selectedCoords.y)) : Math.min.apply(Math, _toConsumableArray(fullCoords.y)),\n      y2: brushDimension !== \"x\" ? Math.max.apply(Math, _toConsumableArray(selectedCoords.y)) : Math.max.apply(Math, _toConsumableArray(fullCoords.y))\n    };\n  },\n  getHandles: function (props, domainBox) {\n    var brushDimension = this.getDimension(props);\n    var x1 = domainBox.x1,\n        x2 = domainBox.x2,\n        y1 = domainBox.y1,\n        y2 = domainBox.y2;\n    var minX = Math.min(x1, x2);\n    var maxX = Math.max(x1, x2);\n    var minY = Math.min(y1, y2);\n    var maxY = Math.max(y1, y2);\n    var handleWidth = props.handleWidth / 2;\n    return {\n      left: brushDimension !== \"y\" && {\n        x1: minX - handleWidth,\n        x2: minX + handleWidth,\n        y1: y1,\n        y2: y2\n      },\n      right: brushDimension !== \"y\" && {\n        x1: maxX - handleWidth,\n        x2: maxX + handleWidth,\n        y1: y1,\n        y2: y2\n      },\n      top: brushDimension !== \"x\" && {\n        x1: x1,\n        x2: x2,\n        y1: minY - handleWidth,\n        y2: minY + handleWidth\n      },\n      bottom: brushDimension !== \"x\" && {\n        x1: x1,\n        x2: x2,\n        y1: maxY - handleWidth,\n        y2: maxY + handleWidth\n      }\n    };\n  },\n  getActiveHandles: function (point, props, domainBox) {\n    var _this = this;\n\n    var handles = this.getHandles(props, domainBox);\n    var activeHandles = [\"top\", \"bottom\", \"left\", \"right\"].reduce(function (memo, opt) {\n      memo = handles[opt] && _this.withinBounds(point, handles[opt]) ? memo.concat(opt) : memo;\n      return memo;\n    }, []);\n    return activeHandles.length && activeHandles;\n  },\n  getResizeMutation: function (box, handles) {\n    var x1 = box.x1,\n        y1 = box.y1,\n        x2 = box.x2,\n        y2 = box.y2;\n    var mutations = {\n      left: {\n        x1: Math.max(x1, x2),\n        x2: Math.min(x1, x2),\n        y1: y1,\n        y2: y2\n      },\n      right: {\n        x1: Math.min(x1, x2),\n        x2: Math.max(x1, x2),\n        y1: y1,\n        y2: y2\n      },\n      top: {\n        y1: Math.max(y1, y2),\n        y2: Math.min(y1, y2),\n        x1: x1,\n        x2: x2\n      },\n      bottom: {\n        y1: Math.min(y1, y2),\n        y2: Math.max(y1, y2),\n        x1: x1,\n        x2: x2\n      }\n    };\n    return handles.reduce(function (memo, current) {\n      return _assign(memo, mutations[current]);\n    }, {});\n  },\n  getMinimumDomain: function () {\n    return {\n      x: [0, 1 / Number.MAX_SAFE_INTEGER],\n      y: [0, 1 / Number.MAX_SAFE_INTEGER]\n    };\n  },\n  getDefaultBrushArea: function (targetProps, cachedDomain, evt) {\n    var defaultBrushArea = targetProps.defaultBrushArea,\n        domain = targetProps.domain,\n        fullDomain = targetProps.fullDomain,\n        scale = targetProps.scale,\n        horizontal = targetProps.horizontal;\n\n    if (defaultBrushArea === \"none\") {\n      return this.getMinimumDomain();\n    } else if (defaultBrushArea === \"disable\") {\n      return cachedDomain;\n    } else if (defaultBrushArea === \"move\") {\n      var brushBox = this.getDomainBox(targetProps, fullDomain, cachedDomain);\n      var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n      var pannedBox = this.panBox(_objectSpread({}, targetProps, brushBox, {\n        brushDomain: cachedDomain,\n        startX: (brushBox.x1 + brushBox.x2) / 2,\n        startY: (brushBox.y1 + brushBox.y2) / 2\n      }), Selection.getSVGEventCoordinates(evt, parentSVG));\n      var fullDomainBox = targetProps.fullDomainBox || this.getDomainBox(targetProps, fullDomain);\n      var constrainedBox = this.constrainBox(pannedBox, fullDomainBox);\n      return Selection.getBounds(_objectSpread({}, constrainedBox, {\n        scale: scale,\n        horizontal: horizontal\n      }));\n    } else {\n      return domain;\n    }\n  },\n  getSelectionMutation: function (point, box, brushDimension) {\n    var x = point.x,\n        y = point.y;\n    var x1 = box.x1,\n        x2 = box.x2,\n        y1 = box.y1,\n        y2 = box.y2;\n    return {\n      x1: brushDimension !== \"y\" ? x : x1,\n      y1: brushDimension !== \"x\" ? y : y1,\n      x2: brushDimension !== \"y\" ? x : x2,\n      y2: brushDimension !== \"x\" ? y : y2\n    };\n  },\n  panBox: function (props, point) {\n    var domain = props.domain,\n        startX = props.startX,\n        startY = props.startY;\n    var brushDimension = this.getDimension(props);\n\n    var brushDomain = _defaults({}, props.brushDomain, domain);\n\n    var fullDomain = _defaults({}, props.fullDomain, domain);\n\n    var _ref = props.x1 ? props : this.getDomainBox(props, fullDomain, brushDomain),\n        x1 = _ref.x1,\n        x2 = _ref.x2,\n        y1 = _ref.y1,\n        y2 = _ref.y2;\n\n    var x = point.x,\n        y = point.y;\n    var delta = {\n      x: startX ? startX - x : 0,\n      y: startY ? startY - y : 0\n    };\n    return {\n      x1: brushDimension !== \"y\" ? Math.min(x1, x2) - delta.x : Math.min(x1, x2),\n      x2: brushDimension !== \"y\" ? Math.max(x1, x2) - delta.x : Math.max(x1, x2),\n      y1: brushDimension !== \"x\" ? Math.min(y1, y2) - delta.y : Math.min(y1, y2),\n      y2: brushDimension !== \"x\" ? Math.max(y1, y2) - delta.y : Math.max(y1, y2)\n    };\n  },\n  constrainBox: function (box, fullDomainBox) {\n    var _mapValues4 = _mapValues(fullDomainBox, Number),\n        x1 = _mapValues4.x1,\n        y1 = _mapValues4.y1,\n        x2 = _mapValues4.x2,\n        y2 = _mapValues4.y2;\n\n    return {\n      x1: box.x2 > x2 ? x2 - Math.abs(box.x2 - box.x1) : Math.max(box.x1, x1),\n      y1: box.y2 > y2 ? y2 - Math.abs(box.y2 - box.y1) : Math.max(box.y1, y1),\n      x2: box.x1 < x1 ? x1 + Math.abs(box.x2 - box.x1) : Math.min(box.x2, x2),\n      y2: box.y1 < y1 ? y1 + Math.abs(box.y2 - box.y1) : Math.min(box.y2, y2)\n    };\n  },\n  hasMoved: function (props) {\n    var x1 = props.x1,\n        x2 = props.x2,\n        y1 = props.y1,\n        y2 = props.y2,\n        mouseMoveThreshold = props.mouseMoveThreshold;\n    var brushDimension = this.getDimension(props);\n    var xMoved = Math.abs(x1 - x2) >= mouseMoveThreshold;\n    var yMoved = Math.abs(y1 - y2) >= mouseMoveThreshold;\n\n    switch (brushDimension) {\n      case \"x\":\n        return xMoved;\n\n      case \"y\":\n        return yMoved;\n\n      default:\n        return xMoved || yMoved;\n    }\n  },\n  // eslint-disable-next-line max-statements, complexity\n  onMouseDown: function (evt, targetProps) {\n    var _this2 = this;\n\n    evt.preventDefault();\n    var handleWidth = targetProps.handleWidth,\n        cachedBrushDomain = targetProps.cachedBrushDomain,\n        domain = targetProps.domain,\n        allowResize = targetProps.allowResize,\n        allowDrag = targetProps.allowDrag,\n        allowDraw = targetProps.allowDraw;\n    var brushDimension = this.getDimension(targetProps); // Don't trigger events for static brushes\n\n    if (!allowResize && !allowDrag) {\n      return {};\n    }\n\n    var fullDomainBox = targetProps.fullDomainBox || this.getDomainBox(targetProps, domain);\n    var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n\n    var _Selection$getSVGEven = Selection.getSVGEventCoordinates(evt, parentSVG),\n        x = _Selection$getSVGEven.x,\n        y = _Selection$getSVGEven.y; // Ignore events that occur outside of the maximum domain region\n\n\n    if (!this.withinBounds({\n      x: x,\n      y: y\n    }, fullDomainBox, handleWidth)) {\n      return {};\n    }\n\n    var brushDomain = _defaults({}, targetProps.brushDomain, domain);\n\n    var currentDomain = isEqual(brushDomain, cachedBrushDomain) ? targetProps.currentDomain || brushDomain || domain : brushDomain || domain;\n    var domainBox = this.getDomainBox(targetProps, domain, currentDomain);\n    var activeHandles = allowResize && this.getActiveHandles({\n      x: x,\n      y: y\n    }, targetProps, domainBox); // If the event occurs in any of the handle regions, start a resize\n\n    if (activeHandles) {\n      return [{\n        target: \"parent\",\n        mutation: function () {\n          return _objectSpread({\n            isSelecting: true,\n            domainBox: domainBox,\n            fullDomainBox: fullDomainBox,\n            cachedBrushDomain: brushDomain,\n            currentDomain: currentDomain,\n            parentSVG: parentSVG\n          }, _this2.getResizeMutation(domainBox, activeHandles));\n        }\n      }];\n    } else if (this.withinBounds({\n      x: x,\n      y: y\n    }, domainBox) && !isEqual(domain, currentDomain)) {\n      // if the event occurs within a selected region start a panning event, unless the whole\n      // domain is selected\n      return [{\n        target: \"parent\",\n        mutation: function () {\n          return _objectSpread({\n            isPanning: allowDrag,\n            startX: x,\n            startY: y,\n            domainBox: domainBox,\n            fullDomainBox: fullDomainBox,\n            currentDomain: currentDomain,\n            cachedBrushDomain: brushDomain,\n            parentSVG: parentSVG\n          }, domainBox);\n        }\n      }];\n    } else {\n      // if the event occurs outside the region, or if the whole domain is selected,\n      // start a new selection\n      return allowDraw ? [{\n        target: \"parent\",\n        mutation: function () {\n          return _objectSpread({\n            isSelecting: allowResize,\n            domainBox: domainBox,\n            fullDomainBox: fullDomainBox,\n            parentSVG: parentSVG,\n            cachedBrushDomain: brushDomain,\n            cachedCurrentDomain: currentDomain,\n            currentDomain: _this2.getMinimumDomain()\n          }, _this2.getSelectionMutation({\n            x: x,\n            y: y\n          }, domainBox, brushDimension));\n        }\n      }] : {};\n    }\n  },\n  // eslint-disable-next-line max-statements, complexity\n  onMouseMove: function (evt, targetProps) {\n    // if a panning or selection has not been started, ignore the event\n    if (!targetProps.isPanning && !targetProps.isSelecting) {\n      return {};\n    }\n\n    var scale = targetProps.scale,\n        isPanning = targetProps.isPanning,\n        isSelecting = targetProps.isSelecting,\n        fullDomainBox = targetProps.fullDomainBox,\n        onBrushDomainChange = targetProps.onBrushDomainChange,\n        allowResize = targetProps.allowResize,\n        allowDrag = targetProps.allowDrag,\n        horizontal = targetProps.horizontal,\n        mouseMoveThreshold = targetProps.mouseMoveThreshold;\n    var brushDimension = this.getDimension(targetProps);\n    var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n\n    var _Selection$getSVGEven2 = Selection.getSVGEventCoordinates(evt, parentSVG),\n        x = _Selection$getSVGEven2.x,\n        y = _Selection$getSVGEven2.y; // Ignore events that occur outside of the maximum domain region\n\n\n    if (!allowResize && !allowDrag || !this.withinBounds({\n      x: x,\n      y: y\n    }, fullDomainBox) || mouseMoveThreshold > 0 && !this.hasMoved(_objectSpread({}, targetProps, {\n      x2: x,\n      y2: y\n    }))) {\n      return {};\n    }\n\n    if (allowDrag && isPanning) {\n      var startX = targetProps.startX,\n          startY = targetProps.startY;\n      var pannedBox = this.panBox(targetProps, {\n        x: x,\n        y: y\n      });\n      var constrainedBox = this.constrainBox(pannedBox, fullDomainBox);\n      var currentDomain = Selection.getBounds(_objectSpread({}, constrainedBox, {\n        scale: scale,\n        horizontal: horizontal\n      }));\n\n      var mutatedProps = _objectSpread({\n        currentDomain: currentDomain,\n        parentSVG: parentSVG,\n        startX: pannedBox.x2 >= fullDomainBox.x2 || pannedBox.x1 <= fullDomainBox.x1 ? startX : x,\n        startY: pannedBox.y2 >= fullDomainBox.y2 || pannedBox.y1 <= fullDomainBox.y1 ? startY : y\n      }, constrainedBox);\n\n      if (_isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n\n      return [{\n        target: \"parent\",\n        mutation: function () {\n          return mutatedProps;\n        }\n      }];\n    } else if (allowResize && isSelecting) {\n      var x2 = brushDimension !== \"y\" ? x : targetProps.x2;\n      var y2 = brushDimension !== \"x\" ? y : targetProps.y2;\n\n      var _currentDomain = Selection.getBounds({\n        x2: x2,\n        y2: y2,\n        x1: targetProps.x1,\n        y1: targetProps.y1,\n        scale: scale,\n        horizontal: horizontal\n      });\n\n      var _mutatedProps = {\n        x2: x2,\n        y2: y2,\n        currentDomain: _currentDomain,\n        parentSVG: parentSVG\n      };\n\n      if (_isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(_currentDomain, _defaults({}, _mutatedProps, targetProps));\n      }\n\n      return [{\n        target: \"parent\",\n        mutation: function () {\n          return _mutatedProps;\n        }\n      }];\n    }\n\n    return {};\n  },\n  onMouseUp: function (evt, targetProps) {\n    // eslint-disable-line max-statements, complexity\n    var x1 = targetProps.x1,\n        y1 = targetProps.y1,\n        x2 = targetProps.x2,\n        y2 = targetProps.y2,\n        isPanning = targetProps.isPanning,\n        isSelecting = targetProps.isSelecting,\n        onBrushDomainChange = targetProps.onBrushDomainChange,\n        onBrushDomainChangeEnd = targetProps.onBrushDomainChangeEnd,\n        onBrushCleared = targetProps.onBrushCleared,\n        currentDomain = targetProps.currentDomain,\n        allowResize = targetProps.allowResize,\n        allowDrag = targetProps.allowDrag,\n        defaultBrushArea = targetProps.defaultBrushArea;\n    var defaultBrushHasArea = defaultBrushArea !== undefined && defaultBrushArea !== \"none\";\n    var mutatedProps = {\n      isPanning: false,\n      isSelecting: false\n    }; // if the mouse hasn't moved since a mouseDown event, select the default brush area\n\n    if ((allowResize || defaultBrushHasArea) && (x1 === x2 || y1 === y2)) {\n      var cachedDomain = targetProps.cachedCurrentDomain || currentDomain;\n      var defaultDomain = this.getDefaultBrushArea(targetProps, cachedDomain, evt);\n      mutatedProps.currentDomain = defaultDomain;\n\n      if (_isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(defaultDomain, _defaults({}, mutatedProps, targetProps));\n      }\n\n      if (_isFunction(onBrushDomainChangeEnd)) {\n        onBrushDomainChangeEnd(defaultDomain, _defaults({}, mutatedProps, targetProps));\n      }\n\n      if (_isFunction(onBrushCleared)) {\n        onBrushCleared(defaultDomain, _defaults({}, mutatedProps, targetProps));\n      }\n    } else if (allowDrag && isPanning || allowResize && isSelecting) {\n      if (_isFunction(onBrushDomainChangeEnd)) {\n        onBrushDomainChangeEnd(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n    }\n\n    return [{\n      target: \"parent\",\n      mutation: function () {\n        return mutatedProps;\n      }\n    }];\n  },\n  onMouseLeave: function () {\n    return [{\n      target: \"parent\",\n      mutation: function () {\n        return {\n          isPanning: false,\n          isSelecting: false\n        };\n      }\n    }];\n  }\n};\nexport default _objectSpread({}, Helpers, {\n  onMouseDown: Helpers.onMouseDown.bind(Helpers),\n  onMouseUp: Helpers.onMouseUp.bind(Helpers),\n  onMouseLeave: Helpers.onMouseLeave.bind(Helpers),\n  onMouseMove: _throttle(Helpers.onMouseMove.bind(Helpers), 16, // eslint-disable-line no-magic-numbers\n  {\n    leading: true,\n    trailing: false\n  })\n});"]},"metadata":{},"sourceType":"module"}