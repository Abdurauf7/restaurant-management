{"ast":null,"code":"import httpService from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\nimport { openNotification } from \"../components/custom\";\nexport function getReservation() {\n  return httpService.get(apiUrl + \"reservation\");\n}\nexport function addReservation(data) {\n  return httpService.post(apiUrl + \"reservation/add\", data).then(res => {\n    if (res.data.status === 200) {\n      window.location.reload();\n    } else if (res.data.status === 404) {\n      openNotification(\"error\", \"Table already reserved\", \"Check reserved table\");\n    }\n  });\n}\nexport function deleteReservation(item) {\n  return httpService.delete(apiUrl + `reservation/delete/${item}`);\n}","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/services/reservationServices.js"],"names":["httpService","apiUrl","openNotification","getReservation","get","addReservation","data","post","then","res","status","window","location","reload","deleteReservation","item","delete"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AAEA,OAAO,SAASC,cAAT,GAA0B;AAC/B,SAAOH,WAAW,CAACI,GAAZ,CAAgBH,MAAM,GAAG,aAAzB,CAAP;AACD;AAED,OAAO,SAASI,cAAT,CAAwBC,IAAxB,EAA8B;AACnC,SAAON,WAAW,CAACO,IAAZ,CAAiBN,MAAM,GAAG,iBAA1B,EAA6CK,IAA7C,EAAmDE,IAAnD,CAAwDC,GAAG,IAAI;AACpE,QAAIA,GAAG,CAACH,IAAJ,CAASI,MAAT,KAAoB,GAAxB,EAA6B;AAC3BC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KAFD,MAEO,IAAIJ,GAAG,CAACH,IAAJ,CAASI,MAAT,KAAoB,GAAxB,EAA6B;AAClCR,MAAAA,gBAAgB,CACd,OADc,EAEd,wBAFc,EAGd,sBAHc,CAAhB;AAKD;AACF,GAVM,CAAP;AAWD;AAED,OAAO,SAASY,iBAAT,CAA2BC,IAA3B,EAAiC;AACtC,SAAOf,WAAW,CAACgB,MAAZ,CAAmBf,MAAM,GAAI,sBAAqBc,IAAK,EAAvD,CAAP;AACD","sourcesContent":["import httpService from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\nimport { openNotification } from \"../components/custom\";\n\nexport function getReservation() {\n  return httpService.get(apiUrl + \"reservation\");\n}\n\nexport function addReservation(data) {\n  return httpService.post(apiUrl + \"reservation/add\", data).then(res => {\n    if (res.data.status === 200) {\n      window.location.reload();\n    } else if (res.data.status === 404) {\n      openNotification(\n        \"error\",\n        \"Table already reserved\",\n        \"Check reserved table\"\n      );\n    }\n  });\n}\n\nexport function deleteReservation(item) {\n  return httpService.delete(apiUrl + `reservation/delete/${item}`);\n}\n"]},"metadata":{},"sourceType":"module"}