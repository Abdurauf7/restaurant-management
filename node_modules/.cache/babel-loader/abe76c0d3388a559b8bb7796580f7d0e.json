{"ast":null,"code":"function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nimport * as d3Shape from \"d3-shape\";\nimport { circle, point } from \"./geometry-helper-methods\";\n\nvar getPosition = function (props, width) {\n  var x = props.x,\n      x0 = props.x0,\n      y = props.y,\n      y0 = props.y0,\n      horizontal = props.horizontal;\n  var alignment = props.alignment || \"middle\";\n  var size = alignment === \"middle\" ? width / 2 : width;\n  var sign = horizontal ? -1 : 1;\n\n  if (horizontal) {\n    return {\n      x0: x0,\n      x1: x,\n      y0: alignment === \"start\" ? y : y - sign * size,\n      y1: alignment === \"end\" ? y : y + sign * size\n    };\n  }\n\n  return {\n    x0: alignment === \"start\" ? x : x - sign * size,\n    x1: alignment === \"end\" ? x : x + sign * size,\n    y0: y0,\n    y1: y\n  };\n};\n\nvar getAngle = function (props, index) {\n  var data = props.data,\n      scale = props.scale;\n  var x = data[index]._x1 === undefined ? \"_x\" : \"_x1\";\n  return scale.x(data[index][x]);\n};\n\nvar getAngularWidth = function (props, width) {\n  var scale = props.scale;\n  var range = scale.y.range();\n  var r = Math.max.apply(Math, _toConsumableArray(range));\n  var angularRange = Math.abs(scale.x.range()[1] - scale.x.range()[0]);\n  return width / (2 * Math.PI * r) * angularRange;\n};\n\nvar transformAngle = function (angle) {\n  return -1 * angle + Math.PI / 2;\n};\n\nexport var getCustomBarPath = function (props, width) {\n  var getPath = props.getPath;\n\n  var propsWithCalculatedValues = _objectSpread({}, props, getPosition(props, width));\n\n  return getPath(propsWithCalculatedValues);\n};\n\nvar getStartAngle = function (props, index) {\n  var data = props.data,\n      scale = props.scale,\n      alignment = props.alignment;\n  var currentAngle = getAngle(props, index);\n  var angularRange = Math.abs(scale.x.range()[1] - scale.x.range()[0]);\n  var previousAngle = index === 0 ? getAngle(props, data.length - 1) - Math.PI * 2 : getAngle(props, index - 1);\n\n  if (index === 0 && angularRange < 2 * Math.PI) {\n    return scale.x.range()[0];\n  } else if (alignment === \"start\" || alignment === \"end\") {\n    return alignment === \"start\" ? previousAngle : currentAngle;\n  } else {\n    return (currentAngle + previousAngle) / 2;\n  }\n};\n\nvar getEndAngle = function (props, index) {\n  var data = props.data,\n      scale = props.scale,\n      alignment = props.alignment;\n  var currentAngle = getAngle(props, index);\n  var angularRange = Math.abs(scale.x.range()[1] - scale.x.range()[0]);\n  var lastAngle = scale.x.range()[1] === 2 * Math.PI ? getAngle(props, 0) + Math.PI * 2 : scale.x.range()[1];\n  var nextAngle = index === data.length - 1 ? getAngle(props, 0) + Math.PI * 2 : getAngle(props, index + 1);\n\n  if (index === data.length - 1 && angularRange < 2 * Math.PI) {\n    return lastAngle;\n  } else if (alignment === \"start\" || alignment === \"end\") {\n    return alignment === \"start\" ? currentAngle : nextAngle;\n  } else {\n    return (currentAngle + nextAngle) / 2;\n  }\n};\n\nvar mapPointsToPath = function (coords, cornerRadius, direction) {\n  var topLeftPath = \"\".concat(cornerRadius.topLeft, \" \").concat(cornerRadius.topLeft, \" \").concat(direction);\n  var topRightPath = \"\".concat(cornerRadius.topRight, \" \").concat(cornerRadius.topRight, \" \").concat(direction);\n  var bottomLeftPath = \"\".concat(cornerRadius.bottomLeft, \" \").concat(cornerRadius.bottomLeft, \" \").concat(direction);\n  var bottomRightPath = \"\".concat(cornerRadius.bottomRight, \" \").concat(cornerRadius.bottomRight, \" \").concat(direction);\n  var commands = [\"M\", \"A \".concat(bottomLeftPath, \",\"), \"L\", \"A \".concat(topLeftPath, \",\"), \"L\", \"A \".concat(topRightPath, \",\"), \"L\", \"A \".concat(bottomRightPath, \",\")];\n  var path = commands.reduce(function (acc, command, i) {\n    acc += \"\".concat(command, \" \").concat(coords[i].x, \", \").concat(coords[i].y, \" \\n\");\n    return acc;\n  }, \"\");\n  return \"\".concat(path, \" z\");\n};\n\nvar getVerticalBarPoints = function (position, sign, cr) {\n  var x0 = position.x0,\n      x1 = position.x1,\n      y0 = position.y0,\n      y1 = position.y1; // eslint-disable-next-line max-statements, max-len\n\n  var getHalfPoints = function (side) {\n    var isLeft = side === \"Left\";\n    var signL = isLeft ? 1 : -1;\n    var x = isLeft ? x0 : x1;\n    var bottomPoint = {\n      x: x + signL * cr[\"bottom\".concat(side)],\n      y: y0\n    };\n    var bottomMiddlePoint = {\n      x: x,\n      y: y0 - sign * cr[\"bottom\".concat(side)]\n    };\n    var topMiddlePoint = {\n      x: x,\n      y: y1 + sign * cr[\"top\".concat(side)]\n    };\n    var topPoint = {\n      x: x + signL * cr[\"top\".concat(side)],\n      y: y1\n    };\n    var hasIntersection = sign === 1 ? y0 - cr[\"bottom\".concat(side)] < y1 + cr[\"top\".concat(side)] : y0 + cr[\"bottom\".concat(side)] > y1 - cr[\"top\".concat(side)];\n\n    if (hasIntersection) {\n      var topCenter = point(x + signL * cr[\"top\".concat(side)], y1 + sign * cr[\"top\".concat(side)]);\n      var topCircle = circle(topCenter, cr[\"top\".concat(side)]);\n      var bottomCenter = point(x + signL * cr[\"bottom\".concat(side)], y0 - sign * cr[\"bottom\".concat(side)]);\n      var bottomCircle = circle(bottomCenter, cr[\"bottom\".concat(side)]);\n      var circleIntersection = topCircle.intersection(bottomCircle);\n      var hasArcIntersection = circleIntersection.length > 0;\n\n      if (hasArcIntersection) {\n        var arcIntersection = circleIntersection[isLeft ? 0 : 1];\n        bottomMiddlePoint = {\n          x: arcIntersection.x,\n          y: arcIntersection.y\n        };\n        topMiddlePoint = {\n          x: arcIntersection.x,\n          y: arcIntersection.y\n        };\n      } else {\n        var hasBottomLineTopArcIntersection = cr[\"top\".concat(side)] > cr[\"bottom\".concat(side)];\n\n        if (hasBottomLineTopArcIntersection) {\n          var newX = topCircle.solveX(y0)[isLeft ? 0 : 1];\n          bottomPoint = {\n            x: newX,\n            y: y0\n          };\n          bottomMiddlePoint = {\n            x: newX,\n            y: y0\n          };\n          topMiddlePoint = {\n            x: newX,\n            y: y0\n          };\n        } else {\n          var _newX = bottomCircle.solveX(y1)[isLeft ? 0 : 1];\n          bottomMiddlePoint = {\n            x: _newX,\n            y: y1\n          };\n          topMiddlePoint = {\n            x: _newX,\n            y: y1\n          };\n          topPoint = {\n            x: _newX,\n            y: y1\n          };\n        }\n      }\n    }\n\n    var points = [bottomPoint, bottomMiddlePoint, topMiddlePoint, topPoint];\n    return isLeft ? points : points.reverse();\n  };\n\n  return getHalfPoints(\"Left\").concat(getHalfPoints(\"Right\"));\n};\n\nvar getHorizontalBarPoints = function (position, sign, cr) {\n  var y0 = position.y0,\n      y1 = position.y1;\n  var x0 = position.x0 < position.x1 ? position.x0 : position.x1;\n  var x1 = position.x0 < position.x1 ? position.x1 : position.x0; // eslint-disable-next-line max-statements, max-len\n\n  var getHalfPoints = function (side) {\n    var isTop = side === \"top\";\n    var signL = isTop ? -1 : 1;\n    var y = isTop ? y1 : y0;\n    var leftPoint = {\n      x: x0,\n      y: y - signL * cr[\"\".concat(side, \"Left\")]\n    };\n    var leftMiddlePoint = {\n      x: x0 + cr[\"\".concat(side, \"Left\")],\n      y: y\n    };\n    var rightMiddlePoint = {\n      x: x1 - cr[\"\".concat(side, \"Right\")],\n      y: y\n    };\n    var rightPoint = {\n      x: x1,\n      y: y - signL * cr[\"\".concat(side, \"Right\")]\n    };\n    var hasIntersection = leftMiddlePoint.x > rightMiddlePoint.x;\n\n    if (hasIntersection) {\n      var leftCenter = point(x0 + cr[\"\".concat(side, \"Left\")], y - signL * cr[\"\".concat(side, \"Left\")]);\n      var leftCircle = circle(leftCenter, cr[\"\".concat(side, \"Left\")]);\n      var rightCenter = point(x1 - cr[\"\".concat(side, \"Right\")], y - signL * cr[\"\".concat(side, \"Right\")]);\n      var rightCircle = circle(rightCenter, cr[\"\".concat(side, \"Right\")]);\n      var circleIntersection = leftCircle.intersection(rightCircle);\n      var hasArcIntersection = circleIntersection.length > 0;\n\n      if (hasArcIntersection) {\n        var arcIntersection = circleIntersection[sign > 0 ? 1 : 0];\n        leftMiddlePoint = {\n          x: arcIntersection.x,\n          y: arcIntersection.y\n        };\n        rightMiddlePoint = {\n          x: arcIntersection.x,\n          y: arcIntersection.y\n        };\n      } else {\n        var hasLeftLineRightArcIntersection = cr[\"\".concat(side, \"Right\")] > cr[\"\".concat(side, \"Left\")];\n\n        if (hasLeftLineRightArcIntersection) {\n          var newY = rightCircle.solveY(x0)[isTop ? 0 : 1];\n          leftPoint = {\n            x: x0,\n            y: newY\n          };\n          leftMiddlePoint = {\n            x: x0,\n            y: newY\n          };\n          rightMiddlePoint = {\n            x: x0,\n            y: newY\n          };\n        } else {\n          var _newY = leftCircle.solveY(x1)[isTop ? 0 : 1];\n          rightPoint = {\n            x: x1,\n            y: _newY\n          };\n          rightMiddlePoint = {\n            x: x1,\n            y: _newY\n          };\n          leftMiddlePoint = {\n            x: x1,\n            y: _newY\n          };\n        }\n      }\n    }\n\n    return [leftPoint, leftMiddlePoint, rightMiddlePoint, rightPoint];\n  };\n\n  var topPoints = getHalfPoints(\"top\");\n  var bottomPoints = getHalfPoints(\"bottom\"); // eslint-disable-next-line no-magic-numbers\n\n  return [bottomPoints[1], bottomPoints[0]].concat(_toConsumableArray(topPoints), [bottomPoints[3], bottomPoints[2]]);\n};\n\nexport var getVerticalBarPath = function (props, width, cornerRadius) {\n  var position = getPosition(props, width);\n  var sign = position.y0 > position.y1 ? 1 : -1;\n  var direction = sign > 0 ? \"0 0 1\" : \"0 0 0\";\n  var points = getVerticalBarPoints(position, sign, cornerRadius);\n  return mapPointsToPath(points, cornerRadius, direction);\n};\nexport var getHorizontalBarPath = function (props, width, cornerRadius) {\n  var position = getPosition(props, width);\n  var sign = position.x0 < position.x1 ? 1 : -1;\n  var direction = \"0 0 1\";\n  var cr = {\n    topRight: sign > 0 ? cornerRadius.topLeft : cornerRadius.bottomLeft,\n    bottomRight: sign > 0 ? cornerRadius.topRight : cornerRadius.bottomRight,\n    bottomLeft: sign > 0 ? cornerRadius.bottomRight : cornerRadius.topRight,\n    topLeft: sign > 0 ? cornerRadius.bottomLeft : cornerRadius.topLeft\n  };\n  var points = getHorizontalBarPoints(position, sign, cr);\n  return mapPointsToPath(points, cr, direction);\n};\nexport var getVerticalPolarBarPath = function (props, cornerRadius) {\n  var datum = props.datum,\n      scale = props.scale,\n      index = props.index,\n      alignment = props.alignment,\n      style = props.style;\n  var r1 = scale.y(datum._y0 || 0);\n  var r2 = scale.y(datum._y1 !== undefined ? datum._y1 : datum._y);\n  var currentAngle = scale.x(datum._x1 !== undefined ? datum._x1 : datum._x);\n  var start;\n  var end;\n\n  if (style.width) {\n    var width = getAngularWidth(props, style.width);\n    var size = alignment === \"middle\" ? width / 2 : width;\n    start = alignment === \"start\" ? currentAngle : currentAngle - size;\n    end = alignment === \"end\" ? currentAngle : currentAngle + size;\n  } else {\n    start = getStartAngle(props, index);\n    end = getEndAngle(props, index);\n  }\n\n  var getPath = function (edge) {\n    var pathFunction = d3Shape.arc().innerRadius(r1).outerRadius(r2).startAngle(transformAngle(start)).endAngle(transformAngle(end)).cornerRadius(cornerRadius[edge]);\n    return pathFunction();\n  };\n\n  var getPathData = function (edge) {\n    var rightPath = getPath(\"\".concat(edge, \"Right\"));\n    var rightMoves = rightPath.match(/[A-Z]/g);\n    var rightCoords = rightPath.split(/[A-Z]/).slice(1);\n    var rightMiddle = rightMoves.indexOf(\"L\");\n    var leftPath = getPath(\"\".concat(edge, \"Left\"));\n    var leftMoves = leftPath.match(/[A-Z]/g);\n    var leftCoords = leftPath.split(/[A-Z]/).slice(1);\n    var leftMiddle = leftMoves.indexOf(\"L\");\n    return {\n      rightMoves: rightMoves,\n      rightCoords: rightCoords,\n      rightMiddle: rightMiddle,\n      leftMoves: leftMoves,\n      leftCoords: leftCoords,\n      leftMiddle: leftMiddle\n    };\n  }; // eslint-disable-next-line max-statements\n\n\n  var getTopPath = function () {\n    var topRight = cornerRadius.topRight,\n        topLeft = cornerRadius.topLeft;\n    var arcLength = r2 * Math.abs(end - start);\n\n    var _getPathData = getPathData(\"top\"),\n        rightMoves = _getPathData.rightMoves,\n        rightCoords = _getPathData.rightCoords,\n        rightMiddle = _getPathData.rightMiddle,\n        leftMoves = _getPathData.leftMoves,\n        leftCoords = _getPathData.leftCoords,\n        leftMiddle = _getPathData.leftMiddle;\n\n    var moves;\n    var coords;\n\n    if (topRight === topLeft || arcLength < 2 * topRight + 2 * topLeft) {\n      moves = topRight > topLeft ? rightMoves : leftMoves;\n      coords = topRight > topLeft ? rightCoords : leftCoords;\n    } else {\n      // eslint-disable-next-line no-magic-numbers\n      var isShort = function (middle) {\n        return middle < 3;\n      };\n\n      var rightOffset = topLeft > topRight && isShort(rightMiddle) ? 1 : 2;\n      var leftOffset;\n\n      if (topRight > topLeft) {\n        var defaultOffset = isShort(rightMiddle) ? leftMiddle : leftMiddle - 2;\n        leftOffset = isShort(leftMiddle) ? leftMiddle - 1 : defaultOffset;\n      } else {\n        var _defaultOffset = isShort(leftMiddle) ? 1 : 2;\n\n        leftOffset = isShort(rightMiddle) ? _defaultOffset : leftMiddle - 2;\n      }\n\n      moves = _toConsumableArray(rightMoves.slice(0, rightOffset)).concat(_toConsumableArray(leftMoves.slice(leftOffset)));\n      coords = _toConsumableArray(rightCoords.slice(0, rightOffset)).concat(_toConsumableArray(leftCoords.slice(leftOffset)));\n    }\n\n    var middle = moves.indexOf(\"L\");\n    var subMoves = moves.slice(0, middle);\n    var subCoords = coords.slice(0, middle);\n    return subMoves.map(function (m, i) {\n      return {\n        command: m,\n        coords: subCoords[i].split(\",\")\n      };\n    });\n  }; // eslint-disable-next-line max-statements\n\n\n  var getBottomPath = function () {\n    var bottomRight = cornerRadius.bottomRight,\n        bottomLeft = cornerRadius.bottomLeft;\n    var arcLength = r1 * Math.abs(end - start);\n\n    var _getPathData2 = getPathData(\"bottom\"),\n        rightMoves = _getPathData2.rightMoves,\n        rightCoords = _getPathData2.rightCoords,\n        rightMiddle = _getPathData2.rightMiddle,\n        leftMoves = _getPathData2.leftMoves,\n        leftCoords = _getPathData2.leftCoords,\n        leftMiddle = _getPathData2.leftMiddle;\n\n    var moves;\n    var coords;\n\n    if (bottomRight === bottomLeft || arcLength < 2 * bottomRight + 2 * bottomLeft) {\n      moves = bottomRight > bottomLeft ? rightMoves : leftMoves;\n      coords = bottomRight > bottomLeft ? rightCoords : leftCoords;\n    } else {\n      // eslint-disable-next-line no-magic-numbers\n      var isShort = function (m, middle) {\n        return m.length - middle < 4;\n      };\n\n      var shortPath = bottomRight > bottomLeft ? isShort(rightMoves, rightMiddle) : isShort(leftMoves, leftMiddle); // eslint-disable-next-line no-magic-numbers\n\n      var rightOffset = shortPath ? -1 : -3;\n      moves = _toConsumableArray(leftMoves.slice(0, leftMiddle + 2)).concat(_toConsumableArray(rightMoves.slice(rightOffset)));\n      coords = _toConsumableArray(leftCoords.slice(0, leftMiddle + 2)).concat(_toConsumableArray(rightCoords.slice(rightOffset)));\n    }\n\n    var middle = moves.indexOf(\"L\");\n    var subMoves = moves.slice(middle, -1);\n    var subCoords = coords.slice(middle, -1);\n    return subMoves.map(function (m, i) {\n      return {\n        command: m,\n        coords: subCoords[i].split(\",\")\n      };\n    });\n  };\n\n  var topPath = getTopPath();\n  var bottomPath = getBottomPath();\n\n  var moves = _toConsumableArray(topPath).concat(_toConsumableArray(bottomPath));\n\n  var path = moves.reduce(function (memo, move) {\n    memo += \"\".concat(move.command, \" \").concat(move.coords.join());\n    return memo;\n  }, \"\");\n  return \"\".concat(path, \" z\");\n};","map":{"version":3,"sources":["/Users/abdurauf/Desktop/diploma/restaurant-management-system/plov/node_modules/victory-bar/es/path-helper-methods.js"],"names":["_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","prototype","toString","call","Array","from","isArray","arr2","d3Shape","circle","point","getPosition","props","width","x","x0","y","y0","horizontal","alignment","size","sign","x1","y1","getAngle","index","data","scale","_x1","undefined","getAngularWidth","range","r","Math","max","apply","angularRange","abs","PI","transformAngle","angle","getCustomBarPath","getPath","propsWithCalculatedValues","getStartAngle","currentAngle","previousAngle","getEndAngle","lastAngle","nextAngle","mapPointsToPath","coords","cornerRadius","direction","topLeftPath","topLeft","topRightPath","topRight","bottomLeftPath","bottomLeft","bottomRightPath","bottomRight","commands","path","reduce","acc","command","getVerticalBarPoints","position","cr","getHalfPoints","side","isLeft","signL","bottomPoint","bottomMiddlePoint","topMiddlePoint","topPoint","hasIntersection","topCenter","topCircle","bottomCenter","bottomCircle","circleIntersection","intersection","hasArcIntersection","arcIntersection","hasBottomLineTopArcIntersection","newX","solveX","_newX","points","reverse","getHorizontalBarPoints","isTop","leftPoint","leftMiddlePoint","rightMiddlePoint","rightPoint","leftCenter","leftCircle","rightCenter","rightCircle","hasLeftLineRightArcIntersection","newY","solveY","_newY","topPoints","bottomPoints","getVerticalBarPath","getHorizontalBarPath","getVerticalPolarBarPath","datum","style","r1","_y0","r2","_y1","_y","_x","start","end","edge","pathFunction","arc","innerRadius","outerRadius","startAngle","endAngle","getPathData","rightPath","rightMoves","match","rightCoords","split","slice","rightMiddle","indexOf","leftPath","leftMoves","leftCoords","leftMiddle","getTopPath","arcLength","_getPathData","moves","isShort","middle","rightOffset","leftOffset","defaultOffset","_defaultOffset","subMoves","subCoords","map","m","getBottomPath","_getPathData2","shortPath","topPath","bottomPath","memo","move","join"],"mappings":"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","sourcesContent":["function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nimport * as d3Shape from \"d3-shape\";\nimport { circle, point } from \"./geometry-helper-methods\";\n\nvar getPosition = function (props, width) {\n  var x = props.x,\n      x0 = props.x0,\n      y = props.y,\n      y0 = props.y0,\n      horizontal = props.horizontal;\n  var alignment = props.alignment || \"middle\";\n  var size = alignment === \"middle\" ? width / 2 : width;\n  var sign = horizontal ? -1 : 1;\n\n  if (horizontal) {\n    return {\n      x0: x0,\n      x1: x,\n      y0: alignment === \"start\" ? y : y - sign * size,\n      y1: alignment === \"end\" ? y : y + sign * size\n    };\n  }\n\n  return {\n    x0: alignment === \"start\" ? x : x - sign * size,\n    x1: alignment === \"end\" ? x : x + sign * size,\n    y0: y0,\n    y1: y\n  };\n};\n\nvar getAngle = function (props, index) {\n  var data = props.data,\n      scale = props.scale;\n  var x = data[index]._x1 === undefined ? \"_x\" : \"_x1\";\n  return scale.x(data[index][x]);\n};\n\nvar getAngularWidth = function (props, width) {\n  var scale = props.scale;\n  var range = scale.y.range();\n  var r = Math.max.apply(Math, _toConsumableArray(range));\n  var angularRange = Math.abs(scale.x.range()[1] - scale.x.range()[0]);\n  return width / (2 * Math.PI * r) * angularRange;\n};\n\nvar transformAngle = function (angle) {\n  return -1 * angle + Math.PI / 2;\n};\n\nexport var getCustomBarPath = function (props, width) {\n  var getPath = props.getPath;\n\n  var propsWithCalculatedValues = _objectSpread({}, props, getPosition(props, width));\n\n  return getPath(propsWithCalculatedValues);\n};\n\nvar getStartAngle = function (props, index) {\n  var data = props.data,\n      scale = props.scale,\n      alignment = props.alignment;\n  var currentAngle = getAngle(props, index);\n  var angularRange = Math.abs(scale.x.range()[1] - scale.x.range()[0]);\n  var previousAngle = index === 0 ? getAngle(props, data.length - 1) - Math.PI * 2 : getAngle(props, index - 1);\n\n  if (index === 0 && angularRange < 2 * Math.PI) {\n    return scale.x.range()[0];\n  } else if (alignment === \"start\" || alignment === \"end\") {\n    return alignment === \"start\" ? previousAngle : currentAngle;\n  } else {\n    return (currentAngle + previousAngle) / 2;\n  }\n};\n\nvar getEndAngle = function (props, index) {\n  var data = props.data,\n      scale = props.scale,\n      alignment = props.alignment;\n  var currentAngle = getAngle(props, index);\n  var angularRange = Math.abs(scale.x.range()[1] - scale.x.range()[0]);\n  var lastAngle = scale.x.range()[1] === 2 * Math.PI ? getAngle(props, 0) + Math.PI * 2 : scale.x.range()[1];\n  var nextAngle = index === data.length - 1 ? getAngle(props, 0) + Math.PI * 2 : getAngle(props, index + 1);\n\n  if (index === data.length - 1 && angularRange < 2 * Math.PI) {\n    return lastAngle;\n  } else if (alignment === \"start\" || alignment === \"end\") {\n    return alignment === \"start\" ? currentAngle : nextAngle;\n  } else {\n    return (currentAngle + nextAngle) / 2;\n  }\n};\n\nvar mapPointsToPath = function (coords, cornerRadius, direction) {\n  var topLeftPath = \"\".concat(cornerRadius.topLeft, \" \").concat(cornerRadius.topLeft, \" \").concat(direction);\n  var topRightPath = \"\".concat(cornerRadius.topRight, \" \").concat(cornerRadius.topRight, \" \").concat(direction);\n  var bottomLeftPath = \"\".concat(cornerRadius.bottomLeft, \" \").concat(cornerRadius.bottomLeft, \" \").concat(direction);\n  var bottomRightPath = \"\".concat(cornerRadius.bottomRight, \" \").concat(cornerRadius.bottomRight, \" \").concat(direction);\n  var commands = [\"M\", \"A \".concat(bottomLeftPath, \",\"), \"L\", \"A \".concat(topLeftPath, \",\"), \"L\", \"A \".concat(topRightPath, \",\"), \"L\", \"A \".concat(bottomRightPath, \",\")];\n  var path = commands.reduce(function (acc, command, i) {\n    acc += \"\".concat(command, \" \").concat(coords[i].x, \", \").concat(coords[i].y, \" \\n\");\n    return acc;\n  }, \"\");\n  return \"\".concat(path, \" z\");\n};\n\nvar getVerticalBarPoints = function (position, sign, cr) {\n  var x0 = position.x0,\n      x1 = position.x1,\n      y0 = position.y0,\n      y1 = position.y1; // eslint-disable-next-line max-statements, max-len\n\n  var getHalfPoints = function (side) {\n    var isLeft = side === \"Left\";\n    var signL = isLeft ? 1 : -1;\n    var x = isLeft ? x0 : x1;\n    var bottomPoint = {\n      x: x + signL * cr[\"bottom\".concat(side)],\n      y: y0\n    };\n    var bottomMiddlePoint = {\n      x: x,\n      y: y0 - sign * cr[\"bottom\".concat(side)]\n    };\n    var topMiddlePoint = {\n      x: x,\n      y: y1 + sign * cr[\"top\".concat(side)]\n    };\n    var topPoint = {\n      x: x + signL * cr[\"top\".concat(side)],\n      y: y1\n    };\n    var hasIntersection = sign === 1 ? y0 - cr[\"bottom\".concat(side)] < y1 + cr[\"top\".concat(side)] : y0 + cr[\"bottom\".concat(side)] > y1 - cr[\"top\".concat(side)];\n\n    if (hasIntersection) {\n      var topCenter = point(x + signL * cr[\"top\".concat(side)], y1 + sign * cr[\"top\".concat(side)]);\n      var topCircle = circle(topCenter, cr[\"top\".concat(side)]);\n      var bottomCenter = point(x + signL * cr[\"bottom\".concat(side)], y0 - sign * cr[\"bottom\".concat(side)]);\n      var bottomCircle = circle(bottomCenter, cr[\"bottom\".concat(side)]);\n      var circleIntersection = topCircle.intersection(bottomCircle);\n      var hasArcIntersection = circleIntersection.length > 0;\n\n      if (hasArcIntersection) {\n        var arcIntersection = circleIntersection[isLeft ? 0 : 1];\n        bottomMiddlePoint = {\n          x: arcIntersection.x,\n          y: arcIntersection.y\n        };\n        topMiddlePoint = {\n          x: arcIntersection.x,\n          y: arcIntersection.y\n        };\n      } else {\n        var hasBottomLineTopArcIntersection = cr[\"top\".concat(side)] > cr[\"bottom\".concat(side)];\n\n        if (hasBottomLineTopArcIntersection) {\n          var newX = topCircle.solveX(y0)[isLeft ? 0 : 1];\n          bottomPoint = {\n            x: newX,\n            y: y0\n          };\n          bottomMiddlePoint = {\n            x: newX,\n            y: y0\n          };\n          topMiddlePoint = {\n            x: newX,\n            y: y0\n          };\n        } else {\n          var _newX = bottomCircle.solveX(y1)[isLeft ? 0 : 1];\n          bottomMiddlePoint = {\n            x: _newX,\n            y: y1\n          };\n          topMiddlePoint = {\n            x: _newX,\n            y: y1\n          };\n          topPoint = {\n            x: _newX,\n            y: y1\n          };\n        }\n      }\n    }\n\n    var points = [bottomPoint, bottomMiddlePoint, topMiddlePoint, topPoint];\n    return isLeft ? points : points.reverse();\n  };\n\n  return getHalfPoints(\"Left\").concat(getHalfPoints(\"Right\"));\n};\n\nvar getHorizontalBarPoints = function (position, sign, cr) {\n  var y0 = position.y0,\n      y1 = position.y1;\n  var x0 = position.x0 < position.x1 ? position.x0 : position.x1;\n  var x1 = position.x0 < position.x1 ? position.x1 : position.x0; // eslint-disable-next-line max-statements, max-len\n\n  var getHalfPoints = function (side) {\n    var isTop = side === \"top\";\n    var signL = isTop ? -1 : 1;\n    var y = isTop ? y1 : y0;\n    var leftPoint = {\n      x: x0,\n      y: y - signL * cr[\"\".concat(side, \"Left\")]\n    };\n    var leftMiddlePoint = {\n      x: x0 + cr[\"\".concat(side, \"Left\")],\n      y: y\n    };\n    var rightMiddlePoint = {\n      x: x1 - cr[\"\".concat(side, \"Right\")],\n      y: y\n    };\n    var rightPoint = {\n      x: x1,\n      y: y - signL * cr[\"\".concat(side, \"Right\")]\n    };\n    var hasIntersection = leftMiddlePoint.x > rightMiddlePoint.x;\n\n    if (hasIntersection) {\n      var leftCenter = point(x0 + cr[\"\".concat(side, \"Left\")], y - signL * cr[\"\".concat(side, \"Left\")]);\n      var leftCircle = circle(leftCenter, cr[\"\".concat(side, \"Left\")]);\n      var rightCenter = point(x1 - cr[\"\".concat(side, \"Right\")], y - signL * cr[\"\".concat(side, \"Right\")]);\n      var rightCircle = circle(rightCenter, cr[\"\".concat(side, \"Right\")]);\n      var circleIntersection = leftCircle.intersection(rightCircle);\n      var hasArcIntersection = circleIntersection.length > 0;\n\n      if (hasArcIntersection) {\n        var arcIntersection = circleIntersection[sign > 0 ? 1 : 0];\n        leftMiddlePoint = {\n          x: arcIntersection.x,\n          y: arcIntersection.y\n        };\n        rightMiddlePoint = {\n          x: arcIntersection.x,\n          y: arcIntersection.y\n        };\n      } else {\n        var hasLeftLineRightArcIntersection = cr[\"\".concat(side, \"Right\")] > cr[\"\".concat(side, \"Left\")];\n\n        if (hasLeftLineRightArcIntersection) {\n          var newY = rightCircle.solveY(x0)[isTop ? 0 : 1];\n          leftPoint = {\n            x: x0,\n            y: newY\n          };\n          leftMiddlePoint = {\n            x: x0,\n            y: newY\n          };\n          rightMiddlePoint = {\n            x: x0,\n            y: newY\n          };\n        } else {\n          var _newY = leftCircle.solveY(x1)[isTop ? 0 : 1];\n          rightPoint = {\n            x: x1,\n            y: _newY\n          };\n          rightMiddlePoint = {\n            x: x1,\n            y: _newY\n          };\n          leftMiddlePoint = {\n            x: x1,\n            y: _newY\n          };\n        }\n      }\n    }\n\n    return [leftPoint, leftMiddlePoint, rightMiddlePoint, rightPoint];\n  };\n\n  var topPoints = getHalfPoints(\"top\");\n  var bottomPoints = getHalfPoints(\"bottom\"); // eslint-disable-next-line no-magic-numbers\n\n  return [bottomPoints[1], bottomPoints[0]].concat(_toConsumableArray(topPoints), [bottomPoints[3], bottomPoints[2]]);\n};\n\nexport var getVerticalBarPath = function (props, width, cornerRadius) {\n  var position = getPosition(props, width);\n  var sign = position.y0 > position.y1 ? 1 : -1;\n  var direction = sign > 0 ? \"0 0 1\" : \"0 0 0\";\n  var points = getVerticalBarPoints(position, sign, cornerRadius);\n  return mapPointsToPath(points, cornerRadius, direction);\n};\nexport var getHorizontalBarPath = function (props, width, cornerRadius) {\n  var position = getPosition(props, width);\n  var sign = position.x0 < position.x1 ? 1 : -1;\n  var direction = \"0 0 1\";\n  var cr = {\n    topRight: sign > 0 ? cornerRadius.topLeft : cornerRadius.bottomLeft,\n    bottomRight: sign > 0 ? cornerRadius.topRight : cornerRadius.bottomRight,\n    bottomLeft: sign > 0 ? cornerRadius.bottomRight : cornerRadius.topRight,\n    topLeft: sign > 0 ? cornerRadius.bottomLeft : cornerRadius.topLeft\n  };\n  var points = getHorizontalBarPoints(position, sign, cr);\n  return mapPointsToPath(points, cr, direction);\n};\nexport var getVerticalPolarBarPath = function (props, cornerRadius) {\n  var datum = props.datum,\n      scale = props.scale,\n      index = props.index,\n      alignment = props.alignment,\n      style = props.style;\n  var r1 = scale.y(datum._y0 || 0);\n  var r2 = scale.y(datum._y1 !== undefined ? datum._y1 : datum._y);\n  var currentAngle = scale.x(datum._x1 !== undefined ? datum._x1 : datum._x);\n  var start;\n  var end;\n\n  if (style.width) {\n    var width = getAngularWidth(props, style.width);\n    var size = alignment === \"middle\" ? width / 2 : width;\n    start = alignment === \"start\" ? currentAngle : currentAngle - size;\n    end = alignment === \"end\" ? currentAngle : currentAngle + size;\n  } else {\n    start = getStartAngle(props, index);\n    end = getEndAngle(props, index);\n  }\n\n  var getPath = function (edge) {\n    var pathFunction = d3Shape.arc().innerRadius(r1).outerRadius(r2).startAngle(transformAngle(start)).endAngle(transformAngle(end)).cornerRadius(cornerRadius[edge]);\n    return pathFunction();\n  };\n\n  var getPathData = function (edge) {\n    var rightPath = getPath(\"\".concat(edge, \"Right\"));\n    var rightMoves = rightPath.match(/[A-Z]/g);\n    var rightCoords = rightPath.split(/[A-Z]/).slice(1);\n    var rightMiddle = rightMoves.indexOf(\"L\");\n    var leftPath = getPath(\"\".concat(edge, \"Left\"));\n    var leftMoves = leftPath.match(/[A-Z]/g);\n    var leftCoords = leftPath.split(/[A-Z]/).slice(1);\n    var leftMiddle = leftMoves.indexOf(\"L\");\n    return {\n      rightMoves: rightMoves,\n      rightCoords: rightCoords,\n      rightMiddle: rightMiddle,\n      leftMoves: leftMoves,\n      leftCoords: leftCoords,\n      leftMiddle: leftMiddle\n    };\n  }; // eslint-disable-next-line max-statements\n\n\n  var getTopPath = function () {\n    var topRight = cornerRadius.topRight,\n        topLeft = cornerRadius.topLeft;\n    var arcLength = r2 * Math.abs(end - start);\n\n    var _getPathData = getPathData(\"top\"),\n        rightMoves = _getPathData.rightMoves,\n        rightCoords = _getPathData.rightCoords,\n        rightMiddle = _getPathData.rightMiddle,\n        leftMoves = _getPathData.leftMoves,\n        leftCoords = _getPathData.leftCoords,\n        leftMiddle = _getPathData.leftMiddle;\n\n    var moves;\n    var coords;\n\n    if (topRight === topLeft || arcLength < 2 * topRight + 2 * topLeft) {\n      moves = topRight > topLeft ? rightMoves : leftMoves;\n      coords = topRight > topLeft ? rightCoords : leftCoords;\n    } else {\n      // eslint-disable-next-line no-magic-numbers\n      var isShort = function (middle) {\n        return middle < 3;\n      };\n\n      var rightOffset = topLeft > topRight && isShort(rightMiddle) ? 1 : 2;\n      var leftOffset;\n\n      if (topRight > topLeft) {\n        var defaultOffset = isShort(rightMiddle) ? leftMiddle : leftMiddle - 2;\n        leftOffset = isShort(leftMiddle) ? leftMiddle - 1 : defaultOffset;\n      } else {\n        var _defaultOffset = isShort(leftMiddle) ? 1 : 2;\n\n        leftOffset = isShort(rightMiddle) ? _defaultOffset : leftMiddle - 2;\n      }\n\n      moves = _toConsumableArray(rightMoves.slice(0, rightOffset)).concat(_toConsumableArray(leftMoves.slice(leftOffset)));\n      coords = _toConsumableArray(rightCoords.slice(0, rightOffset)).concat(_toConsumableArray(leftCoords.slice(leftOffset)));\n    }\n\n    var middle = moves.indexOf(\"L\");\n    var subMoves = moves.slice(0, middle);\n    var subCoords = coords.slice(0, middle);\n    return subMoves.map(function (m, i) {\n      return {\n        command: m,\n        coords: subCoords[i].split(\",\")\n      };\n    });\n  }; // eslint-disable-next-line max-statements\n\n\n  var getBottomPath = function () {\n    var bottomRight = cornerRadius.bottomRight,\n        bottomLeft = cornerRadius.bottomLeft;\n    var arcLength = r1 * Math.abs(end - start);\n\n    var _getPathData2 = getPathData(\"bottom\"),\n        rightMoves = _getPathData2.rightMoves,\n        rightCoords = _getPathData2.rightCoords,\n        rightMiddle = _getPathData2.rightMiddle,\n        leftMoves = _getPathData2.leftMoves,\n        leftCoords = _getPathData2.leftCoords,\n        leftMiddle = _getPathData2.leftMiddle;\n\n    var moves;\n    var coords;\n\n    if (bottomRight === bottomLeft || arcLength < 2 * bottomRight + 2 * bottomLeft) {\n      moves = bottomRight > bottomLeft ? rightMoves : leftMoves;\n      coords = bottomRight > bottomLeft ? rightCoords : leftCoords;\n    } else {\n      // eslint-disable-next-line no-magic-numbers\n      var isShort = function (m, middle) {\n        return m.length - middle < 4;\n      };\n\n      var shortPath = bottomRight > bottomLeft ? isShort(rightMoves, rightMiddle) : isShort(leftMoves, leftMiddle); // eslint-disable-next-line no-magic-numbers\n\n      var rightOffset = shortPath ? -1 : -3;\n      moves = _toConsumableArray(leftMoves.slice(0, leftMiddle + 2)).concat(_toConsumableArray(rightMoves.slice(rightOffset)));\n      coords = _toConsumableArray(leftCoords.slice(0, leftMiddle + 2)).concat(_toConsumableArray(rightCoords.slice(rightOffset)));\n    }\n\n    var middle = moves.indexOf(\"L\");\n    var subMoves = moves.slice(middle, -1);\n    var subCoords = coords.slice(middle, -1);\n    return subMoves.map(function (m, i) {\n      return {\n        command: m,\n        coords: subCoords[i].split(\",\")\n      };\n    });\n  };\n\n  var topPath = getTopPath();\n  var bottomPath = getBottomPath();\n\n  var moves = _toConsumableArray(topPath).concat(_toConsumableArray(bottomPath));\n\n  var path = moves.reduce(function (memo, move) {\n    memo += \"\".concat(move.command, \" \").concat(move.coords.join());\n    return memo;\n  }, \"\");\n  return \"\".concat(path, \" z\");\n};"]},"metadata":{},"sourceType":"module"}