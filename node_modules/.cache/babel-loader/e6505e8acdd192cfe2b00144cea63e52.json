{"ast":null,"code":"import httpService from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\nimport { openNotification } from \"../components/custom\";\nexport function getOrder() {\n  return httpService.get(apiUrl + \"order\");\n}\nexport function Order(data) {\n  return httpService.post(apiUrl + \"order/add\", data).then(res => {\n    if (res.data.status === 200) {\n      window.location.reload();\n    } else if (res.data.status === 404) {\n      openNotification(\"error\", \"Tabel already reserved\", \"Check Info or Connection\");\n    }\n  });\n}\nexport function DelteOrder(data) {\n  return httpService.delete(apiUrl + `order/delete/${data}`).then(res => {\n    if (res.data.status === 200) {\n      window.location.reload();\n    } else if (res.data.status === 404) {\n      openNotification(\"error\", \"Error while deleting\", \"Check connection\");\n    }\n  });\n}\nexport function updateOrder(data) {\n  const date = data._d;\n  return httpService.put(apiUrl + \"order/update\", {\n    id: data.id,\n    table_number: data.table_number,\n    customer_name: data.customer_name,\n    dish: data.dish,\n    price: data.price,\n    quantity: data.quantity,\n    time: date\n  }).then(res => {\n    if (res.data.status === 200) {\n      window.location.reload();\n    } else if (res.data.status === 404) {\n      openNotification(\"error\", \"Can't modify Ordered Items\", \"Check Connection \");\n    }\n  });\n}","map":{"version":3,"sources":["/Users/abdurauf/Desktop/diploma/restaurant-management-system/plov/src/services/orderServices.js"],"names":["httpService","apiUrl","openNotification","getOrder","get","Order","data","post","then","res","status","window","location","reload","DelteOrder","delete","updateOrder","date","_d","put","id","table_number","customer_name","dish","price","quantity","time"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AAEA,OAAO,SAASC,QAAT,GAAoB;AACzB,SAAOH,WAAW,CAACI,GAAZ,CAAgBH,MAAM,GAAG,OAAzB,CAAP;AACD;AAED,OAAO,SAASI,KAAT,CAAeC,IAAf,EAAqB;AAC1B,SAAON,WAAW,CAACO,IAAZ,CAAiBN,MAAM,GAAG,WAA1B,EAAuCK,IAAvC,EAA6CE,IAA7C,CAAmDC,GAAD,IAAS;AAChE,QAAIA,GAAG,CAACH,IAAJ,CAASI,MAAT,KAAoB,GAAxB,EAA6B;AAC3BC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KAFD,MAEO,IAAIJ,GAAG,CAACH,IAAJ,CAASI,MAAT,KAAoB,GAAxB,EAA6B;AAClCR,MAAAA,gBAAgB,CACd,OADc,EAEd,wBAFc,EAGd,0BAHc,CAAhB;AAKD;AACF,GAVM,CAAP;AAWD;AAED,OAAO,SAASY,UAAT,CAAoBR,IAApB,EAA0B;AAC/B,SAAON,WAAW,CAACe,MAAZ,CAAmBd,MAAM,GAAI,gBAAeK,IAAK,EAAjD,EAAoDE,IAApD,CAA0DC,GAAD,IAAS;AACvE,QAAIA,GAAG,CAACH,IAAJ,CAASI,MAAT,KAAoB,GAAxB,EAA6B;AAC3BC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KAFD,MAEO,IAAIJ,GAAG,CAACH,IAAJ,CAASI,MAAT,KAAoB,GAAxB,EAA6B;AAClCR,MAAAA,gBAAgB,CAAC,OAAD,EAAU,sBAAV,EAAkC,kBAAlC,CAAhB;AACD;AACF,GANM,CAAP;AAOD;AAED,OAAO,SAASc,WAAT,CAAqBV,IAArB,EAA2B;AAChC,QAAMW,IAAI,GAAGX,IAAI,CAACY,EAAlB;AACA,SAAOlB,WAAW,CACfmB,GADI,CACAlB,MAAM,GAAG,cADT,EACyB;AAC5BmB,IAAAA,EAAE,EAAEd,IAAI,CAACc,EADmB;AAE5BC,IAAAA,YAAY,EAAEf,IAAI,CAACe,YAFS;AAG5BC,IAAAA,aAAa,EAAEhB,IAAI,CAACgB,aAHQ;AAI5BC,IAAAA,IAAI,EAAEjB,IAAI,CAACiB,IAJiB;AAK5BC,IAAAA,KAAK,EAAElB,IAAI,CAACkB,KALgB;AAM5BC,IAAAA,QAAQ,EAAEnB,IAAI,CAACmB,QANa;AAO5BC,IAAAA,IAAI,EAAET;AAPsB,GADzB,EAUJT,IAVI,CAUEC,GAAD,IAAS;AACb,QAAIA,GAAG,CAACH,IAAJ,CAASI,MAAT,KAAoB,GAAxB,EAA6B;AAC3BC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KAFD,MAEO,IAAIJ,GAAG,CAACH,IAAJ,CAASI,MAAT,KAAoB,GAAxB,EAA6B;AAClCR,MAAAA,gBAAgB,CACd,OADc,EAEd,4BAFc,EAGd,mBAHc,CAAhB;AAKD;AACF,GApBI,CAAP;AAqBD","sourcesContent":["import httpService from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\nimport { openNotification } from \"../components/custom\";\n\nexport function getOrder() {\n  return httpService.get(apiUrl + \"order\");\n}\n\nexport function Order(data) {\n  return httpService.post(apiUrl + \"order/add\", data).then((res) => {\n    if (res.data.status === 200) {\n      window.location.reload();\n    } else if (res.data.status === 404) {\n      openNotification(\n        \"error\",\n        \"Tabel already reserved\",\n        \"Check Info or Connection\"\n      );\n    }\n  });\n}\n\nexport function DelteOrder(data) {\n  return httpService.delete(apiUrl + `order/delete/${data}`).then((res) => {\n    if (res.data.status === 200) {\n      window.location.reload();\n    } else if (res.data.status === 404) {\n      openNotification(\"error\", \"Error while deleting\", \"Check connection\");\n    }\n  });\n}\n\nexport function updateOrder(data) {\n  const date = data._d;\n  return httpService\n    .put(apiUrl + \"order/update\", {\n      id: data.id,\n      table_number: data.table_number,\n      customer_name: data.customer_name,\n      dish: data.dish,\n      price: data.price,\n      quantity: data.quantity,\n      time: date,\n    })\n    .then((res) => {\n      if (res.data.status === 200) {\n        window.location.reload();\n      } else if (res.data.status === 404) {\n        openNotification(\n          \"error\",\n          \"Can't modify Ordered Items\",\n          \"Check Connection \"\n        );\n      }\n    });\n}\n"]},"metadata":{},"sourceType":"module"}