{"ast":null,"code":"var _jsxFileName = \"/Users/abdurauf/Desktop/\\u6BD5\\u4E1A\\u8BBE\\u8BA1/orginal/restaurant-management-system/plov/src/components/Admin/components/dish.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Layout, Table, Button, InputNumber, Input, Form, Row, Col } from \"antd\";\nimport { Resizable } from \"react-resizable\";\nimport \"../../../assets/css/AdminForm.css\";\nimport Drawers from \"../../common/dishDrawer\"; // for resizing\n\nconst ResizeableTitle = props => {\n  const {\n    onResize,\n    width,\n    ...restProps\n  } = props;\n\n  if (!width) {\n    return React.createElement(\"th\", Object.assign({}, restProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(Resizable, {\n    width: width,\n    height: 0,\n    onResize: onResize,\n    draggableOpts: {\n      enableUserSelectHack: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"th\", Object.assign({}, restProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })));\n}; // for editable\n\n\nconst EditableContext = React.createContext();\n\nclass EditableCell extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getInput = () => {\n      if (this.props.inputType === \"number\") {\n        return React.createElement(InputNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      });\n    };\n\n    this.renderCell = ({\n      getFieldDecorator\n    }) => {\n      const {\n        editing,\n        dataIndex,\n        title,\n        inputType,\n        record,\n        index,\n        children,\n        ...restProps\n      } = this.props;\n      return React.createElement(\"td\", Object.assign({}, restProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), editing ? React.createElement(Form.Item, {\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, getFieldDecorator(dataIndex, {\n        rules: [{\n          required: true,\n          message: `Please Input ${title}!`\n        }],\n        initialValue: record[dataIndex]\n      })(this.getInput())) : children);\n    };\n  }\n\n  render() {\n    return React.createElement(EditableContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.renderCell);\n  }\n\n}\n\nconst {\n  Content\n} = Layout;\n\nclass Dish extends Component {\n  constructor(props) {\n    super(props);\n\n    this.namehandleChange = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.priceHandleChange = price => {\n      this.setState({\n        price: price\n      });\n    };\n\n    this.typehandleChange = type => {\n      this.setState({\n        type: type\n      });\n    };\n\n    this.isEditing = record => record.key === this.state.editingKey;\n\n    this.cancel = () => {\n      this.setState({\n        editingKey: \"\"\n      });\n    };\n\n    this.handleDelete = key => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({\n        dataSource: dataSource.filter(item => item.key !== key)\n      });\n    };\n\n    this.components = {\n      header: {\n        cell: ResizeableTitle\n      },\n      body: {\n        cell: EditableCell\n      }\n    };\n\n    this.handleAdd = () => {\n      const {\n        key,\n        dataSource,\n        name,\n        price,\n        type\n      } = this.state;\n      const newData = {\n        key: key,\n        name: name,\n        price: price,\n        type: type\n      };\n\n      if (name !== \"\" && price !== null && type !== \"\") {\n        this.setState({\n          dataSource: [...dataSource, newData],\n          key: key + 1\n        });\n      }\n    };\n\n    this.showDrawer = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.onClose = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleResize = index => (e, {\n      size\n    }) => {\n      this.setState(({\n        columns\n      }) => {\n        const nextColumns = [...columns];\n        nextColumns[index] = { ...nextColumns[index],\n          width: size.width\n        };\n        return {\n          columns: nextColumns\n        };\n      });\n    };\n\n    state = {\n      columns: [{\n        title: \"Name\",\n        dataIndex: \"name\",\n        editable: true\n      }, {\n        title: \"Price\" + \"$\",\n        dataIndex: \"price\",\n        editable: true\n      }, {\n        title: \"Type\",\n        dataIndex: \"type\",\n        editable: true\n      }, {\n        title: \"Action\",\n        dataIndex: \"operation\",\n        render: (text, record) => {\n          const {\n            editingKey\n          } = this.state;\n          const editable = this.isEditing(record);\n          return editable ? React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, React.createElement(EditableContext.Consumer, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, form => React.createElement(Row, {\n            gutter: 22,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, React.createElement(Col, {\n            span: 5,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, React.createElement(Button, {\n            size: \"small\",\n            onClick: () => this.save(form, record.key),\n            style: {\n              width: \"60px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, \"Save\")), React.createElement(Col, {\n            span: 5,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }, React.createElement(Button, {\n            size: \"small\",\n            style: {\n              width: \"70px\"\n            },\n            onClick: () => this.cancel(record.key),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, \"Cancel\"))))) : React.createElement(Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"danger\",\n            size: \"small\",\n            style: {\n              width: \"60px\",\n              margin: \" 0 1em\"\n            },\n            onClick: () => this.handleDelete(record.key),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144\n            },\n            __self: this\n          }, \"Delete\"), React.createElement(Button, {\n            type: \"primary\",\n            size: \"small\",\n            style: {\n              width: \"60px\"\n            },\n            disabled: editingKey !== \"\",\n            onClick: () => this.edit(record.key),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152\n            },\n            __self: this\n          }, \"Edit\"));\n        }\n      }],\n      dataSource: [],\n      key: 0,\n      editingKey: \"\",\n      name: \"\",\n      price: \"\",\n      type: \"\",\n      visible: false\n    };\n  }\n\n  edit(key) {\n    this.setState({\n      editingKey: key\n    });\n  }\n\n  save(form, key) {\n    form.validateFields((error, row) => {\n      if (error) {\n        return;\n      }\n\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => key === item.key);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item,\n          ...row\n        });\n        this.setState({\n          dataSource: newData,\n          editingKey: \"\"\n        });\n      } else {\n        newData.push(row);\n        this.setState({\n          dataSource: newData,\n          editingKey: \"\"\n        });\n      }\n    });\n  }\n\n  render() {\n    const columns = this.state.columns.map((col, index) => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return { ...col,\n        onHeaderCell: column => ({\n          width: column.width,\n          onResize: this.handleResize(index)\n        }),\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === \"age\" ? \"number\" : \"text\",\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record)\n        })\n      };\n    });\n    const {\n      dataSource,\n      visible\n    } = this.state;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(Content, {\n      style: {\n        margin: \"2em 16px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        background: \"#fff\",\n        padding: 24,\n        minHeight: 280\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showDrawer,\n      style: {\n        margin: \"2em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"Add\")), React.createElement(Drawers, {\n      onClose: this.onClose,\n      visible: visible,\n      name: this.state.name,\n      price: this.state.price,\n      handleAdd: this.handleAdd,\n      namehandleChange: this.namehandleChange,\n      priceHandleChange: this.priceHandleChange,\n      typehandleChange: this.typehandleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }), React.createElement(EditableContext.Provider, {\n      value: this.props.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(Table, {\n      components: this.components,\n      columns: columns,\n      dataSource: dataSource,\n      bordered: true,\n      rowClassName: \"editable-row\",\n      title: () => \"Dish Menu\",\n      footer: () => \"Footer\",\n      pagination: false,\n      scroll: {\n        y: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst WrappedHorizontalLoginForm = Form.create()(Dish);\nexport default WrappedHorizontalLoginForm;","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/Admin/components/dish.js"],"names":["React","Component","Fragment","Layout","Table","Button","InputNumber","Input","Form","Row","Col","Resizable","Drawers","ResizeableTitle","props","onResize","width","restProps","enableUserSelectHack","EditableContext","createContext","EditableCell","getInput","inputType","renderCell","getFieldDecorator","editing","dataIndex","title","record","index","children","margin","rules","required","message","initialValue","render","Content","Dish","constructor","namehandleChange","event","setState","name","target","value","priceHandleChange","price","typehandleChange","type","isEditing","key","state","editingKey","cancel","handleDelete","dataSource","filter","item","components","header","cell","body","handleAdd","newData","showDrawer","visible","onClose","handleResize","e","size","columns","nextColumns","editable","text","form","save","edit","validateFields","error","row","findIndex","splice","push","map","col","onHeaderCell","column","onCell","background","padding","minHeight","textAlign","y","WrappedHorizontalLoginForm","create"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,MAHF,EAIEC,WAJF,EAKEC,KALF,EAMEC,IANF,EAOEC,GAPF,EAQEC,GARF,QASO,MATP;AAUA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,OAAO,mCAAP;AACA,OAAOC,OAAP,MAAoB,yBAApB,C,CAEA;;AACA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmB,OAAGC;AAAtB,MAAoCH,KAA1C;;AAEA,MAAI,CAACE,KAAL,EAAY;AACV,WAAO,4CAAQC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AAED,SACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAED,KADT;AAEE,IAAA,MAAM,EAAE,CAFV;AAGE,IAAA,QAAQ,EAAED,QAHZ;AAIE,IAAA,aAAa,EAAE;AAAEG,MAAAA,oBAAoB,EAAE;AAAxB,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,4CAAQD,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANF,CADF;AAUD,CAjBD,C,CAmBA;;;AACA,MAAME,eAAe,GAAGnB,KAAK,CAACoB,aAAN,EAAxB;;AAEA,MAAMC,YAAN,SAA2BpB,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SACnCqB,QADmC,GACxB,MAAM;AACf,UAAI,KAAKR,KAAL,CAAWS,SAAX,KAAyB,QAA7B,EAAuC;AACrC,eAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,aAAO,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KANkC;;AAAA,SAQnCC,UARmC,GAQtB,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAA2B;AACtC,YAAM;AACJC,QAAAA,OADI;AAEJC,QAAAA,SAFI;AAGJC,QAAAA,KAHI;AAIJL,QAAAA,SAJI;AAKJM,QAAAA,MALI;AAMJC,QAAAA,KANI;AAOJC,QAAAA,QAPI;AAQJ,WAAGd;AARC,UASF,KAAKH,KATT;AAUA,aACE,4CAAQG,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGS,OAAO,GACN,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAE;AAAEM,UAAAA,MAAM,EAAE;AAAV,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGP,iBAAiB,CAACE,SAAD,EAAY;AAC5BM,QAAAA,KAAK,EAAE,CACL;AACEC,UAAAA,QAAQ,EAAE,IADZ;AAEEC,UAAAA,OAAO,EAAG,gBAAeP,KAAM;AAFjC,SADK,CADqB;AAO5BQ,QAAAA,YAAY,EAAEP,MAAM,CAACF,SAAD;AAPQ,OAAZ,CAAjB,CAQE,KAAKL,QAAL,EARF,CADH,CADM,GAaNS,QAdJ,CADF;AAmBD,KAtCkC;AAAA;;AAwCnCM,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,eAAD,CAAiB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKb,UAAhC,CADF;AAGD;;AA5CkC;;AA+CrC,MAAM;AAAEc,EAAAA;AAAF,IAAcnC,MAApB;;AACA,MAAMoC,IAAN,SAAmBtC,SAAnB,CAA6B;AAC3BuC,EAAAA,WAAW,CAAC1B,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAwFnB2B,gBAxFmB,GAwFAC,KAAK,IAAI;AAC1B,WAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAEF,KAAK,CAACG,MAAN,CAAaC;AADP,OAAd;AAGD,KA5FkB;;AAAA,SA6FnBC,iBA7FmB,GA6FCC,KAAK,IAAI;AAC3B,WAAKL,QAAL,CAAc;AACZK,QAAAA,KAAK,EAAEA;AADK,OAAd;AAGD,KAjGkB;;AAAA,SAmGnBC,gBAnGmB,GAmGAC,IAAI,IAAI;AACzB,WAAKP,QAAL,CAAc;AACZO,QAAAA,IAAI,EAAEA;AADM,OAAd;AAGD,KAvGkB;;AAAA,SAyGnBC,SAzGmB,GAyGPtB,MAAM,IAAIA,MAAM,CAACuB,GAAP,KAAe,KAAKC,KAAL,CAAWC,UAzG7B;;AAAA,SA2GnBC,MA3GmB,GA2GV,MAAM;AACb,WAAKZ,QAAL,CAAc;AAAEW,QAAAA,UAAU,EAAE;AAAd,OAAd;AACD,KA7GkB;;AAAA,SAkHnBE,YAlHmB,GAkHJJ,GAAG,IAAI;AACpB,YAAMK,UAAU,GAAG,CAAC,GAAG,KAAKJ,KAAL,CAAWI,UAAf,CAAnB;AACA,WAAKd,QAAL,CAAc;AAAEc,QAAAA,UAAU,EAAEA,UAAU,CAACC,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAACP,GAAL,KAAaA,GAAvC;AAAd,OAAd;AACD,KArHkB;;AAAA,SA2InBQ,UA3ImB,GA2IN;AACXC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAEjD;AADA,OADG;AAIXkD,MAAAA,IAAI,EAAE;AACJD,QAAAA,IAAI,EAAEzC;AADF;AAJK,KA3IM;;AAAA,SAmJnB2C,SAnJmB,GAmJP,MAAM;AAChB,YAAM;AAAEZ,QAAAA,GAAF;AAAOK,QAAAA,UAAP;AAAmBb,QAAAA,IAAnB;AAAyBI,QAAAA,KAAzB;AAAgCE,QAAAA;AAAhC,UAAyC,KAAKG,KAApD;AACA,YAAMY,OAAO,GAAG;AACdb,QAAAA,GAAG,EAAEA,GADS;AAEdR,QAAAA,IAAI,EAAEA,IAFQ;AAGdI,QAAAA,KAAK,EAAEA,KAHO;AAIdE,QAAAA,IAAI,EAAEA;AAJQ,OAAhB;;AAMA,UAAIN,IAAI,KAAK,EAAT,IAAeI,KAAK,KAAK,IAAzB,IAAiCE,IAAI,KAAK,EAA9C,EAAkD;AAChD,aAAKP,QAAL,CAAc;AACZc,UAAAA,UAAU,EAAE,CAAC,GAAGA,UAAJ,EAAgBQ,OAAhB,CADA;AAEZb,UAAAA,GAAG,EAAEA,GAAG,GAAG;AAFC,SAAd;AAID;AACF,KAjKkB;;AAAA,SAkKnBc,UAlKmB,GAkKN,MAAM;AACjB,WAAKvB,QAAL,CAAc;AACZwB,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KAtKkB;;AAAA,SAuKnBC,OAvKmB,GAuKT,MAAM;AACd,WAAKzB,QAAL,CAAc;AACZwB,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KA3KkB;;AAAA,SA4KnBE,YA5KmB,GA4KJvC,KAAK,IAAI,CAACwC,CAAD,EAAI;AAAEC,MAAAA;AAAF,KAAJ,KAAiB;AACvC,WAAK5B,QAAL,CAAc,CAAC;AAAE6B,QAAAA;AAAF,OAAD,KAAiB;AAC7B,cAAMC,WAAW,GAAG,CAAC,GAAGD,OAAJ,CAApB;AACAC,QAAAA,WAAW,CAAC3C,KAAD,CAAX,GAAqB,EACnB,GAAG2C,WAAW,CAAC3C,KAAD,CADK;AAEnBd,UAAAA,KAAK,EAAEuD,IAAI,CAACvD;AAFO,SAArB;AAIA,eAAO;AAAEwD,UAAAA,OAAO,EAAEC;AAAX,SAAP;AACD,OAPD;AAQD,KArLkB;;AAGjBpB,IAAAA,KAAK,GAAG;AACNmB,MAAAA,OAAO,EAAE,CACP;AACE5C,QAAAA,KAAK,EAAE,MADT;AAEED,QAAAA,SAAS,EAAE,MAFb;AAGE+C,QAAAA,QAAQ,EAAE;AAHZ,OADO,EAMP;AACE9C,QAAAA,KAAK,EAAE,UAAU,GADnB;AAEED,QAAAA,SAAS,EAAE,OAFb;AAGE+C,QAAAA,QAAQ,EAAE;AAHZ,OANO,EAWP;AACE9C,QAAAA,KAAK,EAAE,MADT;AAEED,QAAAA,SAAS,EAAE,MAFb;AAGE+C,QAAAA,QAAQ,EAAE;AAHZ,OAXO,EAgBP;AACE9C,QAAAA,KAAK,EAAE,QADT;AAEED,QAAAA,SAAS,EAAE,WAFb;AAGEU,QAAAA,MAAM,EAAE,CAACsC,IAAD,EAAO9C,MAAP,KAAkB;AACxB,gBAAM;AAAEyB,YAAAA;AAAF,cAAiB,KAAKD,KAA5B;AACA,gBAAMqB,QAAQ,GAAG,KAAKvB,SAAL,CAAetB,MAAf,CAAjB;AACA,iBAAO6C,QAAQ,GACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,eAAD,CAAiB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGE,IAAI,IACH,oBAAC,GAAD;AAAK,YAAA,MAAM,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,GAAD;AAAK,YAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,MAAD;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,OAAO,EAAE,MAAM,KAAKC,IAAL,CAAUD,IAAV,EAAgB/C,MAAM,CAACuB,GAAvB,CAFjB;AAGE,YAAA,KAAK,EAAE;AAAEpC,cAAAA,KAAK,EAAE;AAAT,aAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,EAUE,oBAAC,GAAD;AAAK,YAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,MAAD;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,KAAK,EAAE;AAAEA,cAAAA,KAAK,EAAE;AAAT,aAFT;AAGE,YAAA,OAAO,EAAE,MAAM,KAAKuC,MAAL,CAAY1B,MAAM,CAACuB,GAAnB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAVF,CAFJ,CADF,CADa,GA4Bb,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,MAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,KAAK,EAAE;AAAEpC,cAAAA,KAAK,EAAE,MAAT;AAAiBgB,cAAAA,MAAM,EAAE;AAAzB,aAHT;AAIE,YAAA,OAAO,EAAE,MAAM,KAAKwB,YAAL,CAAkB3B,MAAM,CAACuB,GAAzB,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EASE,oBAAC,MAAD;AACE,YAAA,IAAI,EAAC,SADP;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,KAAK,EAAE;AAAEpC,cAAAA,KAAK,EAAE;AAAT,aAHT;AAIE,YAAA,QAAQ,EAAEsC,UAAU,KAAK,EAJ3B;AAKE,YAAA,OAAO,EAAE,MAAM,KAAKwB,IAAL,CAAUjD,MAAM,CAACuB,GAAjB,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF,CA5BF;AAgDD;AAtDH,OAhBO,CADH;AA2ENK,MAAAA,UAAU,EAAE,EA3EN;AA4ENL,MAAAA,GAAG,EAAE,CA5EC;AA6ENE,MAAAA,UAAU,EAAE,EA7EN;AA8ENV,MAAAA,IAAI,EAAE,EA9EA;AA+ENI,MAAAA,KAAK,EAAE,EA/ED;AAgFNE,MAAAA,IAAI,EAAE,EAhFA;AAiFNiB,MAAAA,OAAO,EAAE;AAjFH,KAAR;AAmFD;;AAwBDW,EAAAA,IAAI,CAAC1B,GAAD,EAAM;AACR,SAAKT,QAAL,CAAc;AAAEW,MAAAA,UAAU,EAAEF;AAAd,KAAd;AACD;;AAODyB,EAAAA,IAAI,CAACD,IAAD,EAAOxB,GAAP,EAAY;AACdwB,IAAAA,IAAI,CAACG,cAAL,CAAoB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAClC,UAAID,KAAJ,EAAW;AACT;AACD;;AACD,YAAMf,OAAO,GAAG,CAAC,GAAG,KAAKZ,KAAL,CAAWI,UAAf,CAAhB;AACA,YAAM3B,KAAK,GAAGmC,OAAO,CAACiB,SAAR,CAAkBvB,IAAI,IAAIP,GAAG,KAAKO,IAAI,CAACP,GAAvC,CAAd;;AACA,UAAItB,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,cAAM6B,IAAI,GAAGM,OAAO,CAACnC,KAAD,CAApB;AACAmC,QAAAA,OAAO,CAACkB,MAAR,CAAerD,KAAf,EAAsB,CAAtB,EAAyB,EACvB,GAAG6B,IADoB;AAEvB,aAAGsB;AAFoB,SAAzB;AAIA,aAAKtC,QAAL,CAAc;AAAEc,UAAAA,UAAU,EAAEQ,OAAd;AAAuBX,UAAAA,UAAU,EAAE;AAAnC,SAAd;AACD,OAPD,MAOO;AACLW,QAAAA,OAAO,CAACmB,IAAR,CAAaH,GAAb;AACA,aAAKtC,QAAL,CAAc;AAAEc,UAAAA,UAAU,EAAEQ,OAAd;AAAuBX,UAAAA,UAAU,EAAE;AAAnC,SAAd;AACD;AACF,KAjBD;AAkBD;;AA6CDjB,EAAAA,MAAM,GAAG;AACP,UAAMmC,OAAO,GAAG,KAAKnB,KAAL,CAAWmB,OAAX,CAAmBa,GAAnB,CAAuB,CAACC,GAAD,EAAMxD,KAAN,KAAgB;AACrD,UAAI,CAACwD,GAAG,CAACZ,QAAT,EAAmB;AACjB,eAAOY,GAAP;AACD;;AACD,aAAO,EACL,GAAGA,GADE;AAELC,QAAAA,YAAY,EAAEC,MAAM,KAAK;AACvBxE,UAAAA,KAAK,EAAEwE,MAAM,CAACxE,KADS;AAEvBD,UAAAA,QAAQ,EAAE,KAAKsD,YAAL,CAAkBvC,KAAlB;AAFa,SAAL,CAFf;AAML2D,QAAAA,MAAM,EAAE5D,MAAM,KAAK;AACjBA,UAAAA,MADiB;AAEjBN,UAAAA,SAAS,EAAE+D,GAAG,CAAC3D,SAAJ,KAAkB,KAAlB,GAA0B,QAA1B,GAAqC,MAF/B;AAGjBA,UAAAA,SAAS,EAAE2D,GAAG,CAAC3D,SAHE;AAIjBC,UAAAA,KAAK,EAAE0D,GAAG,CAAC1D,KAJM;AAKjBF,UAAAA,OAAO,EAAE,KAAKyB,SAAL,CAAetB,MAAf;AALQ,SAAL;AANT,OAAP;AAcD,KAlBe,CAAhB;AAmBA,UAAM;AAAE4B,MAAAA,UAAF;AAAcU,MAAAA;AAAd,QAA0B,KAAKd,KAArC;AACA,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAErB,QAAAA,MAAM,EAAE;AAAV,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAE;AAAE0D,QAAAA,UAAU,EAAE,MAAd;AAAsBC,QAAAA,OAAO,EAAE,EAA/B;AAAmCC,QAAAA,SAAS,EAAE;AAA9C,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,OAAO,EAAE,KAAK3B,UAFhB;AAGE,MAAA,KAAK,EAAE;AAAElC,QAAAA,MAAM,EAAE;AAAV,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF,EAUE,oBAAC,OAAD;AACE,MAAA,OAAO,EAAE,KAAKoC,OADhB;AAEE,MAAA,OAAO,EAAED,OAFX;AAGE,MAAA,IAAI,EAAE,KAAKd,KAAL,CAAWT,IAHnB;AAIE,MAAA,KAAK,EAAE,KAAKS,KAAL,CAAWL,KAJpB;AAKE,MAAA,SAAS,EAAE,KAAKgB,SALlB;AAME,MAAA,gBAAgB,EAAE,KAAKvB,gBANzB;AAOE,MAAA,iBAAiB,EAAE,KAAKM,iBAP1B;AAQE,MAAA,gBAAgB,EAAE,KAAKE,gBARzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAoBE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,MAAA,KAAK,EAAE,KAAKnC,KAAL,CAAW8D,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,UAAU,EAAE,KAAKhB,UADnB;AAEE,MAAA,OAAO,EAAEY,OAFX;AAGE,MAAA,UAAU,EAAEf,UAHd;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,YAAY,EAAC,cALf;AAME,MAAA,KAAK,EAAE,MAAM,WANf;AAOE,MAAA,MAAM,EAAE,MAAM,QAPhB;AAQE,MAAA,UAAU,EAAE,KARd;AASE,MAAA,MAAM,EAAE;AAAEqC,QAAAA,CAAC,EAAE;AAAL,OATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CApBF,CADF,CADF,CADF;AAwCD;;AArP0B;;AAwP7B,MAAMC,0BAA0B,GAAGvF,IAAI,CAACwF,MAAL,GAAczD,IAAd,CAAnC;AACA,eAAewD,0BAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport {\n  Layout,\n  Table,\n  Button,\n  InputNumber,\n  Input,\n  Form,\n  Row,\n  Col\n} from \"antd\";\nimport { Resizable } from \"react-resizable\";\n\nimport \"../../../assets/css/AdminForm.css\";\nimport Drawers from \"../../common/dishDrawer\";\n\n// for resizing\nconst ResizeableTitle = props => {\n  const { onResize, width, ...restProps } = props;\n\n  if (!width) {\n    return <th {...restProps} />;\n  }\n\n  return (\n    <Resizable\n      width={width}\n      height={0}\n      onResize={onResize}\n      draggableOpts={{ enableUserSelectHack: false }}\n    >\n      <th {...restProps} />\n    </Resizable>\n  );\n};\n\n// for editable\nconst EditableContext = React.createContext();\n\nclass EditableCell extends Component {\n  getInput = () => {\n    if (this.props.inputType === \"number\") {\n      return <InputNumber />;\n    }\n    return <Input />;\n  };\n\n  renderCell = ({ getFieldDecorator }) => {\n    const {\n      editing,\n      dataIndex,\n      title,\n      inputType,\n      record,\n      index,\n      children,\n      ...restProps\n    } = this.props;\n    return (\n      <td {...restProps}>\n        {editing ? (\n          <Form.Item style={{ margin: 0 }}>\n            {getFieldDecorator(dataIndex, {\n              rules: [\n                {\n                  required: true,\n                  message: `Please Input ${title}!`\n                }\n              ],\n              initialValue: record[dataIndex]\n            })(this.getInput())}\n          </Form.Item>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  };\n\n  render() {\n    return (\n      <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\n    );\n  }\n}\n\nconst { Content } = Layout;\nclass Dish extends Component {\n  constructor(props) {\n    super(props);\n\n    state = {\n      columns: [\n        {\n          title: \"Name\",\n          dataIndex: \"name\",\n          editable: true\n        },\n        {\n          title: \"Price\" + \"$\",\n          dataIndex: \"price\",\n          editable: true\n        },\n        {\n          title: \"Type\",\n          dataIndex: \"type\",\n          editable: true\n        },\n        {\n          title: \"Action\",\n          dataIndex: \"operation\",\n          render: (text, record) => {\n            const { editingKey } = this.state;\n            const editable = this.isEditing(record);\n            return editable ? (\n              <span>\n                <EditableContext.Consumer>\n                  {form => (\n                    <Row gutter={22}>\n                      <Col span={5}>\n                        <Button\n                          size=\"small\"\n                          onClick={() => this.save(form, record.key)}\n                          style={{ width: \"60px\" }}\n                        >\n                          Save\n                        </Button>\n                      </Col>\n                      <Col span={5}>\n                        <Button\n                          size=\"small\"\n                          style={{ width: \"70px\" }}\n                          onClick={() => this.cancel(record.key)}\n                        >\n                          Cancel\n                        </Button>\n                      </Col>\n                    </Row>\n                  )}\n                </EditableContext.Consumer>\n              </span>\n            ) : (\n              <Fragment>\n                <Button\n                  type=\"danger\"\n                  size=\"small\"\n                  style={{ width: \"60px\", margin: \" 0 1em\" }}\n                  onClick={() => this.handleDelete(record.key)}\n                >\n                  Delete\n                </Button>\n                <Button\n                  type=\"primary\"\n                  size=\"small\"\n                  style={{ width: \"60px\" }}\n                  disabled={editingKey !== \"\"}\n                  onClick={() => this.edit(record.key)}\n                >\n                  Edit\n                </Button>\n              </Fragment>\n            );\n          }\n        }\n      ],\n\n      dataSource: [],\n      key: 0,\n      editingKey: \"\",\n      name: \"\",\n      price: \"\",\n      type: \"\",\n      visible: false\n    };\n  }\n\n  namehandleChange = event => {\n    this.setState({\n      name: event.target.value\n    });\n  };\n  priceHandleChange = price => {\n    this.setState({\n      price: price\n    });\n  };\n\n  typehandleChange = type => {\n    this.setState({\n      type: type\n    });\n  };\n\n  isEditing = record => record.key === this.state.editingKey;\n\n  cancel = () => {\n    this.setState({ editingKey: \"\" });\n  };\n  edit(key) {\n    this.setState({ editingKey: key });\n  }\n\n  handleDelete = key => {\n    const dataSource = [...this.state.dataSource];\n    this.setState({ dataSource: dataSource.filter(item => item.key !== key) });\n  };\n\n  save(form, key) {\n    form.validateFields((error, row) => {\n      if (error) {\n        return;\n      }\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => key === item.key);\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, {\n          ...item,\n          ...row\n        });\n        this.setState({ dataSource: newData, editingKey: \"\" });\n      } else {\n        newData.push(row);\n        this.setState({ dataSource: newData, editingKey: \"\" });\n      }\n    });\n  }\n  components = {\n    header: {\n      cell: ResizeableTitle\n    },\n    body: {\n      cell: EditableCell\n    }\n  };\n  handleAdd = () => {\n    const { key, dataSource, name, price, type } = this.state;\n    const newData = {\n      key: key,\n      name: name,\n      price: price,\n      type: type\n    };\n    if (name !== \"\" && price !== null && type !== \"\") {\n      this.setState({\n        dataSource: [...dataSource, newData],\n        key: key + 1\n      });\n    }\n  };\n  showDrawer = () => {\n    this.setState({\n      visible: true\n    });\n  };\n  onClose = () => {\n    this.setState({\n      visible: false\n    });\n  };\n  handleResize = index => (e, { size }) => {\n    this.setState(({ columns }) => {\n      const nextColumns = [...columns];\n      nextColumns[index] = {\n        ...nextColumns[index],\n        width: size.width\n      };\n      return { columns: nextColumns };\n    });\n  };\n\n  render() {\n    const columns = this.state.columns.map((col, index) => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onHeaderCell: column => ({\n          width: column.width,\n          onResize: this.handleResize(index)\n        }),\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === \"age\" ? \"number\" : \"text\",\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record)\n        })\n      };\n    });\n    const { dataSource, visible } = this.state;\n    return (\n      <Fragment>\n        <Content style={{ margin: \"2em 16px\" }}>\n          <div style={{ background: \"#fff\", padding: 24, minHeight: 280 }}>\n            <div style={{ textAlign: \"right\" }}>\n              <Button\n                type=\"primary\"\n                onClick={this.showDrawer}\n                style={{ margin: \"2em\" }}\n              >\n                Add\n              </Button>\n            </div>\n            <Drawers\n              onClose={this.onClose}\n              visible={visible}\n              name={this.state.name}\n              price={this.state.price}\n              handleAdd={this.handleAdd}\n              namehandleChange={this.namehandleChange}\n              priceHandleChange={this.priceHandleChange}\n              typehandleChange={this.typehandleChange}\n            />\n            <EditableContext.Provider value={this.props.form}>\n              <Table\n                components={this.components}\n                columns={columns}\n                dataSource={dataSource}\n                bordered\n                rowClassName=\"editable-row\"\n                title={() => \"Dish Menu\"}\n                footer={() => \"Footer\"}\n                pagination={false}\n                scroll={{ y: 500 }}\n              />\n            </EditableContext.Provider>\n          </div>\n        </Content>\n      </Fragment>\n    );\n  }\n}\n\nconst WrappedHorizontalLoginForm = Form.create()(Dish);\nexport default WrappedHorizontalLoginForm;\n"]},"metadata":{},"sourceType":"module"}