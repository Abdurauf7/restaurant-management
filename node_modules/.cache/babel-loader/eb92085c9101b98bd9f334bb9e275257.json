{"ast":null,"code":"var _jsxFileName = \"/Users/abdurauf/Desktop/\\u6BD5\\u4E1A\\u8BBE\\u8BA1/orginal/restaurant-management-system/plov/src/components/Employee/components/Order/components/editModal.jsx\";\n// React\nimport React, { useEffect, useState, Fragment } from \"react\"; // third part\n\nimport { Modal, Form, Select, Input, TimePicker } from \"antd\"; // Services\n\nimport { getTable } from \"../../../../../services/tableServices\";\nimport { getDishes } from \"../../../../../services/dishServices\"; // custom\n\nimport { openNotification } from \"../../../../custom\";\nconst layout = {\n  labelCol: {\n    span: 5\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\n\nconst EditModal = ({\n  editableData,\n  visible,\n  handleUpdate,\n  onClose\n}) => {\n  const [form] = Form.useForm();\n  const [tableNumber, setTableNumber] = useState([]);\n  const [orders, setOrders] = useState([]);\n\n  const fetchTableNumber = async () => {\n    try {\n      await getTable().then(res => res.data).then(data => setTableNumber(data));\n    } catch (error) {\n      openNotification(\"error\", \"Cant get tables\", \"Check connection\");\n    }\n  };\n\n  const fetchOrders = async () => {\n    try {\n      await getDishes().then(res => res.data).then(data => setOrders(data));\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    fetchTableNumber();\n    fetchOrders();\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    closable: false,\n    visible: visible,\n    okText: \"Edit\",\n    cancelText: \"Cancel\",\n    onCancel: onClose,\n    onOk: () => {\n      form.validateFields().then(values => {\n        form.resetFields();\n        handleUpdate(values);\n      }).catch(info => {\n        console.log(\"Validate Failed:\", info);\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Form, Object.assign({}, layout, {\n    hideRequiredMark: true,\n    onFinish: handleUpdate,\n    form: form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Select, {\n    defaultValue: editableData.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, tableNumber.map(table => React.createElement(Select.Option, {\n    key: table.id,\n    value: table.table_number,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, table.table_number)))))); // return (\n  //   <Modal\n  //     closable={false}\n  //     visible={visible}\n  //     okText=\"Edit\"\n  //     cancelText=\"Cancel\"\n  //     onCancel={onClose}\n  //     onOk={() => {\n  //       form\n  //         .validateFields()\n  //         .then((values) => {\n  //           form.resetFields();\n  //           handleUpdate(values);\n  //         })\n  //         .catch((info) => {\n  //           console.log(\"Validate Failed:\", info);\n  //         });\n  //     }}\n  //   >\n  //     <Form\n  //       {...layout}\n  //       hideRequiredMark\n  //       onFinish={handleUpdate}\n  //       form={form}\n  //       initialValues={{\n  //         id: editableData.id,\n  //         table_number: editableData.table,\n  //         customer_name: editableData.customer,\n  //         dish: editableData.ordered_items,\n  //         price: editableData.price,\n  //       }}\n  //     >\n  //       <Form.Item name=\"id\">\n  //         <h1>Edit Orders</h1>\n  //       </Form.Item>\n  //       <Form.Item\n  //         label=\"Table Number\"\n  //         name=\"table_number\"\n  //         rules={[{ required: true, message: \"Enter Table Number\" }]}\n  //       >\n  //         <Select placeholder=\"select table number\">\n  //           {tableNumber.map((table) => (\n  //             <Select.Option key={table.id} value={table.table_number}>\n  //               {table.table_number}\n  //             </Select.Option>\n  //           ))}\n  //         </Select>\n  //       </Form.Item>\n  //       <Form.Item\n  //         label=\"Customer\"\n  //         name=\"customer_name\"\n  //         rules={[{ required: true, message: \"Enter Customer Name\" }]}\n  //       >\n  //         <Input placeholder=\"Customer Name\" allowClear />\n  //       </Form.Item>\n  //       <Form.Item label=\"Order\" name=\"dish\">\n  //         <Select placeholder=\"Please select\" mode=\"multiple\">\n  //           {orders.map((or) => (\n  //             <Select.Option key={or.id} value={or.name}>\n  //               {or.name}\n  //             </Select.Option>\n  //           ))}\n  //         </Select>\n  //       </Form.Item>\n  //       <Form.Item label=\"Price\" name=\"price\">\n  //         <Select placeholder=\"Please select\" mode=\"multiple\">\n  //           {orders.map((or) => (\n  //             <Select.Option key={or.id} value={or.name}>\n  //               {or.name}-{or.price}¥\n  //             </Select.Option>\n  //           ))}\n  //         </Select>\n  //       </Form.Item>\n  //       <Form.Item\n  //         label=\"Time\"\n  //         name=\"time\"\n  //         placeholder=\"select time\"\n  //         rules={[{ required: true, message: \"Enter ordered time\" }]}\n  //       >\n  //         <TimePicker />\n  //       </Form.Item>\n  //     </Form>\n  //   </Modal>\n  // );\n};\n\nexport default EditModal;","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/Employee/components/Order/components/editModal.jsx"],"names":["React","useEffect","useState","Fragment","Modal","Form","Select","Input","TimePicker","getTable","getDishes","openNotification","layout","labelCol","span","wrapperCol","EditModal","editableData","visible","handleUpdate","onClose","form","useForm","tableNumber","setTableNumber","orders","setOrders","fetchTableNumber","then","res","data","error","fetchOrders","validateFields","values","resetFields","catch","info","console","log","table","map","id","table_number"],"mappings":"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","sourcesContent":["// React\nimport React, { useEffect, useState, Fragment } from \"react\";\n\n// third part\nimport { Modal, Form, Select, Input, TimePicker } from \"antd\";\n\n// Services\nimport { getTable } from \"../../../../../services/tableServices\";\nimport { getDishes } from \"../../../../../services/dishServices\";\n// custom\nimport { openNotification } from \"../../../../custom\";\n\nconst layout = {\n  labelCol: {\n    span: 5,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nconst EditModal = ({ editableData, visible, handleUpdate, onClose }) => {\n  const [form] = Form.useForm();\n  const [tableNumber, setTableNumber] = useState([]);\n  const [orders, setOrders] = useState([]);\n\n  const fetchTableNumber = async () => {\n    try {\n      await getTable()\n        .then((res) => res.data)\n        .then((data) => setTableNumber(data));\n    } catch (error) {\n      openNotification(\"error\", \"Cant get tables\", \"Check connection\");\n    }\n  };\n  const fetchOrders = async () => {\n    try {\n      await getDishes()\n        .then((res) => res.data)\n        .then((data) => setOrders(data));\n    } catch (error) {}\n  };\n  useEffect(() => {\n    fetchTableNumber();\n    fetchOrders();\n  }, []);\n\n  return (\n    <Fragment>\n      <Modal\n        closable={false}\n        visible={visible}\n        okText=\"Edit\"\n        cancelText=\"Cancel\"\n        onCancel={onClose}\n        onOk={() => {\n          form\n            .validateFields()\n            .then((values) => {\n              form.resetFields();\n              handleUpdate(values);\n            })\n            .catch((info) => {\n              console.log(\"Validate Failed:\", info);\n            });\n        }}\n      >\n        <Form {...layout} hideRequiredMark onFinish={handleUpdate} form={form}>\n          <Select defaultValue={editableData.table}>\n            {tableNumber.map((table) => (\n              <Select.Option key={table.id} value={table.table_number}>\n                {table.table_number}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form>\n      </Modal>\n    </Fragment>\n  );\n  // return (\n  //   <Modal\n  //     closable={false}\n  //     visible={visible}\n  //     okText=\"Edit\"\n  //     cancelText=\"Cancel\"\n  //     onCancel={onClose}\n  //     onOk={() => {\n  //       form\n  //         .validateFields()\n  //         .then((values) => {\n  //           form.resetFields();\n  //           handleUpdate(values);\n  //         })\n  //         .catch((info) => {\n  //           console.log(\"Validate Failed:\", info);\n  //         });\n  //     }}\n  //   >\n  //     <Form\n  //       {...layout}\n  //       hideRequiredMark\n  //       onFinish={handleUpdate}\n  //       form={form}\n  //       initialValues={{\n  //         id: editableData.id,\n  //         table_number: editableData.table,\n  //         customer_name: editableData.customer,\n  //         dish: editableData.ordered_items,\n  //         price: editableData.price,\n  //       }}\n  //     >\n  //       <Form.Item name=\"id\">\n  //         <h1>Edit Orders</h1>\n  //       </Form.Item>\n  //       <Form.Item\n  //         label=\"Table Number\"\n  //         name=\"table_number\"\n  //         rules={[{ required: true, message: \"Enter Table Number\" }]}\n  //       >\n  //         <Select placeholder=\"select table number\">\n  //           {tableNumber.map((table) => (\n  //             <Select.Option key={table.id} value={table.table_number}>\n  //               {table.table_number}\n  //             </Select.Option>\n  //           ))}\n  //         </Select>\n  //       </Form.Item>\n  //       <Form.Item\n  //         label=\"Customer\"\n  //         name=\"customer_name\"\n  //         rules={[{ required: true, message: \"Enter Customer Name\" }]}\n  //       >\n  //         <Input placeholder=\"Customer Name\" allowClear />\n  //       </Form.Item>\n  //       <Form.Item label=\"Order\" name=\"dish\">\n  //         <Select placeholder=\"Please select\" mode=\"multiple\">\n  //           {orders.map((or) => (\n  //             <Select.Option key={or.id} value={or.name}>\n  //               {or.name}\n  //             </Select.Option>\n  //           ))}\n  //         </Select>\n  //       </Form.Item>\n  //       <Form.Item label=\"Price\" name=\"price\">\n  //         <Select placeholder=\"Please select\" mode=\"multiple\">\n  //           {orders.map((or) => (\n  //             <Select.Option key={or.id} value={or.name}>\n  //               {or.name}-{or.price}¥\n  //             </Select.Option>\n  //           ))}\n  //         </Select>\n  //       </Form.Item>\n  //       <Form.Item\n  //         label=\"Time\"\n  //         name=\"time\"\n  //         placeholder=\"select time\"\n  //         rules={[{ required: true, message: \"Enter ordered time\" }]}\n  //       >\n  //         <TimePicker />\n  //       </Form.Item>\n  //     </Form>\n  //   </Modal>\n  // );\n};\n\nexport default EditModal;\n"]},"metadata":{},"sourceType":"module"}