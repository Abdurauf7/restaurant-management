{"ast":null,"code":"import jwtDecode from \"jwt-decode\";\nimport https from \"./httpService\";\nimport { apiUrl, tokenKey } from \"../config.json\";\nimport { openNotification } from \"../components/custom\";\nexport function login(values, history) {\n  return https.post(apiUrl + \"user/login\", values).then(res => {\n    localStorage.setItem(\"token\", res.data.token);\n\n    if (res.data.status === 200) {\n      history.replace(`/admin/${res.data.data}`);\n      openNotification(\"success\", `${res.data.data} Successfully logged in`);\n    } else if (res.data.status === 302) {\n      history.replace(`/user/${res.data.data}`);\n      openNotification(\"success\", `${res.data.data} Successfully logged in`);\n    } else if (res.data.status === 401) {\n      return openNotification(\"error\", \"Email or Password is not valid\", \"Please retype Email or Password\");\n    } else if (res.data.status === 404) {\n      return openNotification(\"error\", \"Email or Password is not valid\", \"Please retype Email or Password\");\n    }\n  });\n}\nexport function getCurrentuser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (error) {\n    return null;\n  }\n}","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/services/auth.js"],"names":["jwtDecode","https","apiUrl","tokenKey","openNotification","login","values","history","post","then","res","localStorage","setItem","data","token","status","replace","getCurrentuser","jwt","getItem","error"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,gBAAjC;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AAEA,OAAO,SAASC,KAAT,CAAeC,MAAf,EAAuBC,OAAvB,EAAgC;AACrC,SAAON,KAAK,CAACO,IAAN,CAAWN,MAAM,GAAG,YAApB,EAAkCI,MAAlC,EAA0CG,IAA1C,CAA+CC,GAAG,IAAI;AAC3DC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,GAAG,CAACG,IAAJ,CAASC,KAAvC;;AACA,QAAIJ,GAAG,CAACG,IAAJ,CAASE,MAAT,KAAoB,GAAxB,EAA6B;AAC3BR,MAAAA,OAAO,CAACS,OAAR,CAAiB,UAASN,GAAG,CAACG,IAAJ,CAASA,IAAK,EAAxC;AACAT,MAAAA,gBAAgB,CAAC,SAAD,EAAa,GAAEM,GAAG,CAACG,IAAJ,CAASA,IAAK,yBAA7B,CAAhB;AACD,KAHD,MAGO,IAAIH,GAAG,CAACG,IAAJ,CAASE,MAAT,KAAoB,GAAxB,EAA6B;AAClCR,MAAAA,OAAO,CAACS,OAAR,CAAiB,SAAQN,GAAG,CAACG,IAAJ,CAASA,IAAK,EAAvC;AACAT,MAAAA,gBAAgB,CAAC,SAAD,EAAa,GAAEM,GAAG,CAACG,IAAJ,CAASA,IAAK,yBAA7B,CAAhB;AACD,KAHM,MAGA,IAAIH,GAAG,CAACG,IAAJ,CAASE,MAAT,KAAoB,GAAxB,EAA6B;AAClC,aAAOX,gBAAgB,CACrB,OADqB,EAErB,gCAFqB,EAGrB,iCAHqB,CAAvB;AAKD,KANM,MAMA,IAAIM,GAAG,CAACG,IAAJ,CAASE,MAAT,KAAoB,GAAxB,EAA6B;AAClC,aAAOX,gBAAgB,CACrB,OADqB,EAErB,gCAFqB,EAGrB,iCAHqB,CAAvB;AAKD;AACF,GArBM,CAAP;AAsBD;AAED,OAAO,SAASa,cAAT,GAA0B;AAC/B,MAAI;AACF,UAAMC,GAAG,GAAGP,YAAY,CAACQ,OAAb,CAAqBhB,QAArB,CAAZ;AACA,WAAOH,SAAS,CAACkB,GAAD,CAAhB;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,WAAO,IAAP;AACD;AACF","sourcesContent":["import jwtDecode from \"jwt-decode\";\nimport https from \"./httpService\";\nimport { apiUrl, tokenKey } from \"../config.json\";\nimport { openNotification } from \"../components/custom\";\n\nexport function login(values, history) {\n  return https.post(apiUrl + \"user/login\", values).then(res => {\n    localStorage.setItem(\"token\", res.data.token);\n    if (res.data.status === 200) {\n      history.replace(`/admin/${res.data.data}`);\n      openNotification(\"success\", `${res.data.data} Successfully logged in`);\n    } else if (res.data.status === 302) {\n      history.replace(`/user/${res.data.data}`);\n      openNotification(\"success\", `${res.data.data} Successfully logged in`);\n    } else if (res.data.status === 401) {\n      return openNotification(\n        \"error\",\n        \"Email or Password is not valid\",\n        \"Please retype Email or Password\"\n      );\n    } else if (res.data.status === 404) {\n      return openNotification(\n        \"error\",\n        \"Email or Password is not valid\",\n        \"Please retype Email or Password\"\n      );\n    }\n  });\n}\n\nexport function getCurrentuser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (error) {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}