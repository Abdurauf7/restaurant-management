{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getThemeFromTypeName = getThemeFromTypeName;\nexports.removeTypeTheme = removeTypeTheme;\nexports.withThemeSuffix = withThemeSuffix;\nexports.alias = alias;\nexports.svgBaseProps = void 0;\n\nvar _warning = _interopRequireDefault(require(\"../_util/warning\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n} // These props make sure that the SVG behaviours like general text.\n// Reference: https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4\n\n\nvar svgBaseProps = {\n  width: '1em',\n  height: '1em',\n  fill: 'currentColor',\n  'aria-hidden': true,\n  focusable: 'false'\n};\nexports.svgBaseProps = svgBaseProps;\nvar fillTester = /-fill$/;\nvar outlineTester = /-o$/;\nvar twoToneTester = /-twotone$/;\n\nfunction getThemeFromTypeName(type) {\n  var result = null;\n\n  if (fillTester.test(type)) {\n    result = 'filled';\n  } else if (outlineTester.test(type)) {\n    result = 'outlined';\n  } else if (twoToneTester.test(type)) {\n    result = 'twoTone';\n  }\n\n  return result;\n}\n\nfunction removeTypeTheme(type) {\n  return type.replace(fillTester, '').replace(outlineTester, '').replace(twoToneTester, '');\n}\n\nfunction withThemeSuffix(type, theme) {\n  var result = type;\n\n  if (theme === 'filled') {\n    result += '-fill';\n  } else if (theme === 'outlined') {\n    result += '-o';\n  } else if (theme === 'twoTone') {\n    result += '-twotone';\n  } else {\n    (0, _warning[\"default\"])(false, 'Icon', \"This icon '\".concat(type, \"' has unknown theme '\").concat(theme, \"'\"));\n  }\n\n  return result;\n} // For alias or compatibility\n\n\nfunction alias(type) {\n  var newType = type;\n\n  switch (type) {\n    case 'cross':\n      newType = 'close';\n      break;\n    // https://github.com/ant-design/ant-design/issues/13007\n\n    case 'interation':\n      newType = 'interaction';\n      break;\n    // https://github.com/ant-design/ant-design/issues/16810\n\n    case 'canlendar':\n      newType = 'calendar';\n      break;\n    // https://github.com/ant-design/ant-design/issues/17448\n\n    case 'colum-height':\n      newType = 'column-height';\n      break;\n\n    default:\n  }\n\n  (0, _warning[\"default\"])(newType === type, 'Icon', \"Icon '\".concat(type, \"' was a typo and is now deprecated, please use '\").concat(newType, \"' instead.\"));\n  return newType;\n}","map":{"version":3,"sources":["icon/utils.js"],"names":["svgBaseProps","width","height","fill","focusable","fillTester","outlineTester","twoToneTester","result","type","theme","newType"],"mappings":";;;;;;;;;;;AAAA,IAAA,QAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,kBAAA,CAAA,CAAA;;;;;;EACA;AACA;;;AACO,IAAMA,YAAY,GAAG;AACxBC,EAAAA,KAAK,EADmB,KAAA;AAExBC,EAAAA,MAAM,EAFkB,KAAA;AAGxBC,EAAAA,IAAI,EAHoB,cAAA;AAIxB,iBAJwB,IAAA;AAKxBC,EAAAA,SAAS,EAAE;AALa,CAArB;;AAOP,IAAMC,UAAU,GAAhB,QAAA;AACA,IAAMC,aAAa,GAAnB,KAAA;AACA,IAAMC,aAAa,GAAnB,WAAA;;AACO,SAAA,oBAAA,CAAA,IAAA,EAAoC;AACvC,MAAIC,MAAM,GAAV,IAAA;;AACA,MAAIH,UAAU,CAAVA,IAAAA,CAAJ,IAAIA,CAAJ,EAA2B;AACvBG,IAAAA,MAAM,GAANA,QAAAA;AADJ,GAAA,MAGK,IAAIF,aAAa,CAAbA,IAAAA,CAAJ,IAAIA,CAAJ,EAA8B;AAC/BE,IAAAA,MAAM,GAANA,UAAAA;AADC,GAAA,MAGA,IAAID,aAAa,CAAbA,IAAAA,CAAJ,IAAIA,CAAJ,EAA8B;AAC/BC,IAAAA,MAAM,GAANA,SAAAA;AACH;;AACD,SAAA,MAAA;AACH;;AACM,SAAA,eAAA,CAAA,IAAA,EAA+B;AAClC,SAAOC,IAAI,CAAJA,OAAAA,CAAAA,UAAAA,EAAAA,EAAAA,EAAAA,OAAAA,CAAAA,aAAAA,EAAAA,EAAAA,EAAAA,OAAAA,CAAAA,aAAAA,EAAP,EAAOA,CAAP;AAIH;;AACM,SAAA,eAAA,CAAA,IAAA,EAAA,KAAA,EAAsC;AACzC,MAAID,MAAM,GAAV,IAAA;;AACA,MAAIE,KAAK,KAAT,QAAA,EAAwB;AACpBF,IAAAA,MAAM,IAANA,OAAAA;AADJ,GAAA,MAGK,IAAIE,KAAK,KAAT,UAAA,EAA0B;AAC3BF,IAAAA,MAAM,IAANA,IAAAA;AADC,GAAA,MAGA,IAAIE,KAAK,KAAT,SAAA,EAAyB;AAC1BF,IAAAA,MAAM,IAANA,UAAAA;AADC,GAAA,MAGA;AACD,KAAA,GAAA,QAAA,CAAA,SAAA,CAAA,EAAA,KAAA,EAAA,MAAA,EAAA,cAAA,MAAA,CAAA,IAAA,EAAA,uBAAA,EAAA,MAAA,CAAA,KAAA,EAAA,GAAA,CAAA;AACH;;AACD,SAAA,MAAA;EAEJ;;;AACO,SAAA,KAAA,CAAA,IAAA,EAAqB;AACxB,MAAIG,OAAO,GAAX,IAAA;;AACA,UAAA,IAAA;AACI,SAAA,OAAA;AACIA,MAAAA,OAAO,GAAPA,OAAAA;AACA;AACJ;;AACA,SAAA,YAAA;AACIA,MAAAA,OAAO,GAAPA,aAAAA;AACA;AACJ;;AACA,SAAA,WAAA;AACIA,MAAAA,OAAO,GAAPA,UAAAA;AACA;AACJ;;AACA,SAAA,cAAA;AACIA,MAAAA,OAAO,GAAPA,eAAAA;AACA;;AACJ;AAhBJ;;AAkBA,GAAA,GAAA,QAAA,CAAA,SAAA,CAAA,EAAQA,OAAO,KAAf,IAAA,EAAA,MAAA,EAAA,SAAA,MAAA,CAAA,IAAA,EAAA,kDAAA,EAAA,MAAA,CAAA,OAAA,EAAA,YAAA,CAAA;AACA,SAAA,OAAA;AACH","sourcesContent":["import warning from '../_util/warning';\n// These props make sure that the SVG behaviours like general text.\n// Reference: https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4\nexport const svgBaseProps = {\n    width: '1em',\n    height: '1em',\n    fill: 'currentColor',\n    'aria-hidden': true,\n    focusable: 'false',\n};\nconst fillTester = /-fill$/;\nconst outlineTester = /-o$/;\nconst twoToneTester = /-twotone$/;\nexport function getThemeFromTypeName(type) {\n    let result = null;\n    if (fillTester.test(type)) {\n        result = 'filled';\n    }\n    else if (outlineTester.test(type)) {\n        result = 'outlined';\n    }\n    else if (twoToneTester.test(type)) {\n        result = 'twoTone';\n    }\n    return result;\n}\nexport function removeTypeTheme(type) {\n    return type\n        .replace(fillTester, '')\n        .replace(outlineTester, '')\n        .replace(twoToneTester, '');\n}\nexport function withThemeSuffix(type, theme) {\n    let result = type;\n    if (theme === 'filled') {\n        result += '-fill';\n    }\n    else if (theme === 'outlined') {\n        result += '-o';\n    }\n    else if (theme === 'twoTone') {\n        result += '-twotone';\n    }\n    else {\n        warning(false, 'Icon', `This icon '${type}' has unknown theme '${theme}'`);\n    }\n    return result;\n}\n// For alias or compatibility\nexport function alias(type) {\n    let newType = type;\n    switch (type) {\n        case 'cross':\n            newType = 'close';\n            break;\n        // https://github.com/ant-design/ant-design/issues/13007\n        case 'interation':\n            newType = 'interaction';\n            break;\n        // https://github.com/ant-design/ant-design/issues/16810\n        case 'canlendar':\n            newType = 'calendar';\n            break;\n        // https://github.com/ant-design/ant-design/issues/17448\n        case 'colum-height':\n            newType = 'column-height';\n            break;\n        default:\n    }\n    warning(newType === type, 'Icon', `Icon '${type}' was a typo and is now deprecated, please use '${newType}' instead.`);\n    return newType;\n}\n"]},"metadata":{},"sourceType":"script"}