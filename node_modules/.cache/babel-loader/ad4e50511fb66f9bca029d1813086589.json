{"ast":null,"code":"var _jsxFileName = \"/Users/abdurauf/Desktop/\\u6BD5\\u4E1A\\u8BBE\\u8BA1/orginal/restaurant-management-system/plov/src/components/Employee/components/Information/components/informationList.jsx\";\nimport React, { Fragment } from \"react\";\nimport { Card, Row, Col, Divider, Typography, Input } from \"antd\";\nimport { PrinterOutlined } from \"@ant-design/icons\";\nimport PrintBill from \"./printBill\";\nimport { PDFDownloadLink } from \"react-pdf\";\nimport { Page, Text, View, Document, StyleSheet } from \"react-pdf/renderer\";\nimport _ from \"lodash\";\n\nconst InformationList = ({\n  data\n}) => {\n  const printBill = bill => {\n    console.log(bill);\n    return React.createElement(Document, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(Page, {\n      size: \"A4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, bill)), React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Section #2\"))));\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, data.map(info => React.createElement(Col, {\n    key: info.id,\n    xs: 24,\n    sm: 12,\n    md: 12,\n    lg: 8,\n    xl: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Card, {\n    key: info.id,\n    className: \"m-2 border border-warning rounded\",\n    title: React.createElement(\"p\", {\n      className: \"text-center bg-light border border-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, `Table:${info.table}`),\n    cover: React.createElement(Typography.Title, {\n      className: \"text-secondary text-center mt-4 font-weight-light text-uppercase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, info.customer),\n    actions: [React.createElement(PrinterOutlined, {\n      onClick: () => printBill(info),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Card.Meta, {\n    title: React.createElement(Input.TextArea, {\n      className: \"border border-warning rounded font-weight-bold text-uppercase text-dark\",\n      value: `Orders: ${info.ordered_items}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }) // description={\n    // <Typography.Title\n    //   level={3}\n    //   className=\"border border-danger bg-light rounded text-info text-center\"\n    // >{`Total is : ${(info = _.sum(\n    //   info.price\n    // ))}¥`}</Typography.Title>\n    // }\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }))))));\n};\n\nexport default InformationList;","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/Employee/components/Information/components/informationList.jsx"],"names":["React","Fragment","Card","Row","Col","Divider","Typography","Input","PrinterOutlined","PrintBill","PDFDownloadLink","Page","Text","View","Document","StyleSheet","_","InformationList","data","printBill","bill","console","log","map","info","id","table","customer","ordered_items"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,OAAzB,EAAkCC,UAAlC,EAA8CC,KAA9C,QAA2D,MAA3D;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,oBAAvD;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACpC,QAAMC,SAAS,GAAIC,IAAD,IAAU;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,IAAP,CADF,CADF,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAJF,CADF,CADF;AAYD,GAdD;;AAgBA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACK,GAAL,CAAUC,IAAD,IACR,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAmB,IAAA,EAAE,EAAE,EAAvB;AAA2B,IAAA,EAAE,EAAE,EAA/B;AAAmC,IAAA,EAAE,EAAE,EAAvC;AAA2C,IAAA,EAAE,EAAE,CAA/C;AAAkD,IAAA,EAAE,EAAE,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,GAAG,EAAED,IAAI,CAACC,EADZ;AAEE,IAAA,SAAS,EAAC,mCAFZ;AAGE,IAAA,KAAK,EACH;AAAG,MAAA,SAAS,EAAC,yCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyD,SAAQD,IAAI,CAACE,KAAM,EAA5E,CAJJ;AAME,IAAA,KAAK,EACH,oBAAC,UAAD,CAAY,KAAZ;AAAkB,MAAA,SAAS,EAAC,kEAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,IAAI,CAACG,QADR,CAPJ;AAWE,IAAA,OAAO,EAAE,CAAC,oBAAC,eAAD;AAAiB,MAAA,OAAO,EAAE,MAAMR,SAAS,CAACK,IAAD,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAeE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EACH,oBAAC,KAAD,CAAO,QAAP;AACE,MAAA,SAAS,EAAC,yEADZ;AAEE,MAAA,KAAK,EAAG,WAAUA,IAAI,CAACI,aAAc,EAFvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAOE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF,CADD,CADH,CADF,CADF;AA0CD,CA3DD;;AA6DA,eAAeX,eAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Card, Row, Col, Divider, Typography, Input } from \"antd\";\nimport { PrinterOutlined } from \"@ant-design/icons\";\nimport PrintBill from \"./printBill\";\nimport { PDFDownloadLink } from \"react-pdf\";\nimport { Page, Text, View, Document, StyleSheet } from \"react-pdf/renderer\";\nimport _ from \"lodash\";\n\nconst InformationList = ({ data }) => {\n  const printBill = (bill) => {\n    console.log(bill);\n    return (\n      <Document>\n        <Page size=\"A4\">\n          <View>\n            <Text>{bill}</Text>\n          </View>\n          <View>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    );\n  };\n\n  return (\n    <Fragment>\n      <Row>\n        {data.map((info) => (\n          <Col key={info.id} xs={24} sm={12} md={12} lg={8} xl={6}>\n            <Card\n              key={info.id}\n              className=\"m-2 border border-warning rounded\"\n              title={\n                <p className=\"text-center bg-light border border-info\">{`Table:${info.table}`}</p>\n              }\n              cover={\n                <Typography.Title className=\"text-secondary text-center mt-4 font-weight-light text-uppercase\">\n                  {info.customer}\n                </Typography.Title>\n              }\n              actions={[<PrinterOutlined onClick={() => printBill(info)} />]}\n            >\n              <Divider />\n\n              <Card.Meta\n                title={\n                  <Input.TextArea\n                    className=\"border border-warning rounded font-weight-bold text-uppercase text-dark\"\n                    value={`Orders: ${info.ordered_items}`}\n                  />\n                }\n                // description={\n                // <Typography.Title\n                //   level={3}\n                //   className=\"border border-danger bg-light rounded text-info text-center\"\n                // >{`Total is : ${(info = _.sum(\n                //   info.price\n                // ))}¥`}</Typography.Title>\n                // }\n              />\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </Fragment>\n  );\n};\n\nexport default InformationList;\n"]},"metadata":{},"sourceType":"module"}