{"ast":null,"code":"const column = [// phone_number,\n// work_position,\n// age,\n// salary,\n// email,\n// date\n{\n  title: \"First Name\",\n  dataIndex: \"first_name\",\n  filters: [{\n    text: \"Mr\",\n    value: \"Mr\"\n  }, {\n    text: \"Ms\",\n    value: \"Ms\"\n  }],\n  onFilter: (value, record) => record.first_name.indexOf(value) === 0,\n  sorter: (a, b) => a.first_name.length - b.first_name.length,\n  sortDirections: [\"descend\", \"ascend\"]\n}, {\n  title: \"Last Name\",\n  dataIndex: \"last_name\",\n  filters: [{\n    text: \"Mery\",\n    value: \"Mery\"\n  }],\n  onFilter: (value, record) => record.last_name.indexOf(value) === 0,\n  sorter: (a, b) => a.last_name.length - b.last_name.length,\n  sortDirections: [\"descend\"]\n}, {\n  title: \"Gender\",\n  dataIndex: \"gender\",\n  filters: [{\n    text: \"Female\",\n    value: \"Female\"\n  }, {\n    text: \"Male\",\n    value: \"Male\"\n  }],\n  filterMultiple: false,\n  onFilter: (value, record) => record.gender.indexOf(value) === 0,\n  sorter: (a, b) => a.gender.length - b.gender.length,\n  sortDirections: [\"descend\"]\n}, {\n  title: \"Age\",\n  dataIndex: \"age\",\n  defaultSortOrder: \"descend\",\n  sorter: (a, b) => a.age - b.age\n}, {\n  title: \"Address\",\n  dataIndex: \"address\",\n  filters: [{\n    text: \"China\",\n    value: \"China\"\n  }, {\n    text: \"Russian\",\n    value: \"Russian\"\n  }],\n  filterMultiple: false,\n  onFilter: (value, record) => record.address.indexOf(value) === 0,\n  sorter: (a, b) => a.address.length - b.address.length,\n  sortDirections: [\"descend\", \"ascend\"]\n}, {\n  title: \"Phone\",\n  dataIndex: \"phone_number\",\n  defaultSortOrder: \"descend\",\n  sorter: (a, b) => a.phone_number.length - b.phone_number.length,\n  sortDirections: [\"descend\", \"ascend\"]\n}];\nexport { column };","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/Admin/components/PersonalComponent/components/column.jsx"],"names":["column","title","dataIndex","filters","text","value","onFilter","record","first_name","indexOf","sorter","a","b","length","sortDirections","last_name","filterMultiple","gender","defaultSortOrder","age","address","phone_number"],"mappings":"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","sourcesContent":["const column = [\n  // phone_number,\n  // work_position,\n  // age,\n  // salary,\n  // email,\n  // date\n  {\n    title: \"First Name\",\n    dataIndex: \"first_name\",\n    filters: [\n      {\n        text: \"Mr\",\n        value: \"Mr\"\n      },\n      {\n        text: \"Ms\",\n        value: \"Ms\"\n      }\n    ],\n    onFilter: (value, record) => record.first_name.indexOf(value) === 0,\n    sorter: (a, b) => a.first_name.length - b.first_name.length,\n    sortDirections: [\"descend\", \"ascend\"]\n  },\n  {\n    title: \"Last Name\",\n    dataIndex: \"last_name\",\n    filters: [\n      {\n        text: \"Mery\",\n        value: \"Mery\"\n      }\n    ],\n\n    onFilter: (value, record) => record.last_name.indexOf(value) === 0,\n    sorter: (a, b) => a.last_name.length - b.last_name.length,\n    sortDirections: [\"descend\"]\n  },\n  {\n    title: \"Gender\",\n    dataIndex: \"gender\",\n    filters: [\n      {\n        text: \"Female\",\n        value: \"Female\"\n      },\n      {\n        text: \"Male\",\n        value: \"Male\"\n      }\n    ],\n    filterMultiple: false,\n    onFilter: (value, record) => record.gender.indexOf(value) === 0,\n    sorter: (a, b) => a.gender.length - b.gender.length,\n    sortDirections: [\"descend\"]\n  },\n  {\n    title: \"Age\",\n    dataIndex: \"age\",\n    defaultSortOrder: \"descend\",\n    sorter: (a, b) => a.age - b.age\n  },\n  {\n    title: \"Address\",\n    dataIndex: \"address\",\n    filters: [\n      {\n        text: \"China\",\n        value: \"China\"\n      },\n      {\n        text: \"Russian\",\n        value: \"Russian\"\n      }\n    ],\n    filterMultiple: false,\n    onFilter: (value, record) => record.address.indexOf(value) === 0,\n    sorter: (a, b) => a.address.length - b.address.length,\n    sortDirections: [\"descend\", \"ascend\"]\n  },\n  {\n    title: \"Phone\",\n    dataIndex: \"phone_number\",\n    defaultSortOrder: \"descend\",\n    sorter: (a, b) => a.phone_number.length - b.phone_number.length,\n    sortDirections: [\"descend\", \"ascend\"]\n  }\n];\n\nexport { column };\n"]},"metadata":{},"sourceType":"module"}