{"ast":null,"code":"var _jsxFileName = \"/Users/abdurauf/Desktop/\\u6BD5\\u4E1A\\u8BBE\\u8BA1/orginal/restaurant-management-system/plov/src/components/Admin/components/PersonalComponent/components/column.jsx\";\nconst column = [// phone_number,\n// work_position,\n// age,\n// salary,\n// email,\n// date\n{\n  title: \"First Name\",\n  dataIndex: \"first_name\",\n  render: first_name => React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, first_name.map(tag => {\n    let color = tag.length > 5 ? \"geekblue\" : \"green\";\n\n    if (tag === \"loser\") {\n      color = \"volcano\";\n    }\n\n    return React.createElement(Tag, {\n      color: color,\n      key: tag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, tag.toUpperCase());\n  })) // filters: [\n  //   {\n  //     text: \"Ms\",\n  //     value: \"Ms\"\n  //   }\n  // ],\n  // filterMultiple: false,\n  // onFilter: (value, record) => record.first_name.indexOf(value) === 0,\n  // sorter: (a, b) => a.first_name.length - b.first_name.length,\n  // sortDirections: [\"descend\", \"ascend\"]\n\n}, {\n  title: \"Last Name\",\n  dataIndex: \"last_name\",\n  onFilter: (value, record) => record.last_name.indexOf(value) === 0,\n  sorter: (a, b) => a.last_name.length - b.last_name.length,\n  sortDirections: [\"descend\", \"ascend\"]\n}, {\n  title: \"Gender\",\n  dataIndex: \"gender\",\n  filters: [{\n    text: \"Female\",\n    value: \"Female\"\n  }, {\n    text: \"Male\",\n    value: \"Male\"\n  }],\n  filterMultiple: false,\n  onFilter: (value, record) => record.gender.indexOf(value) === 0 // sorter: (a, b) => a.gender.length - b.gender.length,\n  // sortDirections: [\"descend\"]\n\n}, {\n  title: \"Age\",\n  dataIndex: \"age\",\n  // defaultSortOrder: \"descend\",\n  sorter: (a, b) => a.age - b.age,\n  sortDirections: [\"ascend\"]\n}, {\n  title: \"Address\",\n  dataIndex: \"address\",\n  filters: [{\n    text: \"China\",\n    value: \"China\"\n  }, {\n    text: \"Russian\",\n    value: \"Russian\"\n  }],\n  filterMultiple: false,\n  onFilter: (value, record) => record.address.indexOf(value) === 0,\n  sorter: (a, b) => a.address.length - b.address.length,\n  sortDirections: [\"descend\", \"ascend\"]\n}, {\n  title: \"Phone\",\n  dataIndex: \"phone_number\",\n  defaultSortOrder: \"descend\",\n  sorter: (a, b) => a.phone_number.length - b.phone_number.length,\n  sortDirections: [\"descend\", \"ascend\"]\n}];\nexport { column };","map":{"version":3,"sources":["/Users/abdurauf/Desktop/毕业设计/orginal/restaurant-management-system/plov/src/components/Admin/components/PersonalComponent/components/column.jsx"],"names":["column","title","dataIndex","render","first_name","map","tag","color","length","toUpperCase","onFilter","value","record","last_name","indexOf","sorter","a","b","sortDirections","filters","text","filterMultiple","gender","age","address","defaultSortOrder","phone_number"],"mappings":"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","sourcesContent":["const column = [\n  // phone_number,\n  // work_position,\n  // age,\n  // salary,\n  // email,\n  // date\n  {\n    title: \"First Name\",\n    dataIndex: \"first_name\",\n    render: first_name => (\n      <span>\n        {first_name.map(tag => {\n          let color = tag.length > 5 ? \"geekblue\" : \"green\";\n          if (tag === \"loser\") {\n            color = \"volcano\";\n          }\n          return (\n            <Tag color={color} key={tag}>\n              {tag.toUpperCase()}\n            </Tag>\n          );\n        })}\n      </span>\n    )\n    // filters: [\n    //   {\n    //     text: \"Ms\",\n    //     value: \"Ms\"\n    //   }\n    // ],\n    // filterMultiple: false,\n    // onFilter: (value, record) => record.first_name.indexOf(value) === 0,\n    // sorter: (a, b) => a.first_name.length - b.first_name.length,\n    // sortDirections: [\"descend\", \"ascend\"]\n  },\n  {\n    title: \"Last Name\",\n    dataIndex: \"last_name\",\n    onFilter: (value, record) => record.last_name.indexOf(value) === 0,\n    sorter: (a, b) => a.last_name.length - b.last_name.length,\n    sortDirections: [\"descend\", \"ascend\"]\n  },\n  {\n    title: \"Gender\",\n    dataIndex: \"gender\",\n    filters: [\n      {\n        text: \"Female\",\n        value: \"Female\"\n      },\n      {\n        text: \"Male\",\n        value: \"Male\"\n      }\n    ],\n    filterMultiple: false,\n    onFilter: (value, record) => record.gender.indexOf(value) === 0\n    // sorter: (a, b) => a.gender.length - b.gender.length,\n    // sortDirections: [\"descend\"]\n  },\n  {\n    title: \"Age\",\n    dataIndex: \"age\",\n    // defaultSortOrder: \"descend\",\n    sorter: (a, b) => a.age - b.age,\n    sortDirections: [\"ascend\"]\n  },\n  {\n    title: \"Address\",\n    dataIndex: \"address\",\n    filters: [\n      {\n        text: \"China\",\n        value: \"China\"\n      },\n      {\n        text: \"Russian\",\n        value: \"Russian\"\n      }\n    ],\n    filterMultiple: false,\n    onFilter: (value, record) => record.address.indexOf(value) === 0,\n    sorter: (a, b) => a.address.length - b.address.length,\n    sortDirections: [\"descend\", \"ascend\"]\n  },\n  {\n    title: \"Phone\",\n    dataIndex: \"phone_number\",\n    defaultSortOrder: \"descend\",\n    sorter: (a, b) => a.phone_number.length - b.phone_number.length,\n    sortDirections: [\"descend\", \"ascend\"]\n  }\n];\n\nexport { column };\n"]},"metadata":{},"sourceType":"module"}